# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.NonModal)
        MainWindow.setEnabled(True)
        MainWindow.resize(1239, 714)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(0, 0))
        MainWindow.setMaximumSize(QtCore.QSize(2560, 1440))
        font = QtGui.QFont()
        font.setFamily("fontin-smallcaps")
        font.setPointSize(16)
        MainWindow.setFont(font)
        MainWindow.setMouseTracking(True)
        MainWindow.setFocusPolicy(QtCore.Qt.ClickFocus)
        MainWindow.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/assets/images/vendor.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setWindowOpacity(1.0)
        MainWindow.setToolTipDuration(0)
        MainWindow.setLayoutDirection(QtCore.Qt.LeftToRight)
        MainWindow.setStyleSheet("QMainWindow {\n"
"    background-blend-mode: overlay;\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #f6f7fa, stop: 1 #dadbde);\n"
"}\n"
"QLineEdit {\n"
"text-align: center;\n"
"padding: 5px 10px;\n"
"font-size: 16px;\n"
"background-color: #444;\n"
"width: 100%;\n"
"box-sizing: border-box;\n"
"color: #FFF;\n"
"font-family: Open Sans;\n"
"border-image: none;\n"
"}\n"
"QToolBox {\n"
"text-align: center;\n"
"padding: 5px 10px;\n"
"font-size: 16px;\n"
"background-color: #444;\n"
"width: 100%;\n"
"box-sizing: border-box;\n"
"color: #FFF;\n"
"font-family: Open Sans;\n"
"border-image: none;\n"
"}\n"
"QGroupBox {\n"
"    border:0px ridge #8f8f91;\n"
"    border-radius: 0px;\n"
"    background-blend-mode: overlay;\n"
"    border-image: none;\n"
"}\n"
"QLabel {\n"
"text-align: center;\n"
"padding: 5px 10px;\n"
"font-size: 16px;\n"
"background-color: #444;\n"
"width: 100%;\n"
"box-sizing: border-box;\n"
"color: #FFF;\n"
"font-family: Open Sans;\n"
"border-image: none;\n"
"}\n"
"QStackedWidget {\n"
"    border: 0px;\n"
"    border-radius: 0px;\n"
"    background-blend-mode: overlay;\n"
"    border-image: none;\n"
"}\n"
"\n"
"QToolTip {\n"
"text-align: center;\n"
"padding: 5px 10px;\n"
"font-size: 16px;\n"
"background-color: #444;\n"
"width: 100%;\n"
"box-sizing: border-box;\n"
"color: #FFF;\n"
"font-family: Open Sans;\n"
"border-image: none;\n"
"}\n"
"QPushButton {\n"
"                border: 1px solid #000;\n"
"                  border-top-width: 1px;\n"
"                   border-right-width: 1px;\n"
"                   border-bottom-width: 1px;\n"
"                   border-left-width: 1px;\n"
"                   border-top-style: solid;\n"
"                 border-right-style: solid;\n"
"                  border-bottom-style: solid;\n"
"                   border-left-style: solid;\n"
"                   border-top-color: rgb(0, 0, 0);\n"
"                  border-right-color: rgb(0, 0, 0);\n"
"                   border-bottom-color: rgb(0, 0, 0);\n"
"                   border-left-color: rgb(0, 0, 0);\n"
"                  border-image-source: initial;\n"
"                  border-image-slice: initial;\n"
"                  border-image-width: initial;\n"
"                  border-image-outset: initial;\n"
"                border-image-repeat: initial;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               text-shadow: 1px 1px #000;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"               padding: 0px 10px;\n"
"                margin: 7px;\n"
"                font-family: Open Sans;\n"
"                font-size: 16px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"           }\n"
"            QPushButton::hover {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"           }\n"
"            QPushButton::pressed {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                                  stop: 0 #4b4b4b, stop: 1 #2d2d2d);\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"                border: 1px inset #FFF;\n"
"                box-shadow: none;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        MainWindow.setAnimated(True)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        MainWindow.setDockNestingEnabled(True)
        self.crafting_simulator_container = QtWidgets.QWidget(MainWindow)
        self.crafting_simulator_container.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.crafting_simulator_container.sizePolicy().hasHeightForWidth())
        self.crafting_simulator_container.setSizePolicy(sizePolicy)
        self.crafting_simulator_container.setMaximumSize(QtCore.QSize(2560, 1440))
        font = QtGui.QFont()
        font.setFamily("fontin-smallcaps")
        self.crafting_simulator_container.setFont(font)
        self.crafting_simulator_container.setMouseTracking(True)
        self.crafting_simulator_container.setAutoFillBackground(False)
        self.crafting_simulator_container.setObjectName("crafting_simulator_container")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.crafting_simulator_container)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setSpacing(0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.crafting_simulator = QtWidgets.QStackedWidget(self.crafting_simulator_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.crafting_simulator.sizePolicy().hasHeightForWidth())
        self.crafting_simulator.setSizePolicy(sizePolicy)
        self.crafting_simulator.setMinimumSize(QtCore.QSize(0, 0))
        self.crafting_simulator.setMaximumSize(QtCore.QSize(2560, 1440))
        self.crafting_simulator.setMouseTracking(True)
        self.crafting_simulator.setAutoFillBackground(False)
        self.crafting_simulator.setObjectName("crafting_simulator")
        self.landing_page = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.landing_page.sizePolicy().hasHeightForWidth())
        self.landing_page.setSizePolicy(sizePolicy)
        self.landing_page.setStyleSheet("QWidget {\n"
"border: 0px;\n"
"border-image: url(:/icons/assets/images/emubg.png);\n"
"}\n"
"QLabel {\n"
"text-align: center;\n"
"padding: 5px 10px;\n"
"font-size: 16px;\n"
"background-color: #444;\n"
"width: 100%;\n"
"box-sizing: border-box;\n"
"color: #FFF;\n"
"font-family: Open Sans;\n"
"}\n"
"QPushButton {\n"
"                border: 1px solid #000;\n"
"                  border-top-width: 1px;\n"
"                   border-right-width: 1px;\n"
"                   border-bottom-width: 1px;\n"
"                   border-left-width: 1px;\n"
"                   border-top-style: solid;\n"
"                 border-right-style: solid;\n"
"                  border-bottom-style: solid;\n"
"                   border-left-style: solid;\n"
"                   border-top-color: rgb(0, 0, 0);\n"
"                  border-right-color: rgb(0, 0, 0);\n"
"                   border-bottom-color: rgb(0, 0, 0);\n"
"                   border-left-color: rgb(0, 0, 0);\n"
"                  border-image-source: initial;\n"
"                  border-image-slice: initial;\n"
"                  border-image-width: initial;\n"
"                  border-image-outset: initial;\n"
"                border-image-repeat: initial;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               text-shadow: 1px 1px #000;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"           }\n"
"            QPushButton::hover {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"           }\n"
"            QPushButton::pressed {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                                  stop: 0 #4b4b4b, stop: 1 #2d2d2d);\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"                border: 1px inset #FFF;\n"
"                box-shadow: none;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.landing_page.setObjectName("landing_page")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.landing_page)
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_9.setSpacing(0)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.landing_page_container = QtWidgets.QWidget(self.landing_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.landing_page_container.sizePolicy().hasHeightForWidth())
        self.landing_page_container.setSizePolicy(sizePolicy)
        self.landing_page_container.setStyleSheet("border-image: none;")
        self.landing_page_container.setObjectName("landing_page_container")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.landing_page_container)
        self.verticalLayout_11.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_11.setSpacing(10)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.label = QtWidgets.QLabel(self.landing_page_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.label.setFont(font)
        self.label.setStyleSheet("QWidget {\n"
"    border-image: none;\n"
"    border: 0px;\n"
"}\n"
"")
        self.label.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.label.setObjectName("label")
        self.verticalLayout_11.addWidget(self.label, 0, QtCore.Qt.AlignTop)
        self.startCraftingProject = QtWidgets.QPushButton(self.landing_page_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.startCraftingProject.sizePolicy().hasHeightForWidth())
        self.startCraftingProject.setSizePolicy(sizePolicy)
        self.startCraftingProject.setObjectName("startCraftingProject")
        self.verticalLayout_11.addWidget(self.startCraftingProject, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.loadSavedProject = QtWidgets.QPushButton(self.landing_page_container)
        self.loadSavedProject.setObjectName("loadSavedProject")
        self.verticalLayout_11.addWidget(self.loadSavedProject, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.importItemFromPOE = QtWidgets.QPushButton(self.landing_page_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.importItemFromPOE.sizePolicy().hasHeightForWidth())
        self.importItemFromPOE.setSizePolicy(sizePolicy)
        self.importItemFromPOE.setObjectName("importItemFromPOE")
        self.verticalLayout_11.addWidget(self.importItemFromPOE, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.verticalLayout_9.addWidget(self.landing_page_container, 0, QtCore.Qt.AlignTop)
        self.crafting_simulator.addWidget(self.landing_page)
        self.base_groups_page = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.base_groups_page.sizePolicy().hasHeightForWidth())
        self.base_groups_page.setSizePolicy(sizePolicy)
        self.base_groups_page.setMaximumSize(QtCore.QSize(2560, 1440))
        self.base_groups_page.setStyleSheet("QWidget {\n"
"border: 0px;\n"
"border-image: url(:/icons/assets/images/emubg.png);\n"
"}\n"
"\n"
"QLabel {\n"
"text-align: center;\n"
"padding: 5px 10px;\n"
"font-size: 16px;\n"
"background-color: #444;\n"
"width: 100%;\n"
"box-sizing: border-box;\n"
"color: #FFF;\n"
"font-family: Open Sans;\n"
"}")
        self.base_groups_page.setObjectName("base_groups_page")
        self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.base_groups_page)
        self.verticalLayout_14.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_14.setSpacing(0)
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.base_groups_container = QtWidgets.QWidget(self.base_groups_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.base_groups_container.sizePolicy().hasHeightForWidth())
        self.base_groups_container.setSizePolicy(sizePolicy)
        self.base_groups_container.setMinimumSize(QtCore.QSize(0, 0))
        self.base_groups_container.setMaximumSize(QtCore.QSize(2560, 1440))
        self.base_groups_container.setStyleSheet("")
        self.base_groups_container.setObjectName("base_groups_container")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.base_groups_container)
        self.verticalLayout_12.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_12.setSpacing(0)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.header = QtWidgets.QWidget(self.base_groups_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.header.sizePolicy().hasHeightForWidth())
        self.header.setSizePolicy(sizePolicy)
        self.header.setStyleSheet("QWidget {\n"
"    border-image:none;\n"
"}")
        self.header.setObjectName("header")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.header)
        self.verticalLayout_13.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_13.setSpacing(0)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.base_group_label = QtWidgets.QLabel(self.header)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.base_group_label.sizePolicy().hasHeightForWidth())
        self.base_group_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        self.base_group_label.setFont(font)
        self.base_group_label.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.base_group_label.setObjectName("base_group_label")
        self.verticalLayout_13.addWidget(self.base_group_label, 0, QtCore.Qt.AlignTop)
        self.verticalLayout_12.addWidget(self.header)
        self.base_group_btns = QtWidgets.QWidget(self.base_groups_container)
        self.base_group_btns.setStyleSheet("QWidget {\n"
"border-image: none;\n"
"}\n"
"QPushButton {\n"
"                border: 1px solid #000;\n"
"                  border-top-width: 1px;\n"
"                   border-right-width: 1px;\n"
"                   border-bottom-width: 1px;\n"
"                   border-left-width: 1px;\n"
"                   border-top-style: solid;\n"
"                 border-right-style: solid;\n"
"                  border-bottom-style: solid;\n"
"                   border-left-style: solid;\n"
"                   border-top-color: rgb(0, 0, 0);\n"
"                  border-right-color: rgb(0, 0, 0);\n"
"                   border-bottom-color: rgb(0, 0, 0);\n"
"                   border-left-color: rgb(0, 0, 0);\n"
"                  border-image-source: initial;\n"
"                  border-image-slice: initial;\n"
"                  border-image-width: initial;\n"
"                  border-image-outset: initial;\n"
"                border-image-repeat: initial;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               text-shadow: 1px 1px #000;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"           }\n"
"            QPushButton::hover {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"           }\n"
"            QPushButton::pressed {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                                  stop: 0 #4b4b4b, stop: 1 #2d2d2d);\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"                border: 5px inset #FFF;\n"
"                box-shadow: none;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.base_group_btns.setObjectName("base_group_btns")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.base_group_btns)
        self.gridLayout_9.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_9.setSpacing(0)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.one_handed_weapons_btn = QtWidgets.QPushButton(self.base_group_btns)
        self.one_handed_weapons_btn.setObjectName("one_handed_weapons_btn")
        self.base_group_btns_group = QtWidgets.QButtonGroup(MainWindow)
        self.base_group_btns_group.setObjectName("base_group_btns_group")
        self.base_group_btns_group.addButton(self.one_handed_weapons_btn)
        self.gridLayout_9.addWidget(self.one_handed_weapons_btn, 1, 2, 1, 1)
        self.body_armours_btn = QtWidgets.QPushButton(self.base_group_btns)
        self.body_armours_btn.setObjectName("body_armours_btn")
        self.base_group_btns_group.addButton(self.body_armours_btn)
        self.gridLayout_9.addWidget(self.body_armours_btn, 0, 0, 1, 1)
        self.two_handed_weapons_btn = QtWidgets.QPushButton(self.base_group_btns)
        self.two_handed_weapons_btn.setObjectName("two_handed_weapons_btn")
        self.base_group_btns_group.addButton(self.two_handed_weapons_btn)
        self.gridLayout_9.addWidget(self.two_handed_weapons_btn, 2, 0, 1, 1)
        self.gloves_btn = QtWidgets.QPushButton(self.base_group_btns)
        self.gloves_btn.setObjectName("gloves_btn")
        self.base_group_btns_group.addButton(self.gloves_btn)
        self.gridLayout_9.addWidget(self.gloves_btn, 0, 2, 1, 1)
        self.offhands_btn = QtWidgets.QPushButton(self.base_group_btns)
        self.offhands_btn.setObjectName("offhands_btn")
        self.base_group_btns_group.addButton(self.offhands_btn)
        self.gridLayout_9.addWidget(self.offhands_btn, 2, 1, 1, 1)
        self.boots_btn = QtWidgets.QPushButton(self.base_group_btns)
        self.boots_btn.setObjectName("boots_btn")
        self.base_group_btns_group.addButton(self.boots_btn)
        self.gridLayout_9.addWidget(self.boots_btn, 0, 1, 1, 1)
        self.jewels_btn = QtWidgets.QPushButton(self.base_group_btns)
        self.jewels_btn.setObjectName("jewels_btn")
        self.base_group_btns_group.addButton(self.jewels_btn)
        self.gridLayout_9.addWidget(self.jewels_btn, 2, 2, 1, 1)
        self.cluster_jewels_btn = QtWidgets.QPushButton(self.base_group_btns)
        self.cluster_jewels_btn.setObjectName("cluster_jewels_btn")
        self.base_group_btns_group.addButton(self.cluster_jewels_btn)
        self.gridLayout_9.addWidget(self.cluster_jewels_btn, 3, 0, 1, 1)
        self.helmets_btn = QtWidgets.QPushButton(self.base_group_btns)
        self.helmets_btn.setObjectName("helmets_btn")
        self.base_group_btns_group.addButton(self.helmets_btn)
        self.gridLayout_9.addWidget(self.helmets_btn, 1, 0, 1, 1)
        self.jewellery_btn = QtWidgets.QPushButton(self.base_group_btns)
        self.jewellery_btn.setObjectName("jewellery_btn")
        self.base_group_btns_group.addButton(self.jewellery_btn)
        self.gridLayout_9.addWidget(self.jewellery_btn, 1, 1, 1, 1)
        self.flasks_btn = QtWidgets.QPushButton(self.base_group_btns)
        self.flasks_btn.setObjectName("flasks_btn")
        self.base_group_btns_group.addButton(self.flasks_btn)
        self.gridLayout_9.addWidget(self.flasks_btn, 3, 2, 1, 1)
        self.verticalLayout_12.addWidget(self.base_group_btns, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.verticalLayout_14.addWidget(self.base_groups_container)
        self.crafting_simulator.addWidget(self.base_groups_page)
        self.base_selection_page = BaseSelection()
        self.base_selection_page.setStyleSheet("QWidget {\n"
"    border-image: url(:/icons/assets/images/emubg.png);\n"
"}")
        self.base_selection_page.setObjectName("base_selection_page")
        self.crafting_simulator.addWidget(self.base_selection_page)
        self.item_selection_page = ItemSelection()
        self.item_selection_page.setStyleSheet("QWidget {\n"
"    border-image: url(:/icons/assets/images/emubg.png);\n"
"}")
        self.item_selection_page.setObjectName("item_selection_page")
        self.crafting_simulator.addWidget(self.item_selection_page)
        self.item_options_page = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_options_page.sizePolicy().hasHeightForWidth())
        self.item_options_page.setSizePolicy(sizePolicy)
        self.item_options_page.setStyleSheet("QWidget {\n"
"border: 0px;\n"
"border-image: url(:/icons/assets/images/emubg.png);\n"
"}")
        self.item_options_page.setObjectName("item_options_page")
        self.verticalLayout_19 = QtWidgets.QVBoxLayout(self.item_options_page)
        self.verticalLayout_19.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_19.setSpacing(0)
        self.verticalLayout_19.setObjectName("verticalLayout_19")
        self.item_options_label_2 = QtWidgets.QLabel(self.item_options_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_options_label_2.sizePolicy().hasHeightForWidth())
        self.item_options_label_2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.item_options_label_2.setFont(font)
        self.item_options_label_2.setStyleSheet("QLabel {\n"
"text-align: center;\n"
"padding: 5px 10px;\n"
"font-size: 16px;\n"
"background-color: #444;\n"
"width: 100%;\n"
"box-sizing: border-box;\n"
"color: #FFF;\n"
"font-family: Open Sans;\n"
"border-image: none;\n"
"}")
        self.item_options_label_2.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.item_options_label_2.setObjectName("item_options_label_2")
        self.verticalLayout_19.addWidget(self.item_options_label_2, 0, QtCore.Qt.AlignTop)
        self.frame_5 = QtWidgets.QFrame(self.item_options_page)
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.verticalLayout_38 = QtWidgets.QVBoxLayout(self.frame_5)
        self.verticalLayout_38.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_38.setSpacing(0)
        self.verticalLayout_38.setObjectName("verticalLayout_38")
        self.item_options_container = QtWidgets.QWidget(self.frame_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_options_container.sizePolicy().hasHeightForWidth())
        self.item_options_container.setSizePolicy(sizePolicy)
        self.item_options_container.setMinimumSize(QtCore.QSize(0, 0))
        self.item_options_container.setMaximumSize(QtCore.QSize(1677215, 400))
        self.item_options_container.setStyleSheet("QWidget {\n"
"border-image: none;\n"
"}")
        self.item_options_container.setObjectName("item_options_container")
        self.verticalLayout_15 = QtWidgets.QVBoxLayout(self.item_options_container)
        self.verticalLayout_15.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_15.setSpacing(0)
        self.verticalLayout_15.setObjectName("verticalLayout_15")
        self.splitter_7 = QtWidgets.QSplitter(self.item_options_container)
        self.splitter_7.setOrientation(QtCore.Qt.Vertical)
        self.splitter_7.setObjectName("splitter_7")
        self.influence_options = QtWidgets.QWidget(self.splitter_7)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.influence_options.sizePolicy().hasHeightForWidth())
        self.influence_options.setSizePolicy(sizePolicy)
        self.influence_options.setMinimumSize(QtCore.QSize(0, 0))
        self.influence_options.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setFamily("fontin-smallcaps")
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.influence_options.setFont(font)
        self.influence_options.setStyleSheet("QWidget {\n"
"border-image: none;\n"
"border: 0px;\n"
"}")
        self.influence_options.setObjectName("influence_options")
        self.verticalLayout_18 = QtWidgets.QVBoxLayout(self.influence_options)
        self.verticalLayout_18.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_18.setSpacing(0)
        self.verticalLayout_18.setObjectName("verticalLayout_18")
        self.influence_header_label = QtWidgets.QLabel(self.influence_options)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.influence_header_label.sizePolicy().hasHeightForWidth())
        self.influence_header_label.setSizePolicy(sizePolicy)
        self.influence_header_label.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.influence_header_label.setFont(font)
        self.influence_header_label.setStyleSheet("border-radius: 4px;")
        self.influence_header_label.setAlignment(QtCore.Qt.AlignCenter)
        self.influence_header_label.setObjectName("influence_header_label")
        self.verticalLayout_18.addWidget(self.influence_header_label)
        self.influence_buttons = QtWidgets.QWidget(self.influence_options)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.influence_buttons.sizePolicy().hasHeightForWidth())
        self.influence_buttons.setSizePolicy(sizePolicy)
        self.influence_buttons.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                  border-top-width: 1px;\n"
"                   border-right-width: 1px;\n"
"                   border-bottom-width: 1px;\n"
"                   border-left-width: 1px;\n"
"                   border-top-style: solid;\n"
"                 border-right-style: solid;\n"
"                  border-bottom-style: solid;\n"
"                   border-left-style: solid;\n"
"                   border-top-color: rgb(0, 0, 0);\n"
"                  border-right-color: rgb(0, 0, 0);\n"
"                   border-bottom-color: rgb(0, 0, 0);\n"
"                   border-left-color: rgb(0, 0, 0);\n"
"                  border-image-source: initial;\n"
"                  border-image-slice: initial;\n"
"                  border-image-width: initial;\n"
"                  border-image-outset: initial;\n"
"                border-image-repeat: initial;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               text-shadow: 1px 1px #000;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"           }\n"
"            QPushButton::hover {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"           }\n"
"            QPushButton::pressed {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                                  stop: 0 #4b4b4b, stop: 1 #2d2d2d);\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"                border: 1px inset #FFF;\n"
"                box-shadow: none;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.influence_buttons.setObjectName("influence_buttons")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.influence_buttons)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.crusader_btn = QtWidgets.QPushButton(self.influence_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.crusader_btn.sizePolicy().hasHeightForWidth())
        self.crusader_btn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.crusader_btn.setFont(font)
        self.crusader_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/assets/images/smlinf_4.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.crusader_btn.setIcon(icon1)
        self.crusader_btn.setIconSize(QtCore.QSize(30, 30))
        self.crusader_btn.setCheckable(True)
        self.crusader_btn.setChecked(False)
        self.crusader_btn.setObjectName("crusader_btn")
        self.horizontalLayout.addWidget(self.crusader_btn)
        self.elder_btn = QtWidgets.QPushButton(self.influence_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.elder_btn.sizePolicy().hasHeightForWidth())
        self.elder_btn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.elder_btn.setFont(font)
        self.elder_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/assets/images/smlinf_3.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.elder_btn.setIcon(icon2)
        self.elder_btn.setIconSize(QtCore.QSize(30, 30))
        self.elder_btn.setCheckable(True)
        self.elder_btn.setChecked(False)
        self.elder_btn.setObjectName("elder_btn")
        self.horizontalLayout.addWidget(self.elder_btn)
        self.hunter_btn = QtWidgets.QPushButton(self.influence_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.hunter_btn.sizePolicy().hasHeightForWidth())
        self.hunter_btn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.hunter_btn.setFont(font)
        self.hunter_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/assets/images/smlinf_5.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.hunter_btn.setIcon(icon3)
        self.hunter_btn.setIconSize(QtCore.QSize(30, 30))
        self.hunter_btn.setCheckable(True)
        self.hunter_btn.setChecked(False)
        self.hunter_btn.setObjectName("hunter_btn")
        self.horizontalLayout.addWidget(self.hunter_btn)
        self.redeemer_btn = QtWidgets.QPushButton(self.influence_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.redeemer_btn.sizePolicy().hasHeightForWidth())
        self.redeemer_btn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.redeemer_btn.setFont(font)
        self.redeemer_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/assets/images/smlinf_7.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.redeemer_btn.setIcon(icon4)
        self.redeemer_btn.setIconSize(QtCore.QSize(30, 30))
        self.redeemer_btn.setCheckable(True)
        self.redeemer_btn.setChecked(False)
        self.redeemer_btn.setObjectName("redeemer_btn")
        self.horizontalLayout.addWidget(self.redeemer_btn)
        self.shaper_btn = QtWidgets.QPushButton(self.influence_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.shaper_btn.sizePolicy().hasHeightForWidth())
        self.shaper_btn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.shaper_btn.setFont(font)
        self.shaper_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/assets/images/smlinf_2.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.shaper_btn.setIcon(icon5)
        self.shaper_btn.setIconSize(QtCore.QSize(30, 30))
        self.shaper_btn.setCheckable(True)
        self.shaper_btn.setChecked(False)
        self.shaper_btn.setObjectName("shaper_btn")
        self.horizontalLayout.addWidget(self.shaper_btn)
        self.warlord_btn = QtWidgets.QPushButton(self.influence_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.warlord_btn.sizePolicy().hasHeightForWidth())
        self.warlord_btn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.warlord_btn.setFont(font)
        self.warlord_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/assets/images/smlinf_6.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.warlord_btn.setIcon(icon6)
        self.warlord_btn.setIconSize(QtCore.QSize(30, 30))
        self.warlord_btn.setCheckable(True)
        self.warlord_btn.setChecked(False)
        self.warlord_btn.setObjectName("warlord_btn")
        self.horizontalLayout.addWidget(self.warlord_btn)
        self.verticalLayout_18.addWidget(self.influence_buttons)
        self.ilvl_options = QtWidgets.QWidget(self.splitter_7)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_options.sizePolicy().hasHeightForWidth())
        self.ilvl_options.setSizePolicy(sizePolicy)
        self.ilvl_options.setStyleSheet("QWidget {\n"
"    border: none;\n"
"    border-image: none;\n"
"}")
        self.ilvl_options.setObjectName("ilvl_options")
        self.verticalLayout_26 = QtWidgets.QVBoxLayout(self.ilvl_options)
        self.verticalLayout_26.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_26.setSpacing(0)
        self.verticalLayout_26.setObjectName("verticalLayout_26")
        self.ilvl_header_label = QtWidgets.QLabel(self.ilvl_options)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_header_label.sizePolicy().hasHeightForWidth())
        self.ilvl_header_label.setSizePolicy(sizePolicy)
        self.ilvl_header_label.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_header_label.setFont(font)
        self.ilvl_header_label.setStyleSheet("border-radius: 4px;")
        self.ilvl_header_label.setAlignment(QtCore.Qt.AlignCenter)
        self.ilvl_header_label.setObjectName("ilvl_header_label")
        self.verticalLayout_26.addWidget(self.ilvl_header_label)
        self.ilvl_buttons = QtWidgets.QWidget(self.ilvl_options)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_buttons.sizePolicy().hasHeightForWidth())
        self.ilvl_buttons.setSizePolicy(sizePolicy)
        self.ilvl_buttons.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("fontin-smallcaps")
        font.setPointSize(8)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_buttons.setFont(font)
        self.ilvl_buttons.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                  border-top-width: 1px;\n"
"                   border-right-width: 1px;\n"
"                   border-bottom-width: 1px;\n"
"                   border-left-width: 1px;\n"
"                   border-top-style: solid;\n"
"                 border-right-style: solid;\n"
"                  border-bottom-style: solid;\n"
"                   border-left-style: solid;\n"
"                   border-top-color: rgb(0, 0, 0);\n"
"                  border-right-color: rgb(0, 0, 0);\n"
"                   border-bottom-color: rgb(0, 0, 0);\n"
"                   border-left-color: rgb(0, 0, 0);\n"
"                  border-image-source: initial;\n"
"                  border-image-slice: initial;\n"
"                  border-image-width: initial;\n"
"                  border-image-outset: initial;\n"
"                border-image-repeat: initial;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               text-shadow: 1px 1px #000;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"           }\n"
"            QPushButton::hover {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"           }\n"
"            QPushButton::pressed {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                                  stop: 0 #4b4b4b, stop: 1 #2d2d2d);\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"                border: 1px inset #FFF;\n"
"                box-shadow: none;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.ilvl_buttons.setObjectName("ilvl_buttons")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.ilvl_buttons)
        self.gridLayout_10.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_10.setSpacing(0)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.ilvl_87 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_87.sizePolicy().hasHeightForWidth())
        self.ilvl_87.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_87.setFont(font)
        self.ilvl_87.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_87.setCheckable(True)
        self.ilvl_87.setObjectName("ilvl_87")
        self.gridLayout_10.addWidget(self.ilvl_87, 3, 11, 1, 1)
        self.ilvl_73 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_73.sizePolicy().hasHeightForWidth())
        self.ilvl_73.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_73.setFont(font)
        self.ilvl_73.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_73.setCheckable(True)
        self.ilvl_73.setObjectName("ilvl_73")
        self.gridLayout_10.addWidget(self.ilvl_73, 2, 22, 1, 1)
        self.ilvl_78 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_78.sizePolicy().hasHeightForWidth())
        self.ilvl_78.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_78.setFont(font)
        self.ilvl_78.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_78.setCheckable(True)
        self.ilvl_78.setObjectName("ilvl_78")
        self.gridLayout_10.addWidget(self.ilvl_78, 3, 2, 1, 1)
        self.ilvl_63 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_63.sizePolicy().hasHeightForWidth())
        self.ilvl_63.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_63.setFont(font)
        self.ilvl_63.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_63.setCheckable(True)
        self.ilvl_63.setObjectName("ilvl_63")
        self.gridLayout_10.addWidget(self.ilvl_63, 2, 12, 1, 1)
        self.ilvl_96 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_96.sizePolicy().hasHeightForWidth())
        self.ilvl_96.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_96.setFont(font)
        self.ilvl_96.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_96.setCheckable(True)
        self.ilvl_96.setObjectName("ilvl_96")
        self.gridLayout_10.addWidget(self.ilvl_96, 3, 20, 1, 1)
        self.ilvl_71 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_71.sizePolicy().hasHeightForWidth())
        self.ilvl_71.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_71.setFont(font)
        self.ilvl_71.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_71.setCheckable(True)
        self.ilvl_71.setObjectName("ilvl_71")
        self.gridLayout_10.addWidget(self.ilvl_71, 2, 20, 1, 1)
        self.ilvl_8 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_8.sizePolicy().hasHeightForWidth())
        self.ilvl_8.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_8.setFont(font)
        self.ilvl_8.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_8.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_8.setCheckable(True)
        self.ilvl_8.setObjectName("ilvl_8")
        self.gridLayout_10.addWidget(self.ilvl_8, 0, 7, 1, 1)
        self.ilvl_75 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_75.sizePolicy().hasHeightForWidth())
        self.ilvl_75.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_75.setFont(font)
        self.ilvl_75.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_75.setCheckable(True)
        self.ilvl_75.setObjectName("ilvl_75")
        self.gridLayout_10.addWidget(self.ilvl_75, 2, 24, 1, 1)
        self.ilvl_89 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_89.sizePolicy().hasHeightForWidth())
        self.ilvl_89.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_89.setFont(font)
        self.ilvl_89.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_89.setCheckable(True)
        self.ilvl_89.setObjectName("ilvl_89")
        self.gridLayout_10.addWidget(self.ilvl_89, 3, 13, 1, 1)
        self.ilvl_62 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_62.sizePolicy().hasHeightForWidth())
        self.ilvl_62.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_62.setFont(font)
        self.ilvl_62.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_62.setCheckable(True)
        self.ilvl_62.setObjectName("ilvl_62")
        self.gridLayout_10.addWidget(self.ilvl_62, 2, 11, 1, 1)
        self.ilvl_82 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_82.sizePolicy().hasHeightForWidth())
        self.ilvl_82.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_82.setFont(font)
        self.ilvl_82.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_82.setCheckable(True)
        self.ilvl_82.setObjectName("ilvl_82")
        self.gridLayout_10.addWidget(self.ilvl_82, 3, 6, 1, 1)
        self.ilvl_45 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_45.sizePolicy().hasHeightForWidth())
        self.ilvl_45.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_45.setFont(font)
        self.ilvl_45.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_45.setCheckable(True)
        self.ilvl_45.setObjectName("ilvl_45")
        self.gridLayout_10.addWidget(self.ilvl_45, 1, 19, 1, 1)
        self.ilvl_97 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_97.sizePolicy().hasHeightForWidth())
        self.ilvl_97.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_97.setFont(font)
        self.ilvl_97.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_97.setCheckable(True)
        self.ilvl_97.setObjectName("ilvl_97")
        self.gridLayout_10.addWidget(self.ilvl_97, 3, 21, 1, 1)
        self.ilvl_38 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_38.sizePolicy().hasHeightForWidth())
        self.ilvl_38.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_38.setFont(font)
        self.ilvl_38.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_38.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_38.setCheckable(True)
        self.ilvl_38.setObjectName("ilvl_38")
        self.gridLayout_10.addWidget(self.ilvl_38, 1, 12, 1, 1)
        self.ilvl_40 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_40.sizePolicy().hasHeightForWidth())
        self.ilvl_40.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_40.setFont(font)
        self.ilvl_40.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_40.setCheckable(True)
        self.ilvl_40.setObjectName("ilvl_40")
        self.gridLayout_10.addWidget(self.ilvl_40, 1, 14, 1, 1)
        self.ilvl_72 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_72.sizePolicy().hasHeightForWidth())
        self.ilvl_72.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_72.setFont(font)
        self.ilvl_72.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_72.setCheckable(True)
        self.ilvl_72.setObjectName("ilvl_72")
        self.gridLayout_10.addWidget(self.ilvl_72, 2, 21, 1, 1)
        self.ilvl_93 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_93.sizePolicy().hasHeightForWidth())
        self.ilvl_93.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_93.setFont(font)
        self.ilvl_93.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_93.setCheckable(True)
        self.ilvl_93.setObjectName("ilvl_93")
        self.gridLayout_10.addWidget(self.ilvl_93, 3, 17, 1, 1)
        self.ilvl_43 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_43.sizePolicy().hasHeightForWidth())
        self.ilvl_43.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_43.setFont(font)
        self.ilvl_43.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_43.setCheckable(True)
        self.ilvl_43.setObjectName("ilvl_43")
        self.gridLayout_10.addWidget(self.ilvl_43, 1, 17, 1, 1)
        self.ilvl_28 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_28.sizePolicy().hasHeightForWidth())
        self.ilvl_28.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_28.setFont(font)
        self.ilvl_28.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_28.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_28.setCheckable(True)
        self.ilvl_28.setObjectName("ilvl_28")
        self.gridLayout_10.addWidget(self.ilvl_28, 1, 2, 1, 1)
        self.ilvl_64 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_64.sizePolicy().hasHeightForWidth())
        self.ilvl_64.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_64.setFont(font)
        self.ilvl_64.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_64.setCheckable(True)
        self.ilvl_64.setObjectName("ilvl_64")
        self.gridLayout_10.addWidget(self.ilvl_64, 2, 13, 1, 1)
        self.ilvl_66 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_66.sizePolicy().hasHeightForWidth())
        self.ilvl_66.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_66.setFont(font)
        self.ilvl_66.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_66.setCheckable(True)
        self.ilvl_66.setObjectName("ilvl_66")
        self.gridLayout_10.addWidget(self.ilvl_66, 2, 15, 1, 1)
        self.ilvl_79 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_79.sizePolicy().hasHeightForWidth())
        self.ilvl_79.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_79.setFont(font)
        self.ilvl_79.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_79.setCheckable(True)
        self.ilvl_79.setObjectName("ilvl_79")
        self.gridLayout_10.addWidget(self.ilvl_79, 3, 3, 1, 1)
        self.ilvl_83 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_83.sizePolicy().hasHeightForWidth())
        self.ilvl_83.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_83.setFont(font)
        self.ilvl_83.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_83.setCheckable(True)
        self.ilvl_83.setObjectName("ilvl_83")
        self.gridLayout_10.addWidget(self.ilvl_83, 3, 7, 1, 1)
        self.ilvl_100 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_100.sizePolicy().hasHeightForWidth())
        self.ilvl_100.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_100.setFont(font)
        self.ilvl_100.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_100.setCheckable(True)
        self.ilvl_100.setChecked(False)
        self.ilvl_100.setObjectName("ilvl_100")
        self.gridLayout_10.addWidget(self.ilvl_100, 3, 24, 1, 1)
        self.ilvl_13 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_13.sizePolicy().hasHeightForWidth())
        self.ilvl_13.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_13.setFont(font)
        self.ilvl_13.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_13.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_13.setCheckable(True)
        self.ilvl_13.setObjectName("ilvl_13")
        self.gridLayout_10.addWidget(self.ilvl_13, 0, 12, 1, 1)
        self.ilvl_23 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_23.sizePolicy().hasHeightForWidth())
        self.ilvl_23.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_23.setFont(font)
        self.ilvl_23.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_23.setCheckable(True)
        self.ilvl_23.setObjectName("ilvl_23")
        self.gridLayout_10.addWidget(self.ilvl_23, 0, 22, 1, 1)
        self.ilvl_98 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_98.sizePolicy().hasHeightForWidth())
        self.ilvl_98.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_98.setFont(font)
        self.ilvl_98.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_98.setCheckable(True)
        self.ilvl_98.setObjectName("ilvl_98")
        self.gridLayout_10.addWidget(self.ilvl_98, 3, 22, 1, 1)
        self.ilvl_52 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_52.sizePolicy().hasHeightForWidth())
        self.ilvl_52.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_52.setFont(font)
        self.ilvl_52.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_52.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_52.setCheckable(True)
        self.ilvl_52.setObjectName("ilvl_52")
        self.gridLayout_10.addWidget(self.ilvl_52, 2, 1, 1, 1)
        self.ilvl_3 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_3.sizePolicy().hasHeightForWidth())
        self.ilvl_3.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_3.setFont(font)
        self.ilvl_3.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_3.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_3.setCheckable(True)
        self.ilvl_3.setObjectName("ilvl_3")
        self.gridLayout_10.addWidget(self.ilvl_3, 0, 2, 1, 1)
        self.ilvl_90 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_90.sizePolicy().hasHeightForWidth())
        self.ilvl_90.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_90.setFont(font)
        self.ilvl_90.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_90.setCheckable(True)
        self.ilvl_90.setObjectName("ilvl_90")
        self.gridLayout_10.addWidget(self.ilvl_90, 3, 14, 1, 1)
        self.ilvl_51 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_51.sizePolicy().hasHeightForWidth())
        self.ilvl_51.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_51.setFont(font)
        self.ilvl_51.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_51.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_51.setCheckable(True)
        self.ilvl_51.setObjectName("ilvl_51")
        self.gridLayout_10.addWidget(self.ilvl_51, 2, 0, 1, 1)
        self.ilvl_74 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_74.sizePolicy().hasHeightForWidth())
        self.ilvl_74.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_74.setFont(font)
        self.ilvl_74.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_74.setCheckable(True)
        self.ilvl_74.setObjectName("ilvl_74")
        self.gridLayout_10.addWidget(self.ilvl_74, 2, 23, 1, 1)
        self.ilvl_16 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_16.sizePolicy().hasHeightForWidth())
        self.ilvl_16.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_16.setFont(font)
        self.ilvl_16.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_16.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_16.setCheckable(True)
        self.ilvl_16.setObjectName("ilvl_16")
        self.gridLayout_10.addWidget(self.ilvl_16, 0, 15, 1, 1)
        self.ilvl_57 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_57.sizePolicy().hasHeightForWidth())
        self.ilvl_57.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_57.setFont(font)
        self.ilvl_57.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_57.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_57.setCheckable(True)
        self.ilvl_57.setObjectName("ilvl_57")
        self.gridLayout_10.addWidget(self.ilvl_57, 2, 6, 1, 1)
        self.ilvl_86 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_86.sizePolicy().hasHeightForWidth())
        self.ilvl_86.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_86.setFont(font)
        self.ilvl_86.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_86.setCheckable(True)
        self.ilvl_86.setObjectName("ilvl_86")
        self.gridLayout_10.addWidget(self.ilvl_86, 3, 10, 1, 1)
        self.ilvl_77 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_77.sizePolicy().hasHeightForWidth())
        self.ilvl_77.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_77.setFont(font)
        self.ilvl_77.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_77.setCheckable(True)
        self.ilvl_77.setObjectName("ilvl_77")
        self.gridLayout_10.addWidget(self.ilvl_77, 3, 1, 1, 1)
        self.ilvl_1 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_1.sizePolicy().hasHeightForWidth())
        self.ilvl_1.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_1.setFont(font)
        self.ilvl_1.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_1.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_1.setCheckable(True)
        self.ilvl_1.setObjectName("ilvl_1")
        self.gridLayout_10.addWidget(self.ilvl_1, 0, 0, 1, 1)
        self.ilvl_20 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_20.sizePolicy().hasHeightForWidth())
        self.ilvl_20.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_20.setFont(font)
        self.ilvl_20.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_20.setCheckable(True)
        self.ilvl_20.setObjectName("ilvl_20")
        self.gridLayout_10.addWidget(self.ilvl_20, 0, 19, 1, 1)
        self.ilvl_44 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_44.sizePolicy().hasHeightForWidth())
        self.ilvl_44.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_44.setFont(font)
        self.ilvl_44.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_44.setCheckable(True)
        self.ilvl_44.setObjectName("ilvl_44")
        self.gridLayout_10.addWidget(self.ilvl_44, 1, 18, 1, 1)
        self.ilvl_5 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_5.sizePolicy().hasHeightForWidth())
        self.ilvl_5.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_5.setFont(font)
        self.ilvl_5.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_5.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_5.setCheckable(True)
        self.ilvl_5.setObjectName("ilvl_5")
        self.gridLayout_10.addWidget(self.ilvl_5, 0, 4, 1, 1)
        self.ilvl_17 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_17.sizePolicy().hasHeightForWidth())
        self.ilvl_17.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_17.setFont(font)
        self.ilvl_17.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_17.setCheckable(True)
        self.ilvl_17.setObjectName("ilvl_17")
        self.gridLayout_10.addWidget(self.ilvl_17, 0, 16, 1, 1)
        self.ilvl_91 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_91.sizePolicy().hasHeightForWidth())
        self.ilvl_91.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_91.setFont(font)
        self.ilvl_91.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_91.setCheckable(True)
        self.ilvl_91.setObjectName("ilvl_91")
        self.gridLayout_10.addWidget(self.ilvl_91, 3, 15, 1, 1)
        self.ilvl_81 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_81.sizePolicy().hasHeightForWidth())
        self.ilvl_81.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_81.setFont(font)
        self.ilvl_81.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_81.setCheckable(True)
        self.ilvl_81.setObjectName("ilvl_81")
        self.gridLayout_10.addWidget(self.ilvl_81, 3, 5, 1, 1)
        self.ilvl_58 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_58.sizePolicy().hasHeightForWidth())
        self.ilvl_58.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_58.setFont(font)
        self.ilvl_58.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_58.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_58.setCheckable(True)
        self.ilvl_58.setObjectName("ilvl_58")
        self.gridLayout_10.addWidget(self.ilvl_58, 2, 7, 1, 1)
        self.ilvl_80 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_80.sizePolicy().hasHeightForWidth())
        self.ilvl_80.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_80.setFont(font)
        self.ilvl_80.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_80.setCheckable(True)
        self.ilvl_80.setObjectName("ilvl_80")
        self.gridLayout_10.addWidget(self.ilvl_80, 3, 4, 1, 1)
        self.ilvl_60 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_60.sizePolicy().hasHeightForWidth())
        self.ilvl_60.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_60.setFont(font)
        self.ilvl_60.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_60.setCheckable(True)
        self.ilvl_60.setObjectName("ilvl_60")
        self.gridLayout_10.addWidget(self.ilvl_60, 2, 9, 1, 1)
        self.ilvl_69 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_69.sizePolicy().hasHeightForWidth())
        self.ilvl_69.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_69.setFont(font)
        self.ilvl_69.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_69.setCheckable(True)
        self.ilvl_69.setObjectName("ilvl_69")
        self.gridLayout_10.addWidget(self.ilvl_69, 2, 18, 1, 1)
        self.ilvl_42 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_42.sizePolicy().hasHeightForWidth())
        self.ilvl_42.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_42.setFont(font)
        self.ilvl_42.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_42.setCheckable(True)
        self.ilvl_42.setObjectName("ilvl_42")
        self.gridLayout_10.addWidget(self.ilvl_42, 1, 16, 1, 1)
        self.ilvl_12 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_12.sizePolicy().hasHeightForWidth())
        self.ilvl_12.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_12.setFont(font)
        self.ilvl_12.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_12.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_12.setCheckable(True)
        self.ilvl_12.setObjectName("ilvl_12")
        self.gridLayout_10.addWidget(self.ilvl_12, 0, 11, 1, 1)
        self.ilvl_50 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_50.sizePolicy().hasHeightForWidth())
        self.ilvl_50.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_50.setFont(font)
        self.ilvl_50.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_50.setCheckable(True)
        self.ilvl_50.setObjectName("ilvl_50")
        self.gridLayout_10.addWidget(self.ilvl_50, 1, 24, 1, 1)
        self.ilvl_54 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_54.sizePolicy().hasHeightForWidth())
        self.ilvl_54.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_54.setFont(font)
        self.ilvl_54.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_54.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_54.setCheckable(True)
        self.ilvl_54.setObjectName("ilvl_54")
        self.gridLayout_10.addWidget(self.ilvl_54, 2, 3, 1, 1)
        self.ilvl_6 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_6.sizePolicy().hasHeightForWidth())
        self.ilvl_6.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_6.setFont(font)
        self.ilvl_6.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_6.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_6.setCheckable(True)
        self.ilvl_6.setObjectName("ilvl_6")
        self.gridLayout_10.addWidget(self.ilvl_6, 0, 5, 1, 1)
        self.ilvl_10 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_10.sizePolicy().hasHeightForWidth())
        self.ilvl_10.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_10.setFont(font)
        self.ilvl_10.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_10.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_10.setCheckable(True)
        self.ilvl_10.setObjectName("ilvl_10")
        self.gridLayout_10.addWidget(self.ilvl_10, 0, 9, 1, 1)
        self.ilvl_18 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_18.sizePolicy().hasHeightForWidth())
        self.ilvl_18.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_18.setFont(font)
        self.ilvl_18.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_18.setCheckable(True)
        self.ilvl_18.setObjectName("ilvl_18")
        self.gridLayout_10.addWidget(self.ilvl_18, 0, 17, 1, 1)
        self.ilvl_36 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_36.sizePolicy().hasHeightForWidth())
        self.ilvl_36.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_36.setFont(font)
        self.ilvl_36.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_36.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_36.setCheckable(True)
        self.ilvl_36.setObjectName("ilvl_36")
        self.gridLayout_10.addWidget(self.ilvl_36, 1, 10, 1, 1)
        self.ilvl_39 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_39.sizePolicy().hasHeightForWidth())
        self.ilvl_39.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_39.setFont(font)
        self.ilvl_39.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_39.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_39.setCheckable(True)
        self.ilvl_39.setObjectName("ilvl_39")
        self.gridLayout_10.addWidget(self.ilvl_39, 1, 13, 1, 1)
        self.ilvl_61 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_61.sizePolicy().hasHeightForWidth())
        self.ilvl_61.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_61.setFont(font)
        self.ilvl_61.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_61.setCheckable(True)
        self.ilvl_61.setObjectName("ilvl_61")
        self.gridLayout_10.addWidget(self.ilvl_61, 2, 10, 1, 1)
        self.ilvl_59 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_59.sizePolicy().hasHeightForWidth())
        self.ilvl_59.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_59.setFont(font)
        self.ilvl_59.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_59.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_59.setCheckable(True)
        self.ilvl_59.setObjectName("ilvl_59")
        self.gridLayout_10.addWidget(self.ilvl_59, 2, 8, 1, 1)
        self.ilvl_2 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_2.sizePolicy().hasHeightForWidth())
        self.ilvl_2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_2.setFont(font)
        self.ilvl_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_2.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_2.setCheckable(True)
        self.ilvl_2.setObjectName("ilvl_2")
        self.gridLayout_10.addWidget(self.ilvl_2, 0, 1, 1, 1)
        self.ilvl_34 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_34.sizePolicy().hasHeightForWidth())
        self.ilvl_34.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_34.setFont(font)
        self.ilvl_34.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_34.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_34.setCheckable(True)
        self.ilvl_34.setObjectName("ilvl_34")
        self.gridLayout_10.addWidget(self.ilvl_34, 1, 8, 1, 1)
        self.ilvl_26 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_26.sizePolicy().hasHeightForWidth())
        self.ilvl_26.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_26.setFont(font)
        self.ilvl_26.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_26.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_26.setCheckable(True)
        self.ilvl_26.setObjectName("ilvl_26")
        self.gridLayout_10.addWidget(self.ilvl_26, 1, 0, 1, 1)
        self.ilvl_67 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_67.sizePolicy().hasHeightForWidth())
        self.ilvl_67.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_67.setFont(font)
        self.ilvl_67.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_67.setCheckable(True)
        self.ilvl_67.setObjectName("ilvl_67")
        self.gridLayout_10.addWidget(self.ilvl_67, 2, 16, 1, 1)
        self.ilvl_15 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_15.sizePolicy().hasHeightForWidth())
        self.ilvl_15.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_15.setFont(font)
        self.ilvl_15.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_15.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_15.setCheckable(True)
        self.ilvl_15.setObjectName("ilvl_15")
        self.gridLayout_10.addWidget(self.ilvl_15, 0, 14, 1, 1)
        self.ilvl_9 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_9.sizePolicy().hasHeightForWidth())
        self.ilvl_9.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_9.setFont(font)
        self.ilvl_9.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_9.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_9.setCheckable(True)
        self.ilvl_9.setObjectName("ilvl_9")
        self.gridLayout_10.addWidget(self.ilvl_9, 0, 8, 1, 1)
        self.ilvl_99 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_99.sizePolicy().hasHeightForWidth())
        self.ilvl_99.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_99.setFont(font)
        self.ilvl_99.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_99.setCheckable(True)
        self.ilvl_99.setObjectName("ilvl_99")
        self.gridLayout_10.addWidget(self.ilvl_99, 3, 23, 1, 1)
        self.ilvl_65 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_65.sizePolicy().hasHeightForWidth())
        self.ilvl_65.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_65.setFont(font)
        self.ilvl_65.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_65.setCheckable(True)
        self.ilvl_65.setObjectName("ilvl_65")
        self.gridLayout_10.addWidget(self.ilvl_65, 2, 14, 1, 1)
        self.ilvl_49 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_49.sizePolicy().hasHeightForWidth())
        self.ilvl_49.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_49.setFont(font)
        self.ilvl_49.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_49.setCheckable(True)
        self.ilvl_49.setObjectName("ilvl_49")
        self.gridLayout_10.addWidget(self.ilvl_49, 1, 23, 1, 1)
        self.ilvl_7 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_7.sizePolicy().hasHeightForWidth())
        self.ilvl_7.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_7.setFont(font)
        self.ilvl_7.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_7.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_7.setCheckable(True)
        self.ilvl_7.setObjectName("ilvl_7")
        self.gridLayout_10.addWidget(self.ilvl_7, 0, 6, 1, 1)
        self.ilvl_94 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_94.sizePolicy().hasHeightForWidth())
        self.ilvl_94.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_94.setFont(font)
        self.ilvl_94.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_94.setCheckable(True)
        self.ilvl_94.setObjectName("ilvl_94")
        self.gridLayout_10.addWidget(self.ilvl_94, 3, 18, 1, 1)
        self.ilvl_31 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_31.sizePolicy().hasHeightForWidth())
        self.ilvl_31.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_31.setFont(font)
        self.ilvl_31.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_31.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_31.setCheckable(True)
        self.ilvl_31.setObjectName("ilvl_31")
        self.gridLayout_10.addWidget(self.ilvl_31, 1, 5, 1, 1)
        self.ilvl_29 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_29.sizePolicy().hasHeightForWidth())
        self.ilvl_29.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_29.setFont(font)
        self.ilvl_29.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_29.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_29.setCheckable(True)
        self.ilvl_29.setObjectName("ilvl_29")
        self.gridLayout_10.addWidget(self.ilvl_29, 1, 3, 1, 1)
        self.ilvl_95 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_95.sizePolicy().hasHeightForWidth())
        self.ilvl_95.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_95.setFont(font)
        self.ilvl_95.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_95.setCheckable(True)
        self.ilvl_95.setObjectName("ilvl_95")
        self.gridLayout_10.addWidget(self.ilvl_95, 3, 19, 1, 1)
        self.ilvl_19 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_19.sizePolicy().hasHeightForWidth())
        self.ilvl_19.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_19.setFont(font)
        self.ilvl_19.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_19.setCheckable(True)
        self.ilvl_19.setObjectName("ilvl_19")
        self.gridLayout_10.addWidget(self.ilvl_19, 0, 18, 1, 1)
        self.ilvl_32 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_32.sizePolicy().hasHeightForWidth())
        self.ilvl_32.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_32.setFont(font)
        self.ilvl_32.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_32.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_32.setCheckable(True)
        self.ilvl_32.setObjectName("ilvl_32")
        self.gridLayout_10.addWidget(self.ilvl_32, 1, 6, 1, 1)
        self.ilvl_30 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_30.sizePolicy().hasHeightForWidth())
        self.ilvl_30.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_30.setFont(font)
        self.ilvl_30.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_30.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_30.setCheckable(True)
        self.ilvl_30.setObjectName("ilvl_30")
        self.gridLayout_10.addWidget(self.ilvl_30, 1, 4, 1, 1)
        self.ilvl_47 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_47.sizePolicy().hasHeightForWidth())
        self.ilvl_47.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_47.setFont(font)
        self.ilvl_47.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_47.setCheckable(True)
        self.ilvl_47.setObjectName("ilvl_47")
        self.gridLayout_10.addWidget(self.ilvl_47, 1, 21, 1, 1)
        self.ilvl_84 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_84.sizePolicy().hasHeightForWidth())
        self.ilvl_84.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_84.setFont(font)
        self.ilvl_84.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_84.setCheckable(True)
        self.ilvl_84.setObjectName("ilvl_84")
        self.gridLayout_10.addWidget(self.ilvl_84, 3, 8, 1, 1)
        self.ilvl_76 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_76.sizePolicy().hasHeightForWidth())
        self.ilvl_76.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_76.setFont(font)
        self.ilvl_76.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_76.setCheckable(True)
        self.ilvl_76.setObjectName("ilvl_76")
        self.gridLayout_10.addWidget(self.ilvl_76, 3, 0, 1, 1)
        self.ilvl_56 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_56.sizePolicy().hasHeightForWidth())
        self.ilvl_56.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_56.setFont(font)
        self.ilvl_56.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_56.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_56.setCheckable(True)
        self.ilvl_56.setObjectName("ilvl_56")
        self.gridLayout_10.addWidget(self.ilvl_56, 2, 5, 1, 1)
        self.ilvl_33 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_33.sizePolicy().hasHeightForWidth())
        self.ilvl_33.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_33.setFont(font)
        self.ilvl_33.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_33.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_33.setCheckable(True)
        self.ilvl_33.setObjectName("ilvl_33")
        self.gridLayout_10.addWidget(self.ilvl_33, 1, 7, 1, 1)
        self.ilvl_35 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_35.sizePolicy().hasHeightForWidth())
        self.ilvl_35.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_35.setFont(font)
        self.ilvl_35.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_35.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_35.setCheckable(True)
        self.ilvl_35.setObjectName("ilvl_35")
        self.gridLayout_10.addWidget(self.ilvl_35, 1, 9, 1, 1)
        self.ilvl_37 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_37.sizePolicy().hasHeightForWidth())
        self.ilvl_37.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_37.setFont(font)
        self.ilvl_37.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_37.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_37.setCheckable(True)
        self.ilvl_37.setObjectName("ilvl_37")
        self.gridLayout_10.addWidget(self.ilvl_37, 1, 11, 1, 1)
        self.ilvl_92 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_92.sizePolicy().hasHeightForWidth())
        self.ilvl_92.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_92.setFont(font)
        self.ilvl_92.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_92.setCheckable(True)
        self.ilvl_92.setObjectName("ilvl_92")
        self.gridLayout_10.addWidget(self.ilvl_92, 3, 16, 1, 1)
        self.ilvl_25 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_25.sizePolicy().hasHeightForWidth())
        self.ilvl_25.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_25.setFont(font)
        self.ilvl_25.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_25.setCheckable(True)
        self.ilvl_25.setObjectName("ilvl_25")
        self.gridLayout_10.addWidget(self.ilvl_25, 0, 24, 1, 1)
        self.ilvl_27 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_27.sizePolicy().hasHeightForWidth())
        self.ilvl_27.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_27.setFont(font)
        self.ilvl_27.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_27.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_27.setCheckable(True)
        self.ilvl_27.setObjectName("ilvl_27")
        self.gridLayout_10.addWidget(self.ilvl_27, 1, 1, 1, 1)
        self.ilvl_22 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_22.sizePolicy().hasHeightForWidth())
        self.ilvl_22.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_22.setFont(font)
        self.ilvl_22.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_22.setCheckable(True)
        self.ilvl_22.setObjectName("ilvl_22")
        self.gridLayout_10.addWidget(self.ilvl_22, 0, 21, 1, 1)
        self.ilvl_4 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_4.sizePolicy().hasHeightForWidth())
        self.ilvl_4.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_4.setFont(font)
        self.ilvl_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_4.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_4.setCheckable(True)
        self.ilvl_4.setObjectName("ilvl_4")
        self.gridLayout_10.addWidget(self.ilvl_4, 0, 3, 1, 1)
        self.ilvl_48 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_48.sizePolicy().hasHeightForWidth())
        self.ilvl_48.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_48.setFont(font)
        self.ilvl_48.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_48.setCheckable(True)
        self.ilvl_48.setObjectName("ilvl_48")
        self.gridLayout_10.addWidget(self.ilvl_48, 1, 22, 1, 1)
        self.ilvl_46 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_46.sizePolicy().hasHeightForWidth())
        self.ilvl_46.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_46.setFont(font)
        self.ilvl_46.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_46.setCheckable(True)
        self.ilvl_46.setObjectName("ilvl_46")
        self.gridLayout_10.addWidget(self.ilvl_46, 1, 20, 1, 1)
        self.ilvl_85 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_85.sizePolicy().hasHeightForWidth())
        self.ilvl_85.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_85.setFont(font)
        self.ilvl_85.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_85.setCheckable(True)
        self.ilvl_85.setObjectName("ilvl_85")
        self.gridLayout_10.addWidget(self.ilvl_85, 3, 9, 1, 1)
        self.ilvl_88 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_88.sizePolicy().hasHeightForWidth())
        self.ilvl_88.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_88.setFont(font)
        self.ilvl_88.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_88.setCheckable(True)
        self.ilvl_88.setObjectName("ilvl_88")
        self.gridLayout_10.addWidget(self.ilvl_88, 3, 12, 1, 1)
        self.ilvl_41 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_41.sizePolicy().hasHeightForWidth())
        self.ilvl_41.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_41.setFont(font)
        self.ilvl_41.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_41.setCheckable(True)
        self.ilvl_41.setObjectName("ilvl_41")
        self.gridLayout_10.addWidget(self.ilvl_41, 1, 15, 1, 1)
        self.ilvl_24 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_24.sizePolicy().hasHeightForWidth())
        self.ilvl_24.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_24.setFont(font)
        self.ilvl_24.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_24.setCheckable(True)
        self.ilvl_24.setObjectName("ilvl_24")
        self.gridLayout_10.addWidget(self.ilvl_24, 0, 23, 1, 1)
        self.ilvl_55 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_55.sizePolicy().hasHeightForWidth())
        self.ilvl_55.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_55.setFont(font)
        self.ilvl_55.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_55.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_55.setCheckable(True)
        self.ilvl_55.setObjectName("ilvl_55")
        self.gridLayout_10.addWidget(self.ilvl_55, 2, 4, 1, 1)
        self.ilvl_11 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_11.sizePolicy().hasHeightForWidth())
        self.ilvl_11.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_11.setFont(font)
        self.ilvl_11.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_11.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_11.setCheckable(True)
        self.ilvl_11.setObjectName("ilvl_11")
        self.gridLayout_10.addWidget(self.ilvl_11, 0, 10, 1, 1)
        self.ilvl_14 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_14.sizePolicy().hasHeightForWidth())
        self.ilvl_14.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_14.setFont(font)
        self.ilvl_14.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_14.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_14.setCheckable(True)
        self.ilvl_14.setObjectName("ilvl_14")
        self.gridLayout_10.addWidget(self.ilvl_14, 0, 13, 1, 1)
        self.ilvl_53 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_53.sizePolicy().hasHeightForWidth())
        self.ilvl_53.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_53.setFont(font)
        self.ilvl_53.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_53.setIconSize(QtCore.QSize(30, 30))
        self.ilvl_53.setCheckable(True)
        self.ilvl_53.setObjectName("ilvl_53")
        self.gridLayout_10.addWidget(self.ilvl_53, 2, 2, 1, 1)
        self.ilvl_68 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_68.sizePolicy().hasHeightForWidth())
        self.ilvl_68.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_68.setFont(font)
        self.ilvl_68.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_68.setCheckable(True)
        self.ilvl_68.setObjectName("ilvl_68")
        self.gridLayout_10.addWidget(self.ilvl_68, 2, 17, 1, 1)
        self.ilvl_70 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_70.sizePolicy().hasHeightForWidth())
        self.ilvl_70.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_70.setFont(font)
        self.ilvl_70.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_70.setCheckable(True)
        self.ilvl_70.setObjectName("ilvl_70")
        self.gridLayout_10.addWidget(self.ilvl_70, 2, 19, 1, 1)
        self.ilvl_21 = QtWidgets.QPushButton(self.ilvl_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ilvl_21.sizePolicy().hasHeightForWidth())
        self.ilvl_21.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.ilvl_21.setFont(font)
        self.ilvl_21.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ilvl_21.setCheckable(True)
        self.ilvl_21.setObjectName("ilvl_21")
        self.gridLayout_10.addWidget(self.ilvl_21, 0, 20, 1, 1)
        self.verticalLayout_26.addWidget(self.ilvl_buttons)
        self.quality_options = QtWidgets.QWidget(self.splitter_7)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_options.sizePolicy().hasHeightForWidth())
        self.quality_options.setSizePolicy(sizePolicy)
        self.quality_options.setStyleSheet("QWidget {\n"
"    border: none;\n"
"    border-image: none;\n"
"}\n"
"\n"
"QPushButton {\n"
"                border: 1px solid #000;\n"
"                  border-top-width: 1px;\n"
"                   border-right-width: 1px;\n"
"                   border-bottom-width: 1px;\n"
"                   border-left-width: 1px;\n"
"                   border-top-style: solid;\n"
"                 border-right-style: solid;\n"
"                  border-bottom-style: solid;\n"
"                   border-left-style: solid;\n"
"                   border-top-color: rgb(0, 0, 0);\n"
"                  border-right-color: rgb(0, 0, 0);\n"
"                   border-bottom-color: rgb(0, 0, 0);\n"
"                   border-left-color: rgb(0, 0, 0);\n"
"                  border-image-source: initial;\n"
"                  border-image-slice: initial;\n"
"                  border-image-width: initial;\n"
"                  border-image-outset: initial;\n"
"                border-image-repeat: initial;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               text-shadow: 1px 1px #000;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"           }\n"
"            QPushButton:hover {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"           }\n"
"            QPushButton:pressed {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                                  stop: 0 #4b4b4b, stop: 1 #2d2d2d);\n"
"            }\n"
"            QPushButton:checked {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"                border: 5px inset #FFF;\n"
"                box-shadow: none;\n"
"            }\n"
"            QPushButton:flat {\n"
"                border: none;\n"
"}")
        self.quality_options.setObjectName("quality_options")
        self.verticalLayout_16 = QtWidgets.QVBoxLayout(self.quality_options)
        self.verticalLayout_16.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_16.setSpacing(0)
        self.verticalLayout_16.setObjectName("verticalLayout_16")
        self.quality_header_label = QtWidgets.QLabel(self.quality_options)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_header_label.sizePolicy().hasHeightForWidth())
        self.quality_header_label.setSizePolicy(sizePolicy)
        self.quality_header_label.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_header_label.setFont(font)
        self.quality_header_label.setStyleSheet("border-radius: 4px;")
        self.quality_header_label.setAlignment(QtCore.Qt.AlignCenter)
        self.quality_header_label.setObjectName("quality_header_label")
        self.verticalLayout_16.addWidget(self.quality_header_label)
        self.quality_buttons = QtWidgets.QWidget(self.quality_options)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_buttons.sizePolicy().hasHeightForWidth())
        self.quality_buttons.setSizePolicy(sizePolicy)
        self.quality_buttons.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_buttons.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setFamily("fontin-smallcaps")
        font.setPointSize(8)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_buttons.setFont(font)
        self.quality_buttons.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                  border-top-width: 1px;\n"
"                   border-right-width: 1px;\n"
"                   border-bottom-width: 1px;\n"
"                   border-left-width: 1px;\n"
"                   border-top-style: solid;\n"
"                 border-right-style: solid;\n"
"                  border-bottom-style: solid;\n"
"                   border-left-style: solid;\n"
"                   border-top-color: rgb(0, 0, 0);\n"
"                  border-right-color: rgb(0, 0, 0);\n"
"                   border-bottom-color: rgb(0, 0, 0);\n"
"                   border-left-color: rgb(0, 0, 0);\n"
"                  border-image-source: initial;\n"
"                  border-image-slice: initial;\n"
"                  border-image-width: initial;\n"
"                  border-image-outset: initial;\n"
"                border-image-repeat: initial;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               text-shadow: 1px 1px #000;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"           }\n"
"            QPushButton::hover {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"           }\n"
"            QPushButton::pressed {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                                  stop: 0 #4b4b4b, stop: 1 #2d2d2d);\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"                border: 1px inset #FFF;\n"
"                box-shadow: none;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.quality_buttons.setObjectName("quality_buttons")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.quality_buttons)
        self.gridLayout_11.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_11.setSpacing(0)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.quality_28 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_28.sizePolicy().hasHeightForWidth())
        self.quality_28.setSizePolicy(sizePolicy)
        self.quality_28.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_28.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_28.setFont(font)
        self.quality_28.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_28.setIconSize(QtCore.QSize(30, 30))
        self.quality_28.setCheckable(True)
        self.quality_28.setObjectName("quality_28")
        self.gridLayout_11.addWidget(self.quality_28, 1, 12, 1, 1)
        self.quality_5 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_5.sizePolicy().hasHeightForWidth())
        self.quality_5.setSizePolicy(sizePolicy)
        self.quality_5.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_5.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_5.setFont(font)
        self.quality_5.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_5.setIconSize(QtCore.QSize(30, 30))
        self.quality_5.setCheckable(True)
        self.quality_5.setObjectName("quality_5")
        self.gridLayout_11.addWidget(self.quality_5, 0, 4, 1, 1)
        self.quality_13 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_13.sizePolicy().hasHeightForWidth())
        self.quality_13.setSizePolicy(sizePolicy)
        self.quality_13.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_13.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_13.setFont(font)
        self.quality_13.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_13.setIconSize(QtCore.QSize(30, 30))
        self.quality_13.setCheckable(True)
        self.quality_13.setObjectName("quality_13")
        self.gridLayout_11.addWidget(self.quality_13, 0, 12, 1, 1)
        self.quality_20 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_20.sizePolicy().hasHeightForWidth())
        self.quality_20.setSizePolicy(sizePolicy)
        self.quality_20.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_20.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_20.setFont(font)
        self.quality_20.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_20.setCheckable(True)
        self.quality_20.setObjectName("quality_20")
        self.gridLayout_11.addWidget(self.quality_20, 1, 4, 1, 1)
        self.quality_27 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_27.sizePolicy().hasHeightForWidth())
        self.quality_27.setSizePolicy(sizePolicy)
        self.quality_27.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_27.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_27.setFont(font)
        self.quality_27.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_27.setIconSize(QtCore.QSize(30, 30))
        self.quality_27.setCheckable(True)
        self.quality_27.setObjectName("quality_27")
        self.gridLayout_11.addWidget(self.quality_27, 1, 11, 1, 1)
        self.quality_3 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_3.sizePolicy().hasHeightForWidth())
        self.quality_3.setSizePolicy(sizePolicy)
        self.quality_3.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_3.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_3.setFont(font)
        self.quality_3.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_3.setIconSize(QtCore.QSize(30, 30))
        self.quality_3.setCheckable(True)
        self.quality_3.setObjectName("quality_3")
        self.gridLayout_11.addWidget(self.quality_3, 0, 2, 1, 1)
        self.quality_30 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_30.sizePolicy().hasHeightForWidth())
        self.quality_30.setSizePolicy(sizePolicy)
        self.quality_30.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_30.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_30.setFont(font)
        self.quality_30.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_30.setIconSize(QtCore.QSize(30, 30))
        self.quality_30.setCheckable(True)
        self.quality_30.setFlat(False)
        self.quality_30.setObjectName("quality_30")
        self.gridLayout_11.addWidget(self.quality_30, 1, 14, 1, 1)
        self.quality_26 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_26.sizePolicy().hasHeightForWidth())
        self.quality_26.setSizePolicy(sizePolicy)
        self.quality_26.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_26.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_26.setFont(font)
        self.quality_26.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_26.setIconSize(QtCore.QSize(30, 30))
        self.quality_26.setCheckable(True)
        self.quality_26.setObjectName("quality_26")
        self.gridLayout_11.addWidget(self.quality_26, 1, 10, 1, 1)
        self.quality_22 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_22.sizePolicy().hasHeightForWidth())
        self.quality_22.setSizePolicy(sizePolicy)
        self.quality_22.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_22.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_22.setFont(font)
        self.quality_22.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_22.setCheckable(True)
        self.quality_22.setObjectName("quality_22")
        self.gridLayout_11.addWidget(self.quality_22, 1, 6, 1, 1)
        self.quality_25 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_25.sizePolicy().hasHeightForWidth())
        self.quality_25.setSizePolicy(sizePolicy)
        self.quality_25.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_25.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_25.setFont(font)
        self.quality_25.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_25.setCheckable(True)
        self.quality_25.setObjectName("quality_25")
        self.gridLayout_11.addWidget(self.quality_25, 1, 9, 1, 1)
        self.quality_9 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_9.sizePolicy().hasHeightForWidth())
        self.quality_9.setSizePolicy(sizePolicy)
        self.quality_9.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_9.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_9.setFont(font)
        self.quality_9.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_9.setIconSize(QtCore.QSize(30, 30))
        self.quality_9.setCheckable(True)
        self.quality_9.setObjectName("quality_9")
        self.gridLayout_11.addWidget(self.quality_9, 0, 8, 1, 1)
        self.quality_4 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_4.sizePolicy().hasHeightForWidth())
        self.quality_4.setSizePolicy(sizePolicy)
        self.quality_4.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_4.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_4.setFont(font)
        self.quality_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_4.setIconSize(QtCore.QSize(30, 30))
        self.quality_4.setCheckable(True)
        self.quality_4.setObjectName("quality_4")
        self.gridLayout_11.addWidget(self.quality_4, 0, 3, 1, 1)
        self.quality_16 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_16.sizePolicy().hasHeightForWidth())
        self.quality_16.setSizePolicy(sizePolicy)
        self.quality_16.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_16.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_16.setFont(font)
        self.quality_16.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_16.setIconSize(QtCore.QSize(30, 30))
        self.quality_16.setCheckable(True)
        self.quality_16.setObjectName("quality_16")
        self.gridLayout_11.addWidget(self.quality_16, 1, 0, 1, 1)
        self.quality_24 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_24.sizePolicy().hasHeightForWidth())
        self.quality_24.setSizePolicy(sizePolicy)
        self.quality_24.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_24.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_24.setFont(font)
        self.quality_24.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_24.setCheckable(True)
        self.quality_24.setObjectName("quality_24")
        self.gridLayout_11.addWidget(self.quality_24, 1, 8, 1, 1)
        self.quality_6 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_6.sizePolicy().hasHeightForWidth())
        self.quality_6.setSizePolicy(sizePolicy)
        self.quality_6.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_6.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_6.setFont(font)
        self.quality_6.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_6.setIconSize(QtCore.QSize(30, 30))
        self.quality_6.setCheckable(True)
        self.quality_6.setObjectName("quality_6")
        self.gridLayout_11.addWidget(self.quality_6, 0, 5, 1, 1)
        self.quality_21 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_21.sizePolicy().hasHeightForWidth())
        self.quality_21.setSizePolicy(sizePolicy)
        self.quality_21.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_21.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_21.setFont(font)
        self.quality_21.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_21.setCheckable(True)
        self.quality_21.setObjectName("quality_21")
        self.gridLayout_11.addWidget(self.quality_21, 1, 5, 1, 1)
        self.quality_11 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_11.sizePolicy().hasHeightForWidth())
        self.quality_11.setSizePolicy(sizePolicy)
        self.quality_11.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_11.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_11.setFont(font)
        self.quality_11.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_11.setIconSize(QtCore.QSize(30, 30))
        self.quality_11.setCheckable(True)
        self.quality_11.setObjectName("quality_11")
        self.gridLayout_11.addWidget(self.quality_11, 0, 10, 1, 1)
        self.quality_12 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_12.sizePolicy().hasHeightForWidth())
        self.quality_12.setSizePolicy(sizePolicy)
        self.quality_12.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_12.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_12.setFont(font)
        self.quality_12.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_12.setIconSize(QtCore.QSize(30, 30))
        self.quality_12.setCheckable(True)
        self.quality_12.setObjectName("quality_12")
        self.gridLayout_11.addWidget(self.quality_12, 0, 11, 1, 1)
        self.quality_29 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_29.sizePolicy().hasHeightForWidth())
        self.quality_29.setSizePolicy(sizePolicy)
        self.quality_29.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_29.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_29.setFont(font)
        self.quality_29.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_29.setIconSize(QtCore.QSize(30, 30))
        self.quality_29.setCheckable(True)
        self.quality_29.setObjectName("quality_29")
        self.gridLayout_11.addWidget(self.quality_29, 1, 13, 1, 1)
        self.quality_15 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_15.sizePolicy().hasHeightForWidth())
        self.quality_15.setSizePolicy(sizePolicy)
        self.quality_15.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_15.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_15.setFont(font)
        self.quality_15.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_15.setIconSize(QtCore.QSize(30, 30))
        self.quality_15.setCheckable(True)
        self.quality_15.setObjectName("quality_15")
        self.gridLayout_11.addWidget(self.quality_15, 0, 14, 1, 1)
        self.quality_19 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_19.sizePolicy().hasHeightForWidth())
        self.quality_19.setSizePolicy(sizePolicy)
        self.quality_19.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_19.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_19.setFont(font)
        self.quality_19.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_19.setCheckable(True)
        self.quality_19.setObjectName("quality_19")
        self.gridLayout_11.addWidget(self.quality_19, 1, 3, 1, 1)
        self.quality_14 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_14.sizePolicy().hasHeightForWidth())
        self.quality_14.setSizePolicy(sizePolicy)
        self.quality_14.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_14.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_14.setFont(font)
        self.quality_14.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_14.setIconSize(QtCore.QSize(30, 30))
        self.quality_14.setCheckable(True)
        self.quality_14.setObjectName("quality_14")
        self.gridLayout_11.addWidget(self.quality_14, 0, 13, 1, 1)
        self.quality_2 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_2.sizePolicy().hasHeightForWidth())
        self.quality_2.setSizePolicy(sizePolicy)
        self.quality_2.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_2.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_2.setFont(font)
        self.quality_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_2.setIconSize(QtCore.QSize(30, 30))
        self.quality_2.setCheckable(True)
        self.quality_2.setObjectName("quality_2")
        self.gridLayout_11.addWidget(self.quality_2, 0, 1, 1, 1)
        self.quality_7 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_7.sizePolicy().hasHeightForWidth())
        self.quality_7.setSizePolicy(sizePolicy)
        self.quality_7.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_7.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_7.setFont(font)
        self.quality_7.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_7.setIconSize(QtCore.QSize(30, 30))
        self.quality_7.setCheckable(True)
        self.quality_7.setObjectName("quality_7")
        self.gridLayout_11.addWidget(self.quality_7, 0, 6, 1, 1)
        self.quality_1 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_1.sizePolicy().hasHeightForWidth())
        self.quality_1.setSizePolicy(sizePolicy)
        self.quality_1.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_1.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_1.setFont(font)
        self.quality_1.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_1.setIconSize(QtCore.QSize(30, 30))
        self.quality_1.setCheckable(True)
        self.quality_1.setObjectName("quality_1")
        self.gridLayout_11.addWidget(self.quality_1, 0, 0, 1, 1)
        self.quality_18 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_18.sizePolicy().hasHeightForWidth())
        self.quality_18.setSizePolicy(sizePolicy)
        self.quality_18.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_18.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_18.setFont(font)
        self.quality_18.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_18.setCheckable(True)
        self.quality_18.setObjectName("quality_18")
        self.gridLayout_11.addWidget(self.quality_18, 1, 2, 1, 1)
        self.quality_23 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_23.sizePolicy().hasHeightForWidth())
        self.quality_23.setSizePolicy(sizePolicy)
        self.quality_23.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_23.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_23.setFont(font)
        self.quality_23.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_23.setCheckable(True)
        self.quality_23.setObjectName("quality_23")
        self.gridLayout_11.addWidget(self.quality_23, 1, 7, 1, 1)
        self.quality_10 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_10.sizePolicy().hasHeightForWidth())
        self.quality_10.setSizePolicy(sizePolicy)
        self.quality_10.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_10.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_10.setFont(font)
        self.quality_10.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_10.setIconSize(QtCore.QSize(30, 30))
        self.quality_10.setCheckable(True)
        self.quality_10.setObjectName("quality_10")
        self.gridLayout_11.addWidget(self.quality_10, 0, 9, 1, 1)
        self.quality_17 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_17.sizePolicy().hasHeightForWidth())
        self.quality_17.setSizePolicy(sizePolicy)
        self.quality_17.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_17.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_17.setFont(font)
        self.quality_17.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_17.setCheckable(True)
        self.quality_17.setObjectName("quality_17")
        self.gridLayout_11.addWidget(self.quality_17, 1, 1, 1, 1)
        self.quality_8 = QtWidgets.QPushButton(self.quality_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.quality_8.sizePolicy().hasHeightForWidth())
        self.quality_8.setSizePolicy(sizePolicy)
        self.quality_8.setMinimumSize(QtCore.QSize(0, 0))
        self.quality_8.setMaximumSize(QtCore.QSize(167775, 167775))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.quality_8.setFont(font)
        self.quality_8.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.quality_8.setIconSize(QtCore.QSize(30, 30))
        self.quality_8.setCheckable(True)
        self.quality_8.setObjectName("quality_8")
        self.gridLayout_11.addWidget(self.quality_8, 0, 7, 1, 1)
        self.verticalLayout_16.addWidget(self.quality_buttons)
        self.verticalLayout_15.addWidget(self.splitter_7)
        self.verticalLayout_38.addWidget(self.item_options_container)
        self.verticalLayout_19.addWidget(self.frame_5)
        self.proceed_btn = QtWidgets.QPushButton(self.item_options_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.proceed_btn.sizePolicy().hasHeightForWidth())
        self.proceed_btn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.proceed_btn.setFont(font)
        self.proceed_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.proceed_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                  border-top-width: 1px;\n"
"                   border-right-width: 1px;\n"
"                   border-bottom-width: 1px;\n"
"                   border-left-width: 1px;\n"
"                   border-top-style: solid;\n"
"                 border-right-style: solid;\n"
"                  border-bottom-style: solid;\n"
"                   border-left-style: solid;\n"
"                   border-top-color: rgb(0, 0, 0);\n"
"                  border-right-color: rgb(0, 0, 0);\n"
"                   border-bottom-color: rgb(0, 0, 0);\n"
"                   border-left-color: rgb(0, 0, 0);\n"
"                  border-image-source: initial;\n"
"                  border-image-slice: initial;\n"
"                  border-image-width: initial;\n"
"                  border-image-outset: initial;\n"
"                border-image-repeat: initial;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               text-shadow: 1px 1px #000;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"           }\n"
"            QPushButton::hover {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"           }\n"
"            QPushButton::pressed {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                                  stop: 0 #4b4b4b, stop: 1 #2d2d2d);\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"                border: 5px inset #FFF;\n"
"                box-shadow: none;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.proceed_btn.setObjectName("proceed_btn")
        self.verticalLayout_19.addWidget(self.proceed_btn)
        self.crafting_simulator.addWidget(self.item_options_page)
        self.crafting_page = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.crafting_page.sizePolicy().hasHeightForWidth())
        self.crafting_page.setSizePolicy(sizePolicy)
        self.crafting_page.setStyleSheet("border-image: url(:/icons/assets/images/emubg.png);")
        self.crafting_page.setObjectName("crafting_page")
        self.verticalLayout_17 = QtWidgets.QVBoxLayout(self.crafting_page)
        self.verticalLayout_17.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_17.setSpacing(0)
        self.verticalLayout_17.setObjectName("verticalLayout_17")
        self.crafting_methods = QtWidgets.QWidget(self.crafting_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.crafting_methods.sizePolicy().hasHeightForWidth())
        self.crafting_methods.setSizePolicy(sizePolicy)
        self.crafting_methods.setMouseTracking(True)
        self.crafting_methods.setStyleSheet("border-image: none;")
        self.crafting_methods.setObjectName("crafting_methods")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.crafting_methods)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setSpacing(0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.common_crafting_methods = QtWidgets.QWidget(self.crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.common_crafting_methods.sizePolicy().hasHeightForWidth())
        self.common_crafting_methods.setSizePolicy(sizePolicy)
        self.common_crafting_methods.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("fontin-smallcaps")
        font.setPointSize(9)
        self.common_crafting_methods.setFont(font)
        self.common_crafting_methods.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.common_crafting_methods.setMouseTracking(True)
        self.common_crafting_methods.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.common_crafting_methods.setToolTipDuration(-3)
        self.common_crafting_methods.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                  border-top-width: 1px;\n"
"                   border-right-width: 1px;\n"
"                   border-bottom-width: 1px;\n"
"                   border-left-width: 1px;\n"
"                   border-top-style: solid;\n"
"                 border-right-style: solid;\n"
"                  border-bottom-style: solid;\n"
"                   border-left-style: solid;\n"
"                   border-top-color: rgb(0, 0, 0);\n"
"                  border-right-color: rgb(0, 0, 0);\n"
"                   border-bottom-color: rgb(0, 0, 0);\n"
"                   border-left-color: rgb(0, 0, 0);\n"
"                  border-image-source: initial;\n"
"                  border-image-slice: initial;\n"
"                  border-image-width: initial;\n"
"                  border-image-outset: initial;\n"
"                border-image-repeat: initial;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               text-shadow: 1px 1px #000;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"           }\n"
"            QPushButton::hover {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"           }\n"
"            QPushButton::pressed {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                                  stop: 0 #4b4b4b, stop: 1 #2d2d2d);\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"                border: 1px inset #FFF;\n"
"                box-shadow: none;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.common_crafting_methods.setObjectName("common_crafting_methods")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.common_crafting_methods)
        self.horizontalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_8.setSpacing(0)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.method_transmute_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_transmute_btn.sizePolicy().hasHeightForWidth())
        self.method_transmute_btn.setSizePolicy(sizePolicy)
        self.method_transmute_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_transmute_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_transmute_btn.setMouseTracking(True)
        self.method_transmute_btn.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.method_transmute_btn.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_transmute.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_transmute_btn.setIcon(icon7)
        self.method_transmute_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_transmute_btn.setCheckable(True)
        self.method_transmute_btn.setChecked(False)
        self.method_transmute_btn.setObjectName("method_transmute_btn")
        self.horizontalLayout_8.addWidget(self.method_transmute_btn)
        self.method_alteration_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_alteration_btn.sizePolicy().hasHeightForWidth())
        self.method_alteration_btn.setSizePolicy(sizePolicy)
        self.method_alteration_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_alteration_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_alteration_btn.setMouseTracking(True)
        self.method_alteration_btn.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_alteration.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_alteration_btn.setIcon(icon8)
        self.method_alteration_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_alteration_btn.setCheckable(True)
        self.method_alteration_btn.setObjectName("method_alteration_btn")
        self.horizontalLayout_8.addWidget(self.method_alteration_btn)
        self.method_augmentation_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_augmentation_btn.sizePolicy().hasHeightForWidth())
        self.method_augmentation_btn.setSizePolicy(sizePolicy)
        self.method_augmentation_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_augmentation_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_augmentation_btn.setMouseTracking(True)
        self.method_augmentation_btn.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_augmentation.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_augmentation_btn.setIcon(icon9)
        self.method_augmentation_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_augmentation_btn.setCheckable(True)
        self.method_augmentation_btn.setObjectName("method_augmentation_btn")
        self.horizontalLayout_8.addWidget(self.method_augmentation_btn)
        self.method_regal_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_regal_btn.sizePolicy().hasHeightForWidth())
        self.method_regal_btn.setSizePolicy(sizePolicy)
        self.method_regal_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_regal_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_regal_btn.setMouseTracking(True)
        self.method_regal_btn.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_regal.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_regal_btn.setIcon(icon10)
        self.method_regal_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_regal_btn.setCheckable(True)
        self.method_regal_btn.setObjectName("method_regal_btn")
        self.horizontalLayout_8.addWidget(self.method_regal_btn)
        self.method_alchemy_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_alchemy_btn.sizePolicy().hasHeightForWidth())
        self.method_alchemy_btn.setSizePolicy(sizePolicy)
        self.method_alchemy_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_alchemy_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_alchemy_btn.setMouseTracking(True)
        self.method_alchemy_btn.setText("")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_alchemy.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_alchemy_btn.setIcon(icon11)
        self.method_alchemy_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_alchemy_btn.setCheckable(True)
        self.method_alchemy_btn.setObjectName("method_alchemy_btn")
        self.horizontalLayout_8.addWidget(self.method_alchemy_btn)
        self.method_chaos_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_chaos_btn.sizePolicy().hasHeightForWidth())
        self.method_chaos_btn.setSizePolicy(sizePolicy)
        self.method_chaos_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_chaos_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_chaos_btn.setMouseTracking(True)
        self.method_chaos_btn.setText("")
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_chaos.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_chaos_btn.setIcon(icon12)
        self.method_chaos_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_chaos_btn.setCheckable(True)
        self.method_chaos_btn.setObjectName("method_chaos_btn")
        self.horizontalLayout_8.addWidget(self.method_chaos_btn)
        self.method_exalted_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_exalted_btn.sizePolicy().hasHeightForWidth())
        self.method_exalted_btn.setSizePolicy(sizePolicy)
        self.method_exalted_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_exalted_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_exalted_btn.setMouseTracking(True)
        self.method_exalted_btn.setText("")
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_exalted.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_exalted_btn.setIcon(icon13)
        self.method_exalted_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_exalted_btn.setCheckable(True)
        self.method_exalted_btn.setObjectName("method_exalted_btn")
        self.horizontalLayout_8.addWidget(self.method_exalted_btn)
        self.method_scour_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_scour_btn.sizePolicy().hasHeightForWidth())
        self.method_scour_btn.setSizePolicy(sizePolicy)
        self.method_scour_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_scour_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_scour_btn.setMouseTracking(True)
        self.method_scour_btn.setText("")
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_scour.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_scour_btn.setIcon(icon14)
        self.method_scour_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_scour_btn.setCheckable(True)
        self.method_scour_btn.setChecked(False)
        self.method_scour_btn.setObjectName("method_scour_btn")
        self.horizontalLayout_8.addWidget(self.method_scour_btn)
        self.method_annul_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_annul_btn.sizePolicy().hasHeightForWidth())
        self.method_annul_btn.setSizePolicy(sizePolicy)
        self.method_annul_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_annul_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_annul_btn.setMouseTracking(True)
        self.method_annul_btn.setText("")
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_annul.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_annul_btn.setIcon(icon15)
        self.method_annul_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_annul_btn.setCheckable(True)
        self.method_annul_btn.setObjectName("method_annul_btn")
        self.horizontalLayout_8.addWidget(self.method_annul_btn)
        self.method_crusader_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_crusader_btn.sizePolicy().hasHeightForWidth())
        self.method_crusader_btn.setSizePolicy(sizePolicy)
        self.method_crusader_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_crusader_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_crusader_btn.setMouseTracking(True)
        self.method_crusader_btn.setText("")
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_crusader.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_crusader_btn.setIcon(icon16)
        self.method_crusader_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_crusader_btn.setCheckable(True)
        self.method_crusader_btn.setObjectName("method_crusader_btn")
        self.horizontalLayout_8.addWidget(self.method_crusader_btn)
        self.method_hunter_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_hunter_btn.sizePolicy().hasHeightForWidth())
        self.method_hunter_btn.setSizePolicy(sizePolicy)
        self.method_hunter_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_hunter_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_hunter_btn.setMouseTracking(True)
        self.method_hunter_btn.setText("")
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_hunter.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_hunter_btn.setIcon(icon17)
        self.method_hunter_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_hunter_btn.setCheckable(True)
        self.method_hunter_btn.setObjectName("method_hunter_btn")
        self.horizontalLayout_8.addWidget(self.method_hunter_btn)
        self.method_redeemer_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_redeemer_btn.sizePolicy().hasHeightForWidth())
        self.method_redeemer_btn.setSizePolicy(sizePolicy)
        self.method_redeemer_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_redeemer_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_redeemer_btn.setMouseTracking(True)
        self.method_redeemer_btn.setText("")
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_redeemer.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_redeemer_btn.setIcon(icon18)
        self.method_redeemer_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_redeemer_btn.setCheckable(True)
        self.method_redeemer_btn.setObjectName("method_redeemer_btn")
        self.horizontalLayout_8.addWidget(self.method_redeemer_btn)
        self.method_warlord_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_warlord_btn.sizePolicy().hasHeightForWidth())
        self.method_warlord_btn.setSizePolicy(sizePolicy)
        self.method_warlord_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_warlord_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_warlord_btn.setMouseTracking(True)
        self.method_warlord_btn.setText("")
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_warlord.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_warlord_btn.setIcon(icon19)
        self.method_warlord_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_warlord_btn.setCheckable(True)
        self.method_warlord_btn.setObjectName("method_warlord_btn")
        self.horizontalLayout_8.addWidget(self.method_warlord_btn)
        self.method_blessed_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_blessed_btn.sizePolicy().hasHeightForWidth())
        self.method_blessed_btn.setSizePolicy(sizePolicy)
        self.method_blessed_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_blessed_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_blessed_btn.setMouseTracking(True)
        self.method_blessed_btn.setText("")
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_blessed.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_blessed_btn.setIcon(icon20)
        self.method_blessed_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_blessed_btn.setCheckable(True)
        self.method_blessed_btn.setObjectName("method_blessed_btn")
        self.horizontalLayout_8.addWidget(self.method_blessed_btn)
        self.method_divine_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_divine_btn.sizePolicy().hasHeightForWidth())
        self.method_divine_btn.setSizePolicy(sizePolicy)
        self.method_divine_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_divine_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_divine_btn.setMouseTracking(True)
        self.method_divine_btn.setText("")
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_divine.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_divine_btn.setIcon(icon21)
        self.method_divine_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_divine_btn.setCheckable(True)
        self.method_divine_btn.setObjectName("method_divine_btn")
        self.horizontalLayout_8.addWidget(self.method_divine_btn)
        self.method_veiled_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_veiled_btn.sizePolicy().hasHeightForWidth())
        self.method_veiled_btn.setSizePolicy(sizePolicy)
        self.method_veiled_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_veiled_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_veiled_btn.setMouseTracking(True)
        self.method_veiled_btn.setText("")
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_veiled.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_veiled_btn.setIcon(icon22)
        self.method_veiled_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_veiled_btn.setCheckable(True)
        self.method_veiled_btn.setObjectName("method_veiled_btn")
        self.horizontalLayout_8.addWidget(self.method_veiled_btn)
        self.method_woke_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_woke_btn.sizePolicy().hasHeightForWidth())
        self.method_woke_btn.setSizePolicy(sizePolicy)
        self.method_woke_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_woke_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_woke_btn.setMouseTracking(True)
        self.method_woke_btn.setText("")
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_woke.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_woke_btn.setIcon(icon23)
        self.method_woke_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_woke_btn.setCheckable(True)
        self.method_woke_btn.setObjectName("method_woke_btn")
        self.horizontalLayout_8.addWidget(self.method_woke_btn)
        self.method_maven_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_maven_btn.sizePolicy().hasHeightForWidth())
        self.method_maven_btn.setSizePolicy(sizePolicy)
        self.method_maven_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_maven_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_maven_btn.setMouseTracking(True)
        self.method_maven_btn.setText("")
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_maven.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_maven_btn.setIcon(icon24)
        self.method_maven_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_maven_btn.setCheckable(True)
        self.method_maven_btn.setObjectName("method_maven_btn")
        self.horizontalLayout_8.addWidget(self.method_maven_btn)
        self.method_fracturing_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_fracturing_btn.sizePolicy().hasHeightForWidth())
        self.method_fracturing_btn.setSizePolicy(sizePolicy)
        self.method_fracturing_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_fracturing_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_fracturing_btn.setMouseTracking(True)
        self.method_fracturing_btn.setText("")
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_fracturing.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_fracturing_btn.setIcon(icon25)
        self.method_fracturing_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_fracturing_btn.setCheckable(True)
        self.method_fracturing_btn.setObjectName("method_fracturing_btn")
        self.horizontalLayout_8.addWidget(self.method_fracturing_btn)
        self.locus_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.locus_btn.sizePolicy().hasHeightForWidth())
        self.locus_btn.setSizePolicy(sizePolicy)
        self.locus_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.locus_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.locus_btn.setMouseTracking(True)
        self.locus_btn.setText("")
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/images/assets/images/locus.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.locus_btn.setIcon(icon26)
        self.locus_btn.setIconSize(QtCore.QSize(30, 30))
        self.locus_btn.setCheckable(True)
        self.locus_btn.setObjectName("locus_btn")
        self.horizontalLayout_8.addWidget(self.locus_btn)
        self.method_vaal_btn = CustomCursorButton(self.common_crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_vaal_btn.sizePolicy().hasHeightForWidth())
        self.method_vaal_btn.setSizePolicy(sizePolicy)
        self.method_vaal_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_vaal_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_vaal_btn.setMouseTracking(True)
        self.method_vaal_btn.setText("")
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_vaal.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_vaal_btn.setIcon(icon27)
        self.method_vaal_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_vaal_btn.setCheckable(True)
        self.method_vaal_btn.setObjectName("method_vaal_btn")
        self.horizontalLayout_8.addWidget(self.method_vaal_btn)
        self.verticalLayout_7.addWidget(self.common_crafting_methods)
        self.crafting_method_group_btns = QtWidgets.QWidget(self.crafting_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.crafting_method_group_btns.sizePolicy().hasHeightForWidth())
        self.crafting_method_group_btns.setSizePolicy(sizePolicy)
        self.crafting_method_group_btns.setStyleSheet("margin: 0px;\n"
"padding: 0px;")
        self.crafting_method_group_btns.setObjectName("crafting_method_group_btns")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.crafting_method_group_btns)
        self.horizontalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_9.setSpacing(0)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.method_fossil_btn = QtWidgets.QPushButton(self.crafting_method_group_btns)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_fossil_btn.sizePolicy().hasHeightForWidth())
        self.method_fossil_btn.setSizePolicy(sizePolicy)
        self.method_fossil_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_fossil_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_fossil_btn.setMouseTracking(True)
        self.method_fossil_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.method_fossil_btn.setText("")
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_fossil_btn.setIcon(icon28)
        self.method_fossil_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_fossil_btn.setCheckable(True)
        self.method_fossil_btn.setObjectName("method_fossil_btn")
        self.crafting_method_group_btns_group = QtWidgets.QButtonGroup(MainWindow)
        self.crafting_method_group_btns_group.setObjectName("crafting_method_group_btns_group")
        self.crafting_method_group_btns_group.addButton(self.method_fossil_btn)
        self.horizontalLayout_9.addWidget(self.method_fossil_btn)
        self.method_harvest_btn = QtWidgets.QPushButton(self.crafting_method_group_btns)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_harvest_btn.sizePolicy().hasHeightForWidth())
        self.method_harvest_btn.setSizePolicy(sizePolicy)
        self.method_harvest_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_harvest_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_harvest_btn.setMouseTracking(True)
        self.method_harvest_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.method_harvest_btn.setText("")
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_harvest.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_harvest_btn.setIcon(icon29)
        self.method_harvest_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_harvest_btn.setCheckable(True)
        self.method_harvest_btn.setObjectName("method_harvest_btn")
        self.crafting_method_group_btns_group.addButton(self.method_harvest_btn)
        self.horizontalLayout_9.addWidget(self.method_harvest_btn)
        self.method_essence_btn = QtWidgets.QPushButton(self.crafting_method_group_btns)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_essence_btn.sizePolicy().hasHeightForWidth())
        self.method_essence_btn.setSizePolicy(sizePolicy)
        self.method_essence_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_essence_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_essence_btn.setMouseTracking(True)
        self.method_essence_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.method_essence_btn.setText("")
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_essence.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_essence_btn.setIcon(icon30)
        self.method_essence_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_essence_btn.setCheckable(True)
        self.method_essence_btn.setObjectName("method_essence_btn")
        self.crafting_method_group_btns_group.addButton(self.method_essence_btn)
        self.horizontalLayout_9.addWidget(self.method_essence_btn)
        self.catalyst_method_btn = QtWidgets.QPushButton(self.crafting_method_group_btns)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.catalyst_method_btn.sizePolicy().hasHeightForWidth())
        self.catalyst_method_btn.setSizePolicy(sizePolicy)
        self.catalyst_method_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.catalyst_method_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.catalyst_method_btn.setMouseTracking(True)
        self.catalyst_method_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.catalyst_method_btn.setText("")
        icon31 = QtGui.QIcon()
        icon31.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_catalyst.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.catalyst_method_btn.setIcon(icon31)
        self.catalyst_method_btn.setIconSize(QtCore.QSize(30, 30))
        self.catalyst_method_btn.setCheckable(True)
        self.catalyst_method_btn.setObjectName("catalyst_method_btn")
        self.crafting_method_group_btns_group.addButton(self.catalyst_method_btn)
        self.horizontalLayout_9.addWidget(self.catalyst_method_btn)
        self.method_imprint_btn = QtWidgets.QPushButton(self.crafting_method_group_btns)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_imprint_btn.sizePolicy().hasHeightForWidth())
        self.method_imprint_btn.setSizePolicy(sizePolicy)
        self.method_imprint_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_imprint_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_imprint_btn.setMouseTracking(True)
        self.method_imprint_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.method_imprint_btn.setText("")
        icon32 = QtGui.QIcon()
        icon32.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_imprint.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_imprint_btn.setIcon(icon32)
        self.method_imprint_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_imprint_btn.setCheckable(True)
        self.method_imprint_btn.setObjectName("method_imprint_btn")
        self.crafting_method_group_btns_group.addButton(self.method_imprint_btn)
        self.horizontalLayout_9.addWidget(self.method_imprint_btn)
        self.eldritch_method_btn = QtWidgets.QPushButton(self.crafting_method_group_btns)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.eldritch_method_btn.sizePolicy().hasHeightForWidth())
        self.eldritch_method_btn.setSizePolicy(sizePolicy)
        self.eldritch_method_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.eldritch_method_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.eldritch_method_btn.setMouseTracking(True)
        self.eldritch_method_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.eldritch_method_btn.setText("")
        icon33 = QtGui.QIcon()
        icon33.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_eldritch.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.eldritch_method_btn.setIcon(icon33)
        self.eldritch_method_btn.setIconSize(QtCore.QSize(30, 30))
        self.eldritch_method_btn.setCheckable(True)
        self.eldritch_method_btn.setChecked(False)
        self.eldritch_method_btn.setObjectName("eldritch_method_btn")
        self.crafting_method_group_btns_group.addButton(self.eldritch_method_btn)
        self.horizontalLayout_9.addWidget(self.eldritch_method_btn)
        self.method_syndicate_btn = QtWidgets.QPushButton(self.crafting_method_group_btns)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_syndicate_btn.sizePolicy().hasHeightForWidth())
        self.method_syndicate_btn.setSizePolicy(sizePolicy)
        self.method_syndicate_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_syndicate_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_syndicate_btn.setMouseTracking(True)
        self.method_syndicate_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.method_syndicate_btn.setText("")
        icon34 = QtGui.QIcon()
        icon34.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_syndicate.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_syndicate_btn.setIcon(icon34)
        self.method_syndicate_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_syndicate_btn.setCheckable(True)
        self.method_syndicate_btn.setObjectName("method_syndicate_btn")
        self.crafting_method_group_btns_group.addButton(self.method_syndicate_btn)
        self.horizontalLayout_9.addWidget(self.method_syndicate_btn)
        self.method_crafting_bench_btn = QtWidgets.QPushButton(self.crafting_method_group_btns)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_crafting_bench_btn.sizePolicy().hasHeightForWidth())
        self.method_crafting_bench_btn.setSizePolicy(sizePolicy)
        self.method_crafting_bench_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.method_crafting_bench_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.method_crafting_bench_btn.setMouseTracking(True)
        self.method_crafting_bench_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.method_crafting_bench_btn.setText("")
        icon35 = QtGui.QIcon()
        icon35.addPixmap(QtGui.QPixmap(":/crafting_methods/assets/images/crafting_methods/method_crafting_bench.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.method_crafting_bench_btn.setIcon(icon35)
        self.method_crafting_bench_btn.setIconSize(QtCore.QSize(30, 30))
        self.method_crafting_bench_btn.setCheckable(True)
        self.method_crafting_bench_btn.setObjectName("method_crafting_bench_btn")
        self.crafting_method_group_btns_group.addButton(self.method_crafting_bench_btn)
        self.horizontalLayout_9.addWidget(self.method_crafting_bench_btn)
        self.verticalLayout_7.addWidget(self.crafting_method_group_btns, 0, QtCore.Qt.AlignTop)
        self.crafting_method_pages = QtWidgets.QStackedWidget(self.crafting_methods)
        self.crafting_method_pages.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.crafting_method_pages.sizePolicy().hasHeightForWidth())
        self.crafting_method_pages.setSizePolicy(sizePolicy)
        self.crafting_method_pages.setStyleSheet("\n"
"QWidget {\n"
"border-image: none;\n"
"}\n"
"QStackedWidget {\n"
"border-image: none;\n"
"}\n"
"QFrame {\n"
"border-image: none;\n"
"}\n"
"QLabel {\n"
"text-align: center;\n"
"padding: 5px 10px;\n"
"font-size: 12px;\n"
"background-color: #000;\n"
"width: 100%;\n"
"box-sizing: border-box;\n"
"color: #FFF;\n"
"font-family: Open Sans;\n"
"}\n"
"\n"
"QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"           }\n"
"            QPushButton::pressed {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                                  stop: 0 #4b4b4b, stop: 1 #2d2d2d);\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"                border: 1px inset #FFF;\n"
"                box-shadow: none;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.crafting_method_pages.setObjectName("crafting_method_pages")
        self.fossil_crafts = QtWidgets.QWidget()
        self.fossil_crafts.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fossil_crafts.sizePolicy().hasHeightForWidth())
        self.fossil_crafts.setSizePolicy(sizePolicy)
        self.fossil_crafts.setObjectName("fossil_crafts")
        self.verticalLayout_23 = QtWidgets.QVBoxLayout(self.fossil_crafts)
        self.verticalLayout_23.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_23.setSpacing(0)
        self.verticalLayout_23.setObjectName("verticalLayout_23")
        self.fossil_btns_container = QtWidgets.QWidget(self.fossil_crafts)
        self.fossil_btns_container.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fossil_btns_container.sizePolicy().hasHeightForWidth())
        self.fossil_btns_container.setSizePolicy(sizePolicy)
        self.fossil_btns_container.setObjectName("fossil_btns_container")
        self.verticalLayout_24 = QtWidgets.QVBoxLayout(self.fossil_btns_container)
        self.verticalLayout_24.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_24.setSpacing(0)
        self.verticalLayout_24.setObjectName("verticalLayout_24")
        self.fossil_btn_row1 = QtWidgets.QWidget(self.fossil_btns_container)
        self.fossil_btn_row1.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fossil_btn_row1.sizePolicy().hasHeightForWidth())
        self.fossil_btn_row1.setSizePolicy(sizePolicy)
        self.fossil_btn_row1.setObjectName("fossil_btn_row1")
        self.fossil_row1 = QtWidgets.QHBoxLayout(self.fossil_btn_row1)
        self.fossil_row1.setContentsMargins(0, 0, 0, 0)
        self.fossil_row1.setSpacing(0)
        self.fossil_row1.setObjectName("fossil_row1")
        self.fossil_hide_button = QtWidgets.QPushButton(self.fossil_btn_row1)
        self.fossil_hide_button.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fossil_hide_button.sizePolicy().hasHeightForWidth())
        self.fossil_hide_button.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.fossil_hide_button.setFont(font)
        self.fossil_hide_button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.fossil_hide_button.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.fossil_hide_button.setStyleSheet("QPushButton {\n"
"border: 1px solid #90701b;\n"
"border-radius: 0px;\n"
"border-image: none;\n"
"box-shadow: inset 0 1px 1px #e6b15f,0 1px 2px rgba(0,0,0,0.61);\n"
"font-family: Open Sans;\n"
"font-size: 12px;\n"
"font-weight: bold;\n"
"color: #333;\n"
"text-shadow: 1px 1px #FFF;\n"
"line-height: 29px;\n"
"height: 29px;\n"
"margin: 0px;\n"
"padding: 0px 6px 0px 4px;\n"
"cursor: pointer;\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:1, stop:0 rgba(239, 232, 158, 255), stop:1 rgba(252, 199, 121, 255));\n"
"}\n"
"            QPushButton::hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:1, stop:0 rgba(237, 231, 182, 255), stop:1 rgba(249, 206, 144, 255));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"                border: 1px inset #FFF;\n"
"                box-shadow: none;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.fossil_hide_button.setCheckable(True)
        self.fossil_hide_button.setObjectName("fossil_hide_button")
        self.fossil_row1.addWidget(self.fossil_hide_button)
        self.fossil_label = QtWidgets.QLabel(self.fossil_btn_row1)
        self.fossil_label.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fossil_label.sizePolicy().hasHeightForWidth())
        self.fossil_label.setSizePolicy(sizePolicy)
        self.fossil_label.setObjectName("fossil_label")
        self.fossil_row1.addWidget(self.fossil_label)
        self.abberant_fossil = CustomCursorButton(self.fossil_btn_row1)
        self.abberant_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.abberant_fossil.sizePolicy().hasHeightForWidth())
        self.abberant_fossil.setSizePolicy(sizePolicy)
        self.abberant_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.abberant_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon36 = QtGui.QIcon()
        icon36.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/aberrant_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.abberant_fossil.setIcon(icon36)
        self.abberant_fossil.setIconSize(QtCore.QSize(30, 30))
        self.abberant_fossil.setCheckable(True)
        self.abberant_fossil.setObjectName("abberant_fossil")
        self.fossil_btns_broup = QtWidgets.QButtonGroup(MainWindow)
        self.fossil_btns_broup.setObjectName("fossil_btns_broup")
        self.fossil_btns_broup.setExclusive(False)
        self.fossil_btns_broup.addButton(self.abberant_fossil)
        self.fossil_row1.addWidget(self.abberant_fossil)
        self.aetheric_fossil = CustomCursorButton(self.fossil_btn_row1)
        self.aetheric_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.aetheric_fossil.sizePolicy().hasHeightForWidth())
        self.aetheric_fossil.setSizePolicy(sizePolicy)
        self.aetheric_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.aetheric_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon37 = QtGui.QIcon()
        icon37.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/aetheric_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.aetheric_fossil.setIcon(icon37)
        self.aetheric_fossil.setIconSize(QtCore.QSize(30, 30))
        self.aetheric_fossil.setCheckable(True)
        self.aetheric_fossil.setObjectName("aetheric_fossil")
        self.fossil_btns_broup.addButton(self.aetheric_fossil)
        self.fossil_row1.addWidget(self.aetheric_fossil)
        self.bound_fossil = CustomCursorButton(self.fossil_btn_row1)
        self.bound_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bound_fossil.sizePolicy().hasHeightForWidth())
        self.bound_fossil.setSizePolicy(sizePolicy)
        self.bound_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.bound_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon38 = QtGui.QIcon()
        icon38.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/bound_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bound_fossil.setIcon(icon38)
        self.bound_fossil.setIconSize(QtCore.QSize(30, 30))
        self.bound_fossil.setCheckable(True)
        self.bound_fossil.setObjectName("bound_fossil")
        self.fossil_btns_broup.addButton(self.bound_fossil)
        self.fossil_row1.addWidget(self.bound_fossil)
        self.corroded_fossil = CustomCursorButton(self.fossil_btn_row1)
        self.corroded_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.corroded_fossil.sizePolicy().hasHeightForWidth())
        self.corroded_fossil.setSizePolicy(sizePolicy)
        self.corroded_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.corroded_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon39 = QtGui.QIcon()
        icon39.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/corroded_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.corroded_fossil.setIcon(icon39)
        self.corroded_fossil.setIconSize(QtCore.QSize(30, 30))
        self.corroded_fossil.setCheckable(True)
        self.corroded_fossil.setObjectName("corroded_fossil")
        self.fossil_btns_broup.addButton(self.corroded_fossil)
        self.fossil_row1.addWidget(self.corroded_fossil)
        self.dense_fossil = CustomCursorButton(self.fossil_btn_row1)
        self.dense_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dense_fossil.sizePolicy().hasHeightForWidth())
        self.dense_fossil.setSizePolicy(sizePolicy)
        self.dense_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.dense_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon40 = QtGui.QIcon()
        icon40.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/dense_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.dense_fossil.setIcon(icon40)
        self.dense_fossil.setIconSize(QtCore.QSize(30, 30))
        self.dense_fossil.setObjectName("dense_fossil")
        self.fossil_btns_broup.addButton(self.dense_fossil)
        self.fossil_row1.addWidget(self.dense_fossil)
        self.faceted_fossil = CustomCursorButton(self.fossil_btn_row1)
        self.faceted_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.faceted_fossil.sizePolicy().hasHeightForWidth())
        self.faceted_fossil.setSizePolicy(sizePolicy)
        self.faceted_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.faceted_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon41 = QtGui.QIcon()
        icon41.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/faceted_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.faceted_fossil.setIcon(icon41)
        self.faceted_fossil.setIconSize(QtCore.QSize(30, 30))
        self.faceted_fossil.setCheckable(True)
        self.faceted_fossil.setObjectName("faceted_fossil")
        self.fossil_btns_broup.addButton(self.faceted_fossil)
        self.fossil_row1.addWidget(self.faceted_fossil)
        self.frigid_fossil = CustomCursorButton(self.fossil_btn_row1)
        self.frigid_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frigid_fossil.sizePolicy().hasHeightForWidth())
        self.frigid_fossil.setSizePolicy(sizePolicy)
        self.frigid_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.frigid_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon42 = QtGui.QIcon()
        icon42.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/frigid_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.frigid_fossil.setIcon(icon42)
        self.frigid_fossil.setIconSize(QtCore.QSize(30, 30))
        self.frigid_fossil.setCheckable(True)
        self.frigid_fossil.setObjectName("frigid_fossil")
        self.fossil_btns_broup.addButton(self.frigid_fossil)
        self.fossil_row1.addWidget(self.frigid_fossil)
        self.jagged_fossil = CustomCursorButton(self.fossil_btn_row1)
        self.jagged_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.jagged_fossil.sizePolicy().hasHeightForWidth())
        self.jagged_fossil.setSizePolicy(sizePolicy)
        self.jagged_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.jagged_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon43 = QtGui.QIcon()
        icon43.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/jagged_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.jagged_fossil.setIcon(icon43)
        self.jagged_fossil.setIconSize(QtCore.QSize(30, 30))
        self.jagged_fossil.setCheckable(True)
        self.jagged_fossil.setObjectName("jagged_fossil")
        self.fossil_btns_broup.addButton(self.jagged_fossil)
        self.fossil_row1.addWidget(self.jagged_fossil)
        self.lucent_fossil = CustomCursorButton(self.fossil_btn_row1)
        self.lucent_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lucent_fossil.sizePolicy().hasHeightForWidth())
        self.lucent_fossil.setSizePolicy(sizePolicy)
        self.lucent_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.lucent_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon44 = QtGui.QIcon()
        icon44.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/lucent_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.lucent_fossil.setIcon(icon44)
        self.lucent_fossil.setIconSize(QtCore.QSize(30, 30))
        self.lucent_fossil.setCheckable(True)
        self.lucent_fossil.setObjectName("lucent_fossil")
        self.fossil_btns_broup.addButton(self.lucent_fossil)
        self.fossil_row1.addWidget(self.lucent_fossil)
        self.metallic_fossil = CustomCursorButton(self.fossil_btn_row1)
        self.metallic_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.metallic_fossil.sizePolicy().hasHeightForWidth())
        self.metallic_fossil.setSizePolicy(sizePolicy)
        self.metallic_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        icon45 = QtGui.QIcon()
        icon45.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/metallic_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.metallic_fossil.setIcon(icon45)
        self.metallic_fossil.setIconSize(QtCore.QSize(30, 30))
        self.metallic_fossil.setCheckable(True)
        self.metallic_fossil.setObjectName("metallic_fossil")
        self.fossil_btns_broup.addButton(self.metallic_fossil)
        self.fossil_row1.addWidget(self.metallic_fossil)
        self.prismatic_fossil = CustomCursorButton(self.fossil_btn_row1)
        self.prismatic_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.prismatic_fossil.sizePolicy().hasHeightForWidth())
        self.prismatic_fossil.setSizePolicy(sizePolicy)
        self.prismatic_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.prismatic_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon46 = QtGui.QIcon()
        icon46.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/prismatic_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.prismatic_fossil.setIcon(icon46)
        self.prismatic_fossil.setIconSize(QtCore.QSize(30, 30))
        self.prismatic_fossil.setCheckable(True)
        self.prismatic_fossil.setObjectName("prismatic_fossil")
        self.fossil_btns_broup.addButton(self.prismatic_fossil)
        self.fossil_row1.addWidget(self.prismatic_fossil)
        self.verticalLayout_24.addWidget(self.fossil_btn_row1)
        self.fossil_btn_row2 = QtWidgets.QWidget(self.fossil_btns_container)
        self.fossil_btn_row2.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fossil_btn_row2.sizePolicy().hasHeightForWidth())
        self.fossil_btn_row2.setSizePolicy(sizePolicy)
        self.fossil_btn_row2.setObjectName("fossil_btn_row2")
        self.fossil_row2 = QtWidgets.QHBoxLayout(self.fossil_btn_row2)
        self.fossil_row2.setContentsMargins(0, 0, 0, 0)
        self.fossil_row2.setSpacing(0)
        self.fossil_row2.setObjectName("fossil_row2")
        self.pristine_fossil = CustomCursorButton(self.fossil_btn_row2)
        self.pristine_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pristine_fossil.sizePolicy().hasHeightForWidth())
        self.pristine_fossil.setSizePolicy(sizePolicy)
        self.pristine_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pristine_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon47 = QtGui.QIcon()
        icon47.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/pristine_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pristine_fossil.setIcon(icon47)
        self.pristine_fossil.setIconSize(QtCore.QSize(30, 30))
        self.pristine_fossil.setCheckable(True)
        self.pristine_fossil.setObjectName("pristine_fossil")
        self.fossil_btns_broup.addButton(self.pristine_fossil)
        self.fossil_row2.addWidget(self.pristine_fossil)
        self.scorched_fossil = CustomCursorButton(self.fossil_btn_row2)
        self.scorched_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scorched_fossil.sizePolicy().hasHeightForWidth())
        self.scorched_fossil.setSizePolicy(sizePolicy)
        self.scorched_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.scorched_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon48 = QtGui.QIcon()
        icon48.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/scorched_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.scorched_fossil.setIcon(icon48)
        self.scorched_fossil.setIconSize(QtCore.QSize(30, 30))
        self.scorched_fossil.setCheckable(True)
        self.scorched_fossil.setObjectName("scorched_fossil")
        self.fossil_btns_broup.addButton(self.scorched_fossil)
        self.fossil_row2.addWidget(self.scorched_fossil)
        self.serrated_fossil = CustomCursorButton(self.fossil_btn_row2)
        self.serrated_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.serrated_fossil.sizePolicy().hasHeightForWidth())
        self.serrated_fossil.setSizePolicy(sizePolicy)
        self.serrated_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.serrated_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon49 = QtGui.QIcon()
        icon49.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/serrated_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.serrated_fossil.setIcon(icon49)
        self.serrated_fossil.setIconSize(QtCore.QSize(30, 30))
        self.serrated_fossil.setCheckable(True)
        self.serrated_fossil.setObjectName("serrated_fossil")
        self.fossil_btns_broup.addButton(self.serrated_fossil)
        self.fossil_row2.addWidget(self.serrated_fossil)
        self.shuddering_fossil = CustomCursorButton(self.fossil_btn_row2)
        self.shuddering_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.shuddering_fossil.sizePolicy().hasHeightForWidth())
        self.shuddering_fossil.setSizePolicy(sizePolicy)
        self.shuddering_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.shuddering_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon50 = QtGui.QIcon()
        icon50.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/shuddering_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.shuddering_fossil.setIcon(icon50)
        self.shuddering_fossil.setIconSize(QtCore.QSize(30, 30))
        self.shuddering_fossil.setCheckable(True)
        self.shuddering_fossil.setObjectName("shuddering_fossil")
        self.fossil_btns_broup.addButton(self.shuddering_fossil)
        self.fossil_row2.addWidget(self.shuddering_fossil)
        self.hollow_fossil = CustomCursorButton(self.fossil_btn_row2)
        self.hollow_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.hollow_fossil.sizePolicy().hasHeightForWidth())
        self.hollow_fossil.setSizePolicy(sizePolicy)
        self.hollow_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.hollow_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon51 = QtGui.QIcon()
        icon51.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/hollow_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.hollow_fossil.setIcon(icon51)
        self.hollow_fossil.setIconSize(QtCore.QSize(30, 30))
        self.hollow_fossil.setCheckable(True)
        self.hollow_fossil.setObjectName("hollow_fossil")
        self.fossil_btns_broup.addButton(self.hollow_fossil)
        self.fossil_row2.addWidget(self.hollow_fossil)
        self.sanctified_fossil = CustomCursorButton(self.fossil_btn_row2)
        self.sanctified_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sanctified_fossil.sizePolicy().hasHeightForWidth())
        self.sanctified_fossil.setSizePolicy(sizePolicy)
        self.sanctified_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.sanctified_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon52 = QtGui.QIcon()
        icon52.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/sanctified_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.sanctified_fossil.setIcon(icon52)
        self.sanctified_fossil.setIconSize(QtCore.QSize(30, 30))
        self.sanctified_fossil.setCheckable(True)
        self.sanctified_fossil.setObjectName("sanctified_fossil")
        self.fossil_btns_broup.addButton(self.sanctified_fossil)
        self.fossil_row2.addWidget(self.sanctified_fossil)
        self.glyphic_fossil = CustomCursorButton(self.fossil_btn_row2)
        self.glyphic_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.glyphic_fossil.sizePolicy().hasHeightForWidth())
        self.glyphic_fossil.setSizePolicy(sizePolicy)
        self.glyphic_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.glyphic_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon53 = QtGui.QIcon()
        icon53.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/glyphic_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.glyphic_fossil.setIcon(icon53)
        self.glyphic_fossil.setIconSize(QtCore.QSize(30, 30))
        self.glyphic_fossil.setCheckable(True)
        self.glyphic_fossil.setObjectName("glyphic_fossil")
        self.fossil_btns_broup.addButton(self.glyphic_fossil)
        self.fossil_row2.addWidget(self.glyphic_fossil)
        self.fundamental_fossil = CustomCursorButton(self.fossil_btn_row2)
        self.fundamental_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fundamental_fossil.sizePolicy().hasHeightForWidth())
        self.fundamental_fossil.setSizePolicy(sizePolicy)
        self.fundamental_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.fundamental_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon54 = QtGui.QIcon()
        icon54.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/fundamental_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.fundamental_fossil.setIcon(icon54)
        self.fundamental_fossil.setIconSize(QtCore.QSize(30, 30))
        self.fundamental_fossil.setCheckable(True)
        self.fundamental_fossil.setObjectName("fundamental_fossil")
        self.fossil_btns_broup.addButton(self.fundamental_fossil)
        self.fossil_row2.addWidget(self.fundamental_fossil)
        self.deft_fossil = CustomCursorButton(self.fossil_btn_row2)
        self.deft_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.deft_fossil.sizePolicy().hasHeightForWidth())
        self.deft_fossil.setSizePolicy(sizePolicy)
        self.deft_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.deft_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon55 = QtGui.QIcon()
        icon55.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/deft_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.deft_fossil.setIcon(icon55)
        self.deft_fossil.setIconSize(QtCore.QSize(30, 30))
        self.deft_fossil.setCheckable(True)
        self.deft_fossil.setObjectName("deft_fossil")
        self.fossil_btns_broup.addButton(self.deft_fossil)
        self.fossil_row2.addWidget(self.deft_fossil)
        self.gilded_fossil = CustomCursorButton(self.fossil_btn_row2)
        self.gilded_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.gilded_fossil.sizePolicy().hasHeightForWidth())
        self.gilded_fossil.setSizePolicy(sizePolicy)
        self.gilded_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.gilded_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon56 = QtGui.QIcon()
        icon56.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/gilded_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.gilded_fossil.setIcon(icon56)
        self.gilded_fossil.setIconSize(QtCore.QSize(30, 30))
        self.gilded_fossil.setCheckable(True)
        self.gilded_fossil.setObjectName("gilded_fossil")
        self.fossil_btns_broup.addButton(self.gilded_fossil)
        self.fossil_row2.addWidget(self.gilded_fossil)
        self.perfect_fossil = CustomCursorButton(self.fossil_btn_row2)
        self.perfect_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.perfect_fossil.sizePolicy().hasHeightForWidth())
        self.perfect_fossil.setSizePolicy(sizePolicy)
        self.perfect_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.perfect_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon57 = QtGui.QIcon()
        icon57.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/perfect_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.perfect_fossil.setIcon(icon57)
        self.perfect_fossil.setIconSize(QtCore.QSize(30, 30))
        self.perfect_fossil.setCheckable(True)
        self.perfect_fossil.setObjectName("perfect_fossil")
        self.fossil_btns_broup.addButton(self.perfect_fossil)
        self.fossil_row2.addWidget(self.perfect_fossil)
        self.tangled_fossil = CustomCursorButton(self.fossil_btn_row2)
        self.tangled_fossil.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tangled_fossil.sizePolicy().hasHeightForWidth())
        self.tangled_fossil.setSizePolicy(sizePolicy)
        self.tangled_fossil.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tangled_fossil.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon58 = QtGui.QIcon()
        icon58.addPixmap(QtGui.QPixmap(":/fossils/assets/images/fossils/tangled_fossil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tangled_fossil.setIcon(icon58)
        self.tangled_fossil.setIconSize(QtCore.QSize(30, 30))
        self.tangled_fossil.setCheckable(True)
        self.tangled_fossil.setObjectName("tangled_fossil")
        self.fossil_btns_broup.addButton(self.tangled_fossil)
        self.fossil_row2.addWidget(self.tangled_fossil)
        self.verticalLayout_24.addWidget(self.fossil_btn_row2)
        self.verticalLayout_23.addWidget(self.fossil_btns_container, 0, QtCore.Qt.AlignTop)
        self.crafting_method_pages.addWidget(self.fossil_crafts)
        self.harvest_crafts = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_crafts.sizePolicy().hasHeightForWidth())
        self.harvest_crafts.setSizePolicy(sizePolicy)
        self.harvest_crafts.setObjectName("harvest_crafts")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.harvest_crafts)
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_7.setSpacing(0)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.harvest_btns_container = QtWidgets.QWidget(self.harvest_crafts)
        self.harvest_btns_container.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_btns_container.sizePolicy().hasHeightForWidth())
        self.harvest_btns_container.setSizePolicy(sizePolicy)
        self.harvest_btns_container.setObjectName("harvest_btns_container")
        self.verticalLayout_45 = QtWidgets.QVBoxLayout(self.harvest_btns_container)
        self.verticalLayout_45.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_45.setSpacing(0)
        self.verticalLayout_45.setObjectName("verticalLayout_45")
        self.harvest_btn_row1 = QtWidgets.QWidget(self.harvest_btns_container)
        self.harvest_btn_row1.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_btn_row1.sizePolicy().hasHeightForWidth())
        self.harvest_btn_row1.setSizePolicy(sizePolicy)
        self.harvest_btn_row1.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.harvest_btn_row1.setObjectName("harvest_btn_row1")
        self.fossil_row1_2 = QtWidgets.QHBoxLayout(self.harvest_btn_row1)
        self.fossil_row1_2.setContentsMargins(0, 0, 0, 0)
        self.fossil_row1_2.setSpacing(0)
        self.fossil_row1_2.setObjectName("fossil_row1_2")
        self.harvest_hide_btn = QtWidgets.QPushButton(self.harvest_btn_row1)
        self.harvest_hide_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_hide_btn.sizePolicy().hasHeightForWidth())
        self.harvest_hide_btn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.harvest_hide_btn.setFont(font)
        self.harvest_hide_btn.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.harvest_hide_btn.setStyleSheet("QPushButton {\n"
"border: 1px solid #90701b;\n"
"border-radius: 0px;\n"
"border-image: none;\n"
"box-shadow: inset 0 1px 1px #e6b15f,0 1px 2px rgba(0,0,0,0.61);\n"
"font-family: Open Sans;\n"
"font-size: 12px;\n"
"font-weight: bold;\n"
"color: #333;\n"
"text-shadow: 1px 1px #FFF;\n"
"line-height: 29px;\n"
"height: 29px;\n"
"margin: 0px;\n"
"padding: 0px 6px 0px 4px;\n"
"cursor: pointer;\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:1, stop:0 rgba(239, 232, 158, 255), stop:1 rgba(252, 199, 121, 255));\n"
"}\n"
"            QPushButton::hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:1, stop:0 rgba(237, 231, 182, 255), stop:1 rgba(249, 206, 144, 255));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"                border: 1px inset #FFF;\n"
"                box-shadow: none;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.harvest_hide_btn.setObjectName("harvest_hide_btn")
        self.fossil_row1_2.addWidget(self.harvest_hide_btn, 0, QtCore.Qt.AlignLeft)
        self.harvest_method_label = QtWidgets.QLabel(self.harvest_btn_row1)
        self.harvest_method_label.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_method_label.sizePolicy().hasHeightForWidth())
        self.harvest_method_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.harvest_method_label.setFont(font)
        self.harvest_method_label.setObjectName("harvest_method_label")
        self.fossil_row1_2.addWidget(self.harvest_method_label, 0, QtCore.Qt.AlignLeft)
        self.harvest_add_remove_btn = CustomCursorButton(self.harvest_btn_row1)
        self.harvest_add_remove_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_add_remove_btn.sizePolicy().hasHeightForWidth())
        self.harvest_add_remove_btn.setSizePolicy(sizePolicy)
        self.harvest_add_remove_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.harvest_add_remove_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon59 = QtGui.QIcon()
        icon59.addPixmap(QtGui.QPixmap(":/harvest/assets/images/harvest/harvest_augment.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.harvest_add_remove_btn.setIcon(icon59)
        self.harvest_add_remove_btn.setIconSize(QtCore.QSize(30, 30))
        self.harvest_add_remove_btn.setCheckable(True)
        self.harvest_add_remove_btn.setChecked(False)
        self.harvest_add_remove_btn.setObjectName("harvest_add_remove_btn")
        self.harvest_group_btns_group = QtWidgets.QButtonGroup(MainWindow)
        self.harvest_group_btns_group.setObjectName("harvest_group_btns_group")
        self.harvest_group_btns_group.addButton(self.harvest_add_remove_btn)
        self.fossil_row1_2.addWidget(self.harvest_add_remove_btn)
        self.harvest_reroll_btn = CustomCursorButton(self.harvest_btn_row1)
        self.harvest_reroll_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_reroll_btn.sizePolicy().hasHeightForWidth())
        self.harvest_reroll_btn.setSizePolicy(sizePolicy)
        self.harvest_reroll_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.harvest_reroll_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon60 = QtGui.QIcon()
        icon60.addPixmap(QtGui.QPixmap(":/harvest/assets/images/harvest/harvest_reroll.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.harvest_reroll_btn.setIcon(icon60)
        self.harvest_reroll_btn.setIconSize(QtCore.QSize(30, 30))
        self.harvest_reroll_btn.setCheckable(True)
        self.harvest_reroll_btn.setObjectName("harvest_reroll_btn")
        self.harvest_group_btns_group.addButton(self.harvest_reroll_btn)
        self.fossil_row1_2.addWidget(self.harvest_reroll_btn)
        self.harvest_resists_btn = CustomCursorButton(self.harvest_btn_row1)
        self.harvest_resists_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_resists_btn.sizePolicy().hasHeightForWidth())
        self.harvest_resists_btn.setSizePolicy(sizePolicy)
        self.harvest_resists_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.harvest_resists_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.harvest_resists_btn.setIcon(icon29)
        self.harvest_resists_btn.setIconSize(QtCore.QSize(30, 30))
        self.harvest_resists_btn.setCheckable(True)
        self.harvest_resists_btn.setObjectName("harvest_resists_btn")
        self.harvest_group_btns_group.addButton(self.harvest_resists_btn)
        self.fossil_row1_2.addWidget(self.harvest_resists_btn)
        self.harvest_high_tier_btn = CustomCursorButton(self.harvest_btn_row1)
        self.harvest_high_tier_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_high_tier_btn.sizePolicy().hasHeightForWidth())
        self.harvest_high_tier_btn.setSizePolicy(sizePolicy)
        self.harvest_high_tier_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.harvest_high_tier_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.harvest_high_tier_btn.setIcon(icon29)
        self.harvest_high_tier_btn.setIconSize(QtCore.QSize(30, 30))
        self.harvest_high_tier_btn.setCheckable(True)
        self.harvest_high_tier_btn.setObjectName("harvest_high_tier_btn")
        self.harvest_group_btns_group.addButton(self.harvest_high_tier_btn)
        self.fossil_row1_2.addWidget(self.harvest_high_tier_btn)
        self.harvest_other_btn = CustomCursorButton(self.harvest_btn_row1)
        self.harvest_other_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_other_btn.sizePolicy().hasHeightForWidth())
        self.harvest_other_btn.setSizePolicy(sizePolicy)
        self.harvest_other_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.harvest_other_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.harvest_other_btn.setIcon(icon29)
        self.harvest_other_btn.setIconSize(QtCore.QSize(30, 30))
        self.harvest_other_btn.setCheckable(True)
        self.harvest_other_btn.setObjectName("harvest_other_btn")
        self.harvest_group_btns_group.addButton(self.harvest_other_btn)
        self.fossil_row1_2.addWidget(self.harvest_other_btn)
        self.verticalLayout_45.addWidget(self.harvest_btn_row1, 0, QtCore.Qt.AlignTop)
        self.harvest_methods_container = QtWidgets.QFrame(self.harvest_btns_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_methods_container.sizePolicy().hasHeightForWidth())
        self.harvest_methods_container.setSizePolicy(sizePolicy)
        self.harvest_methods_container.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.harvest_methods_container.setFrameShadow(QtWidgets.QFrame.Raised)
        self.harvest_methods_container.setObjectName("harvest_methods_container")
        self.verticalLayout_40 = QtWidgets.QVBoxLayout(self.harvest_methods_container)
        self.verticalLayout_40.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_40.setSpacing(0)
        self.verticalLayout_40.setObjectName("verticalLayout_40")
        self.harvest_method_stack = QtWidgets.QStackedWidget(self.harvest_methods_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_method_stack.sizePolicy().hasHeightForWidth())
        self.harvest_method_stack.setSizePolicy(sizePolicy)
        self.harvest_method_stack.setObjectName("harvest_method_stack")
        self.harvest_add_remove_reforge_methods = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_add_remove_reforge_methods.sizePolicy().hasHeightForWidth())
        self.harvest_add_remove_reforge_methods.setSizePolicy(sizePolicy)
        self.harvest_add_remove_reforge_methods.setObjectName("harvest_add_remove_reforge_methods")
        self.verticalLayout_41 = QtWidgets.QVBoxLayout(self.harvest_add_remove_reforge_methods)
        self.verticalLayout_41.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_41.setSpacing(0)
        self.verticalLayout_41.setObjectName("verticalLayout_41")
        self.harvest_add_remove_reforge_btn_container = QtWidgets.QWidget(self.harvest_add_remove_reforge_methods)
        self.harvest_add_remove_reforge_btn_container.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_add_remove_reforge_btn_container.sizePolicy().hasHeightForWidth())
        self.harvest_add_remove_reforge_btn_container.setSizePolicy(sizePolicy)
        self.harvest_add_remove_reforge_btn_container.setObjectName("harvest_add_remove_reforge_btn_container")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.harvest_add_remove_reforge_btn_container)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setSpacing(0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.harvest_type_label = QtWidgets.QLabel(self.harvest_add_remove_reforge_btn_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_type_label.sizePolicy().hasHeightForWidth())
        self.harvest_type_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.harvest_type_label.setFont(font)
        self.harvest_type_label.setObjectName("harvest_type_label")
        self.horizontalLayout_6.addWidget(self.harvest_type_label)
        self.attack_btn = QtWidgets.QPushButton(self.harvest_add_remove_reforge_btn_container)
        self.attack_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.attack_btn.sizePolicy().hasHeightForWidth())
        self.attack_btn.setSizePolicy(sizePolicy)
        self.attack_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.attack_btn.setStyleSheet("QPushButton {\n"
"    color: #ff9000;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #ff9000;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.attack_btn.setCheckable(True)
        self.attack_btn.setChecked(False)
        self.attack_btn.setObjectName("attack_btn")
        self.horizontalLayout_6.addWidget(self.attack_btn)
        self.caster_btn = QtWidgets.QPushButton(self.harvest_add_remove_reforge_btn_container)
        self.caster_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.caster_btn.sizePolicy().hasHeightForWidth())
        self.caster_btn.setSizePolicy(sizePolicy)
        self.caster_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.caster_btn.setStyleSheet("QPushButton {\n"
"    color: #d800ff;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #d800ff;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.caster_btn.setCheckable(True)
        self.caster_btn.setObjectName("caster_btn")
        self.horizontalLayout_6.addWidget(self.caster_btn)
        self.chaos_btn = QtWidgets.QPushButton(self.harvest_add_remove_reforge_btn_container)
        self.chaos_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.chaos_btn.sizePolicy().hasHeightForWidth())
        self.chaos_btn.setSizePolicy(sizePolicy)
        self.chaos_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.chaos_btn.setStyleSheet("QPushButton {\n"
"    color: #a944ff;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #a944ff;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.chaos_btn.setCheckable(True)
        self.chaos_btn.setObjectName("chaos_btn")
        self.horizontalLayout_6.addWidget(self.chaos_btn)
        self.cold_btn = QtWidgets.QPushButton(self.harvest_add_remove_reforge_btn_container)
        self.cold_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cold_btn.sizePolicy().hasHeightForWidth())
        self.cold_btn.setSizePolicy(sizePolicy)
        self.cold_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.cold_btn.setStyleSheet("QPushButton {\n"
"    color: #5599FF;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #5599FF;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.cold_btn.setCheckable(True)
        self.cold_btn.setObjectName("cold_btn")
        self.horizontalLayout_6.addWidget(self.cold_btn)
        self.critical_btn = QtWidgets.QPushButton(self.harvest_add_remove_reforge_btn_container)
        self.critical_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.critical_btn.sizePolicy().hasHeightForWidth())
        self.critical_btn.setSizePolicy(sizePolicy)
        self.critical_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.critical_btn.setStyleSheet("QPushButton {\n"
"    color: #a8ff00;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #a8ff00;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.critical_btn.setCheckable(True)
        self.critical_btn.setObjectName("critical_btn")
        self.horizontalLayout_6.addWidget(self.critical_btn)
        self.defences_btn = QtWidgets.QPushButton(self.harvest_add_remove_reforge_btn_container)
        self.defences_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.defences_btn.sizePolicy().hasHeightForWidth())
        self.defences_btn.setSizePolicy(sizePolicy)
        self.defences_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.defences_btn.setStyleSheet("QPushButton {\n"
"    color: #DDD;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #DDD;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.defences_btn.setCheckable(True)
        self.defences_btn.setObjectName("defences_btn")
        self.horizontalLayout_6.addWidget(self.defences_btn)
        self.fire_btn = QtWidgets.QPushButton(self.harvest_add_remove_reforge_btn_container)
        self.fire_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fire_btn.sizePolicy().hasHeightForWidth())
        self.fire_btn.setSizePolicy(sizePolicy)
        self.fire_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.fire_btn.setStyleSheet("QPushButton {\n"
"    color: #FF0000;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #FF0000;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.fire_btn.setCheckable(True)
        self.fire_btn.setObjectName("fire_btn")
        self.horizontalLayout_6.addWidget(self.fire_btn)
        self.life_btn = QtWidgets.QPushButton(self.harvest_add_remove_reforge_btn_container)
        self.life_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.life_btn.sizePolicy().hasHeightForWidth())
        self.life_btn.setSizePolicy(sizePolicy)
        self.life_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.life_btn.setStyleSheet("QPushButton {\n"
"    color: #ff00cc;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #ff00cc;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.life_btn.setCheckable(True)
        self.life_btn.setObjectName("life_btn")
        self.horizontalLayout_6.addWidget(self.life_btn)
        self.lightning_btn = QtWidgets.QPushButton(self.harvest_add_remove_reforge_btn_container)
        self.lightning_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lightning_btn.sizePolicy().hasHeightForWidth())
        self.lightning_btn.setSizePolicy(sizePolicy)
        self.lightning_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.lightning_btn.setStyleSheet("QPushButton {\n"
"    color: #FFF000;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #FFF000;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.lightning_btn.setCheckable(True)
        self.lightning_btn.setObjectName("lightning_btn")
        self.horizontalLayout_6.addWidget(self.lightning_btn)
        self.physical_btn = QtWidgets.QPushButton(self.harvest_add_remove_reforge_btn_container)
        self.physical_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.physical_btn.sizePolicy().hasHeightForWidth())
        self.physical_btn.setSizePolicy(sizePolicy)
        self.physical_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.physical_btn.setStyleSheet("QPushButton {\n"
"    color: #e1b900;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #e1b900;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.physical_btn.setCheckable(True)
        self.physical_btn.setObjectName("physical_btn")
        self.horizontalLayout_6.addWidget(self.physical_btn)
        self.speed_btn = QtWidgets.QPushButton(self.harvest_add_remove_reforge_btn_container)
        self.speed_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.speed_btn.sizePolicy().hasHeightForWidth())
        self.speed_btn.setSizePolicy(sizePolicy)
        self.speed_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.speed_btn.setStyleSheet("QPushButton {\n"
"    color: #00ffc0;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #00ffc0;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.speed_btn.setCheckable(True)
        self.speed_btn.setObjectName("speed_btn")
        self.horizontalLayout_6.addWidget(self.speed_btn)
        self.influence_btn = QtWidgets.QPushButton(self.harvest_add_remove_reforge_btn_container)
        self.influence_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.influence_btn.sizePolicy().hasHeightForWidth())
        self.influence_btn.setSizePolicy(sizePolicy)
        self.influence_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.influence_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"                border: 0px;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.influence_btn.setCheckable(True)
        self.influence_btn.setObjectName("influence_btn")
        self.horizontalLayout_6.addWidget(self.influence_btn)
        self.verticalLayout_41.addWidget(self.harvest_add_remove_reforge_btn_container)
        self.harvest_method_stack.addWidget(self.harvest_add_remove_reforge_methods)
        self.harvest_resists_methods = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_resists_methods.sizePolicy().hasHeightForWidth())
        self.harvest_resists_methods.setSizePolicy(sizePolicy)
        self.harvest_resists_methods.setObjectName("harvest_resists_methods")
        self.verticalLayout_42 = QtWidgets.QVBoxLayout(self.harvest_resists_methods)
        self.verticalLayout_42.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_42.setSpacing(0)
        self.verticalLayout_42.setObjectName("verticalLayout_42")
        self.harvest_resists_btns = QtWidgets.QWidget(self.harvest_resists_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_resists_btns.sizePolicy().hasHeightForWidth())
        self.harvest_resists_btns.setSizePolicy(sizePolicy)
        self.harvest_resists_btns.setObjectName("harvest_resists_btns")
        self.horizontalLayout_20 = QtWidgets.QHBoxLayout(self.harvest_resists_btns)
        self.horizontalLayout_20.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_20.setSpacing(0)
        self.horizontalLayout_20.setObjectName("horizontalLayout_20")
        self.harvest_resists_label = QtWidgets.QLabel(self.harvest_resists_btns)
        self.harvest_resists_label.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_resists_label.sizePolicy().hasHeightForWidth())
        self.harvest_resists_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.harvest_resists_label.setFont(font)
        self.harvest_resists_label.setObjectName("harvest_resists_label")
        self.horizontalLayout_20.addWidget(self.harvest_resists_label)
        self.harvest_fire_to_cold_btn = QtWidgets.QPushButton(self.harvest_resists_btns)
        self.harvest_fire_to_cold_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_fire_to_cold_btn.sizePolicy().hasHeightForWidth())
        self.harvest_fire_to_cold_btn.setSizePolicy(sizePolicy)
        self.harvest_fire_to_cold_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.harvest_fire_to_cold_btn.setStyleSheet("QPushButton {\n"
"    color: #ff9000;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #ff9000;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.harvest_fire_to_cold_btn.setCheckable(True)
        self.harvest_fire_to_cold_btn.setChecked(False)
        self.harvest_fire_to_cold_btn.setObjectName("harvest_fire_to_cold_btn")
        self.horizontalLayout_20.addWidget(self.harvest_fire_to_cold_btn)
        self.harvest_fire_to_lightning_btn = QtWidgets.QPushButton(self.harvest_resists_btns)
        self.harvest_fire_to_lightning_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_fire_to_lightning_btn.sizePolicy().hasHeightForWidth())
        self.harvest_fire_to_lightning_btn.setSizePolicy(sizePolicy)
        self.harvest_fire_to_lightning_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.harvest_fire_to_lightning_btn.setStyleSheet("QPushButton {\n"
"    color: #d800ff;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #d800ff;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.harvest_fire_to_lightning_btn.setCheckable(True)
        self.harvest_fire_to_lightning_btn.setObjectName("harvest_fire_to_lightning_btn")
        self.horizontalLayout_20.addWidget(self.harvest_fire_to_lightning_btn)
        self.harvest_cold_to_fire_btn = QtWidgets.QPushButton(self.harvest_resists_btns)
        self.harvest_cold_to_fire_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_cold_to_fire_btn.sizePolicy().hasHeightForWidth())
        self.harvest_cold_to_fire_btn.setSizePolicy(sizePolicy)
        self.harvest_cold_to_fire_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.harvest_cold_to_fire_btn.setStyleSheet("QPushButton {\n"
"    color: #a944ff;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #a944ff;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.harvest_cold_to_fire_btn.setCheckable(True)
        self.harvest_cold_to_fire_btn.setObjectName("harvest_cold_to_fire_btn")
        self.horizontalLayout_20.addWidget(self.harvest_cold_to_fire_btn)
        self.harvest_cold_to_lightning_btn = QtWidgets.QPushButton(self.harvest_resists_btns)
        self.harvest_cold_to_lightning_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_cold_to_lightning_btn.sizePolicy().hasHeightForWidth())
        self.harvest_cold_to_lightning_btn.setSizePolicy(sizePolicy)
        self.harvest_cold_to_lightning_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.harvest_cold_to_lightning_btn.setStyleSheet("QPushButton {\n"
"    color: #5599FF;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #5599FF;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.harvest_cold_to_lightning_btn.setCheckable(True)
        self.harvest_cold_to_lightning_btn.setObjectName("harvest_cold_to_lightning_btn")
        self.horizontalLayout_20.addWidget(self.harvest_cold_to_lightning_btn)
        self.harvest_lightning_to_fire_btn = QtWidgets.QPushButton(self.harvest_resists_btns)
        self.harvest_lightning_to_fire_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_lightning_to_fire_btn.sizePolicy().hasHeightForWidth())
        self.harvest_lightning_to_fire_btn.setSizePolicy(sizePolicy)
        self.harvest_lightning_to_fire_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.harvest_lightning_to_fire_btn.setStyleSheet("QPushButton {\n"
"    color: #a8ff00;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #a8ff00;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.harvest_lightning_to_fire_btn.setCheckable(True)
        self.harvest_lightning_to_fire_btn.setObjectName("harvest_lightning_to_fire_btn")
        self.horizontalLayout_20.addWidget(self.harvest_lightning_to_fire_btn)
        self.harvest_lightning_to_cold_btn = QtWidgets.QPushButton(self.harvest_resists_btns)
        self.harvest_lightning_to_cold_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_lightning_to_cold_btn.sizePolicy().hasHeightForWidth())
        self.harvest_lightning_to_cold_btn.setSizePolicy(sizePolicy)
        self.harvest_lightning_to_cold_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.harvest_lightning_to_cold_btn.setStyleSheet("QPushButton {\n"
"    color: #DDD;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #DDD;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.harvest_lightning_to_cold_btn.setCheckable(True)
        self.harvest_lightning_to_cold_btn.setObjectName("harvest_lightning_to_cold_btn")
        self.horizontalLayout_20.addWidget(self.harvest_lightning_to_cold_btn)
        self.verticalLayout_42.addWidget(self.harvest_resists_btns)
        self.harvest_method_stack.addWidget(self.harvest_resists_methods)
        self.harvest_high_tier_methods = QtWidgets.QWidget()
        self.harvest_high_tier_methods.setObjectName("harvest_high_tier_methods")
        self.verticalLayout_43 = QtWidgets.QVBoxLayout(self.harvest_high_tier_methods)
        self.verticalLayout_43.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_43.setSpacing(0)
        self.verticalLayout_43.setObjectName("verticalLayout_43")
        self.harvest_high_tier_btn_container = QtWidgets.QWidget(self.harvest_high_tier_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_high_tier_btn_container.sizePolicy().hasHeightForWidth())
        self.harvest_high_tier_btn_container.setSizePolicy(sizePolicy)
        self.harvest_high_tier_btn_container.setObjectName("harvest_high_tier_btn_container")
        self.horizontalLayout_21 = QtWidgets.QHBoxLayout(self.harvest_high_tier_btn_container)
        self.horizontalLayout_21.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_21.setSpacing(0)
        self.horizontalLayout_21.setObjectName("horizontalLayout_21")
        self.harvest_high_tier_label = QtWidgets.QLabel(self.harvest_high_tier_btn_container)
        self.harvest_high_tier_label.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_high_tier_label.sizePolicy().hasHeightForWidth())
        self.harvest_high_tier_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.harvest_high_tier_label.setFont(font)
        self.harvest_high_tier_label.setObjectName("harvest_high_tier_label")
        self.horizontalLayout_21.addWidget(self.harvest_high_tier_label)
        self.harvest_normal_to_magic_one_btn = QtWidgets.QPushButton(self.harvest_high_tier_btn_container)
        self.harvest_normal_to_magic_one_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_normal_to_magic_one_btn.sizePolicy().hasHeightForWidth())
        self.harvest_normal_to_magic_one_btn.setSizePolicy(sizePolicy)
        self.harvest_normal_to_magic_one_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.harvest_normal_to_magic_one_btn.setStyleSheet("QPushButton {\n"
"    color: #ff9000;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #ff9000;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.harvest_normal_to_magic_one_btn.setCheckable(True)
        self.harvest_normal_to_magic_one_btn.setChecked(False)
        self.harvest_normal_to_magic_one_btn.setObjectName("harvest_normal_to_magic_one_btn")
        self.horizontalLayout_21.addWidget(self.harvest_normal_to_magic_one_btn)
        self.harvest_normal_to_magic_two_btn = QtWidgets.QPushButton(self.harvest_high_tier_btn_container)
        self.harvest_normal_to_magic_two_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_normal_to_magic_two_btn.sizePolicy().hasHeightForWidth())
        self.harvest_normal_to_magic_two_btn.setSizePolicy(sizePolicy)
        self.harvest_normal_to_magic_two_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.harvest_normal_to_magic_two_btn.setStyleSheet("QPushButton {\n"
"    color: #d800ff;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #d800ff;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.harvest_normal_to_magic_two_btn.setCheckable(True)
        self.harvest_normal_to_magic_two_btn.setObjectName("harvest_normal_to_magic_two_btn")
        self.horizontalLayout_21.addWidget(self.harvest_normal_to_magic_two_btn)
        self.harvest_magic_to_rare_two_btn = QtWidgets.QPushButton(self.harvest_high_tier_btn_container)
        self.harvest_magic_to_rare_two_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_magic_to_rare_two_btn.sizePolicy().hasHeightForWidth())
        self.harvest_magic_to_rare_two_btn.setSizePolicy(sizePolicy)
        self.harvest_magic_to_rare_two_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.harvest_magic_to_rare_two_btn.setStyleSheet("QPushButton {\n"
"    color: #a944ff;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #a944ff;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.harvest_magic_to_rare_two_btn.setCheckable(True)
        self.harvest_magic_to_rare_two_btn.setObjectName("harvest_magic_to_rare_two_btn")
        self.horizontalLayout_21.addWidget(self.harvest_magic_to_rare_two_btn)
        self.harvest_magic_to_rare_three_btn = QtWidgets.QPushButton(self.harvest_high_tier_btn_container)
        self.harvest_magic_to_rare_three_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_magic_to_rare_three_btn.sizePolicy().hasHeightForWidth())
        self.harvest_magic_to_rare_three_btn.setSizePolicy(sizePolicy)
        self.harvest_magic_to_rare_three_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.harvest_magic_to_rare_three_btn.setStyleSheet("QPushButton {\n"
"    color: #5599FF;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #5599FF;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.harvest_magic_to_rare_three_btn.setCheckable(True)
        self.harvest_magic_to_rare_three_btn.setObjectName("harvest_magic_to_rare_three_btn")
        self.horizontalLayout_21.addWidget(self.harvest_magic_to_rare_three_btn)
        self.harvest_magic_to_rare_four_btn = QtWidgets.QPushButton(self.harvest_high_tier_btn_container)
        self.harvest_magic_to_rare_four_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_magic_to_rare_four_btn.sizePolicy().hasHeightForWidth())
        self.harvest_magic_to_rare_four_btn.setSizePolicy(sizePolicy)
        self.harvest_magic_to_rare_four_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.harvest_magic_to_rare_four_btn.setStyleSheet("QPushButton {\n"
"    color: #a8ff00;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #a8ff00;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.harvest_magic_to_rare_four_btn.setCheckable(True)
        self.harvest_magic_to_rare_four_btn.setObjectName("harvest_magic_to_rare_four_btn")
        self.horizontalLayout_21.addWidget(self.harvest_magic_to_rare_four_btn)
        self.verticalLayout_43.addWidget(self.harvest_high_tier_btn_container)
        self.harvest_method_stack.addWidget(self.harvest_high_tier_methods)
        self.harvest_other_methods = QtWidgets.QWidget()
        self.harvest_other_methods.setObjectName("harvest_other_methods")
        self.verticalLayout_44 = QtWidgets.QVBoxLayout(self.harvest_other_methods)
        self.verticalLayout_44.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_44.setSpacing(0)
        self.verticalLayout_44.setObjectName("verticalLayout_44")
        self.harvest_resists_btns_3 = QtWidgets.QWidget(self.harvest_other_methods)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_resists_btns_3.sizePolicy().hasHeightForWidth())
        self.harvest_resists_btns_3.setSizePolicy(sizePolicy)
        self.harvest_resists_btns_3.setObjectName("harvest_resists_btns_3")
        self.horizontalLayout_22 = QtWidgets.QHBoxLayout(self.harvest_resists_btns_3)
        self.horizontalLayout_22.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_22.setSpacing(0)
        self.horizontalLayout_22.setObjectName("horizontalLayout_22")
        self.harvest_other_label = QtWidgets.QLabel(self.harvest_resists_btns_3)
        self.harvest_other_label.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_other_label.sizePolicy().hasHeightForWidth())
        self.harvest_other_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.harvest_other_label.setFont(font)
        self.harvest_other_label.setObjectName("harvest_other_label")
        self.horizontalLayout_22.addWidget(self.harvest_other_label, 0, QtCore.Qt.AlignLeft)
        self.harvest_reforge_more_likely_btn = QtWidgets.QPushButton(self.harvest_resists_btns_3)
        self.harvest_reforge_more_likely_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_reforge_more_likely_btn.sizePolicy().hasHeightForWidth())
        self.harvest_reforge_more_likely_btn.setSizePolicy(sizePolicy)
        self.harvest_reforge_more_likely_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.harvest_reforge_more_likely_btn.setStyleSheet("QPushButton {\n"
"    color: #ff9000;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #ff9000;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.harvest_reforge_more_likely_btn.setCheckable(True)
        self.harvest_reforge_more_likely_btn.setChecked(False)
        self.harvest_reforge_more_likely_btn.setObjectName("harvest_reforge_more_likely_btn")
        self.horizontalLayout_22.addWidget(self.harvest_reforge_more_likely_btn)
        self.harvest_reforge_less_likely_btn = QtWidgets.QPushButton(self.harvest_resists_btns_3)
        self.harvest_reforge_less_likely_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.harvest_reforge_less_likely_btn.sizePolicy().hasHeightForWidth())
        self.harvest_reforge_less_likely_btn.setSizePolicy(sizePolicy)
        self.harvest_reforge_less_likely_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.harvest_reforge_less_likely_btn.setStyleSheet("QPushButton {\n"
"    color: #d800ff;\n"
"}\n"
"\n"
"QPushButton::checked {\n"
"                background-color: #d800ff;\n"
"                color: #000;\n"
"                text-shadow: none;\n"
"                box-shadow: none;\n"
"                border: 0px;\n"
"            }")
        self.harvest_reforge_less_likely_btn.setCheckable(True)
        self.harvest_reforge_less_likely_btn.setObjectName("harvest_reforge_less_likely_btn")
        self.horizontalLayout_22.addWidget(self.harvest_reforge_less_likely_btn)
        self.verticalLayout_44.addWidget(self.harvest_resists_btns_3)
        self.harvest_method_stack.addWidget(self.harvest_other_methods)
        self.verticalLayout_40.addWidget(self.harvest_method_stack)
        self.verticalLayout_45.addWidget(self.harvest_methods_container, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.horizontalLayout_7.addWidget(self.harvest_btns_container, 0, QtCore.Qt.AlignTop)
        self.crafting_method_pages.addWidget(self.harvest_crafts)
        self.essence_crafts = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.essence_crafts.sizePolicy().hasHeightForWidth())
        self.essence_crafts.setSizePolicy(sizePolicy)
        self.essence_crafts.setStyleSheet("")
        self.essence_crafts.setObjectName("essence_crafts")
        self.gridLayout = QtWidgets.QGridLayout(self.essence_crafts)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.essence_tier_row = QtWidgets.QWidget(self.essence_crafts)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.essence_tier_row.sizePolicy().hasHeightForWidth())
        self.essence_tier_row.setSizePolicy(sizePolicy)
        self.essence_tier_row.setStyleSheet("margin: 0px;\n"
"padding: 0px;\n"
"border-image: none;\n"
"")
        self.essence_tier_row.setObjectName("essence_tier_row")
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout(self.essence_tier_row)
        self.horizontalLayout_12.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_12.setSpacing(0)
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.essence_tier_label = QtWidgets.QLabel(self.essence_tier_row)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.essence_tier_label.sizePolicy().hasHeightForWidth())
        self.essence_tier_label.setSizePolicy(sizePolicy)
        self.essence_tier_label.setMinimumSize(QtCore.QSize(28, 0))
        self.essence_tier_label.setObjectName("essence_tier_label")
        self.horizontalLayout_12.addWidget(self.essence_tier_label, 0, QtCore.Qt.AlignLeft)
        self.t6_btn = QtWidgets.QPushButton(self.essence_tier_row)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.t6_btn.sizePolicy().hasHeightForWidth())
        self.t6_btn.setSizePolicy(sizePolicy)
        self.t6_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.t6_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.t6_btn.setCheckable(True)
        self.t6_btn.setObjectName("t6_btn")
        self.essence_tier_btns_group = QtWidgets.QButtonGroup(MainWindow)
        self.essence_tier_btns_group.setObjectName("essence_tier_btns_group")
        self.essence_tier_btns_group.addButton(self.t6_btn)
        self.horizontalLayout_12.addWidget(self.t6_btn)
        self.t5_btn = QtWidgets.QPushButton(self.essence_tier_row)
        self.t5_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.t5_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.t5_btn.setCheckable(True)
        self.t5_btn.setObjectName("t5_btn")
        self.essence_tier_btns_group.addButton(self.t5_btn)
        self.horizontalLayout_12.addWidget(self.t5_btn)
        self.t4_btn = QtWidgets.QPushButton(self.essence_tier_row)
        self.t4_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.t4_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.t4_btn.setCheckable(True)
        self.t4_btn.setObjectName("t4_btn")
        self.essence_tier_btns_group.addButton(self.t4_btn)
        self.horizontalLayout_12.addWidget(self.t4_btn)
        self.t3_btn = QtWidgets.QPushButton(self.essence_tier_row)
        self.t3_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.t3_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.t3_btn.setCheckable(True)
        self.t3_btn.setObjectName("t3_btn")
        self.essence_tier_btns_group.addButton(self.t3_btn)
        self.horizontalLayout_12.addWidget(self.t3_btn)
        self.t2_btn = QtWidgets.QPushButton(self.essence_tier_row)
        self.t2_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.t2_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.t2_btn.setCheckable(True)
        self.t2_btn.setObjectName("t2_btn")
        self.essence_tier_btns_group.addButton(self.t2_btn)
        self.horizontalLayout_12.addWidget(self.t2_btn)
        self.t1_btn = QtWidgets.QPushButton(self.essence_tier_row)
        self.t1_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.t1_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.t1_btn.setCheckable(True)
        self.t1_btn.setObjectName("t1_btn")
        self.essence_tier_btns_group.addButton(self.t1_btn)
        self.horizontalLayout_12.addWidget(self.t1_btn)
        self.gridLayout.addWidget(self.essence_tier_row, 2, 3, 1, 1, QtCore.Qt.AlignHCenter)
        self.essences_row1 = QtWidgets.QWidget(self.essence_crafts)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.essences_row1.sizePolicy().hasHeightForWidth())
        self.essences_row1.setSizePolicy(sizePolicy)
        self.essences_row1.setStyleSheet("margin: 0px;\n"
"padding: 0px;\n"
"border-image: none;")
        self.essences_row1.setObjectName("essences_row1")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout(self.essences_row1)
        self.horizontalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_10.setSpacing(0)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.essences_hide_btn = QtWidgets.QPushButton(self.essences_row1)
        self.essences_hide_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.essences_hide_btn.sizePolicy().hasHeightForWidth())
        self.essences_hide_btn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.essences_hide_btn.setFont(font)
        self.essences_hide_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essences_hide_btn.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.essences_hide_btn.setStyleSheet("QPushButton {\n"
"border: 1px solid #90701b;\n"
"border-radius: 0px;\n"
"border-image: none;\n"
"box-shadow: inset 0 1px 1px #e6b15f,0 1px 2px rgba(0,0,0,0.61);\n"
"font-family: Open Sans;\n"
"font-size: 12px;\n"
"font-weight: bold;\n"
"color: #333;\n"
"text-shadow: 1px 1px #FFF;\n"
"line-height: 29px;\n"
"height: 29px;\n"
"margin: 0px;\n"
"padding: 0px 6px 0px 4px;\n"
"cursor: pointer;\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:1, stop:0 rgba(239, 232, 158, 255), stop:1 rgba(252, 199, 121, 255));\n"
"}\n"
"            QPushButton::hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:1, stop:0 rgba(237, 231, 182, 255), stop:1 rgba(249, 206, 144, 255));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"                border: 1px inset #FFF;\n"
"                box-shadow: none;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.essences_hide_btn.setObjectName("essences_hide_btn")
        self.horizontalLayout_10.addWidget(self.essences_hide_btn)
        self.essences_label = QtWidgets.QLabel(self.essences_row1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.essences_label.sizePolicy().hasHeightForWidth())
        self.essences_label.setSizePolicy(sizePolicy)
        self.essences_label.setMinimumSize(QtCore.QSize(0, 0))
        self.essences_label.setObjectName("essences_label")
        self.horizontalLayout_10.addWidget(self.essences_label)
        self.essence_anger_btn = CustomCursorButton(self.essences_row1)
        self.essence_anger_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_anger_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon61 = QtGui.QIcon()
        icon61.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Anger.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_anger_btn.setIcon(icon61)
        self.essence_anger_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_anger_btn.setCheckable(True)
        self.essence_anger_btn.setObjectName("essence_anger_btn")
        self.essence_btns_group = QtWidgets.QButtonGroup(MainWindow)
        self.essence_btns_group.setObjectName("essence_btns_group")
        self.essence_btns_group.addButton(self.essence_anger_btn)
        self.horizontalLayout_10.addWidget(self.essence_anger_btn)
        self.essence_anguish_btn = CustomCursorButton(self.essences_row1)
        self.essence_anguish_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_anguish_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon62 = QtGui.QIcon()
        icon62.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Anguish.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_anguish_btn.setIcon(icon62)
        self.essence_anguish_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_anguish_btn.setCheckable(True)
        self.essence_anguish_btn.setObjectName("essence_anguish_btn")
        self.essence_btns_group.addButton(self.essence_anguish_btn)
        self.horizontalLayout_10.addWidget(self.essence_anguish_btn)
        self.essence_contempt_btn = CustomCursorButton(self.essences_row1)
        self.essence_contempt_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_contempt_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon63 = QtGui.QIcon()
        icon63.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Contempt.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_contempt_btn.setIcon(icon63)
        self.essence_contempt_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_contempt_btn.setCheckable(True)
        self.essence_contempt_btn.setObjectName("essence_contempt_btn")
        self.essence_btns_group.addButton(self.essence_contempt_btn)
        self.horizontalLayout_10.addWidget(self.essence_contempt_btn)
        self.essence_delirium_btn = CustomCursorButton(self.essences_row1)
        self.essence_delirium_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_delirium_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon64 = QtGui.QIcon()
        icon64.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Delirium.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_delirium_btn.setIcon(icon64)
        self.essence_delirium_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_delirium_btn.setCheckable(True)
        self.essence_delirium_btn.setObjectName("essence_delirium_btn")
        self.essence_btns_group.addButton(self.essence_delirium_btn)
        self.horizontalLayout_10.addWidget(self.essence_delirium_btn)
        self.essence_doubt_btn = CustomCursorButton(self.essences_row1)
        self.essence_doubt_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_doubt_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon65 = QtGui.QIcon()
        icon65.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Doubt.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_doubt_btn.setIcon(icon65)
        self.essence_doubt_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_doubt_btn.setCheckable(True)
        self.essence_doubt_btn.setObjectName("essence_doubt_btn")
        self.essence_btns_group.addButton(self.essence_doubt_btn)
        self.horizontalLayout_10.addWidget(self.essence_doubt_btn)
        self.essence_dread_btn = CustomCursorButton(self.essences_row1)
        self.essence_dread_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_dread_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon66 = QtGui.QIcon()
        icon66.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Dread.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_dread_btn.setIcon(icon66)
        self.essence_dread_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_dread_btn.setCheckable(True)
        self.essence_dread_btn.setObjectName("essence_dread_btn")
        self.essence_btns_group.addButton(self.essence_dread_btn)
        self.horizontalLayout_10.addWidget(self.essence_dread_btn)
        self.essence_envy_btn = CustomCursorButton(self.essences_row1)
        self.essence_envy_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_envy_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon67 = QtGui.QIcon()
        icon67.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Envy.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_envy_btn.setIcon(icon67)
        self.essence_envy_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_envy_btn.setCheckable(True)
        self.essence_envy_btn.setObjectName("essence_envy_btn")
        self.essence_btns_group.addButton(self.essence_envy_btn)
        self.horizontalLayout_10.addWidget(self.essence_envy_btn)
        self.essenc_fear_btn = CustomCursorButton(self.essences_row1)
        self.essenc_fear_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essenc_fear_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon68 = QtGui.QIcon()
        icon68.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Fear.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essenc_fear_btn.setIcon(icon68)
        self.essenc_fear_btn.setIconSize(QtCore.QSize(30, 30))
        self.essenc_fear_btn.setCheckable(True)
        self.essenc_fear_btn.setObjectName("essenc_fear_btn")
        self.essence_btns_group.addButton(self.essenc_fear_btn)
        self.horizontalLayout_10.addWidget(self.essenc_fear_btn)
        self.essence_greed = CustomCursorButton(self.essences_row1)
        self.essence_greed.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_greed.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon69 = QtGui.QIcon()
        icon69.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Greed.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_greed.setIcon(icon69)
        self.essence_greed.setIconSize(QtCore.QSize(30, 30))
        self.essence_greed.setCheckable(True)
        self.essence_greed.setObjectName("essence_greed")
        self.essence_btns_group.addButton(self.essence_greed)
        self.horizontalLayout_10.addWidget(self.essence_greed)
        self.essence_hatred = CustomCursorButton(self.essences_row1)
        self.essence_hatred.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_hatred.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon70 = QtGui.QIcon()
        icon70.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Hatred.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_hatred.setIcon(icon70)
        self.essence_hatred.setIconSize(QtCore.QSize(30, 30))
        self.essence_hatred.setCheckable(True)
        self.essence_hatred.setObjectName("essence_hatred")
        self.essence_btns_group.addButton(self.essence_hatred)
        self.horizontalLayout_10.addWidget(self.essence_hatred)
        self.essence_horror_btn = CustomCursorButton(self.essences_row1)
        self.essence_horror_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_horror_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon71 = QtGui.QIcon()
        icon71.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Horror.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_horror_btn.setIcon(icon71)
        self.essence_horror_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_horror_btn.setCheckable(True)
        self.essence_horror_btn.setObjectName("essence_horror_btn")
        self.essence_btns_group.addButton(self.essence_horror_btn)
        self.horizontalLayout_10.addWidget(self.essence_horror_btn)
        self.essence_hysteria_btn = CustomCursorButton(self.essences_row1)
        self.essence_hysteria_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_hysteria_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon72 = QtGui.QIcon()
        icon72.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Hysteria.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_hysteria_btn.setIcon(icon72)
        self.essence_hysteria_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_hysteria_btn.setCheckable(True)
        self.essence_hysteria_btn.setChecked(False)
        self.essence_hysteria_btn.setObjectName("essence_hysteria_btn")
        self.essence_btns_group.addButton(self.essence_hysteria_btn)
        self.horizontalLayout_10.addWidget(self.essence_hysteria_btn)
        self.gridLayout.addWidget(self.essences_row1, 0, 3, 1, 1, QtCore.Qt.AlignTop)
        self.essences_row2 = QtWidgets.QWidget(self.essence_crafts)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.essences_row2.sizePolicy().hasHeightForWidth())
        self.essences_row2.setSizePolicy(sizePolicy)
        self.essences_row2.setStyleSheet("margin: 0px;\n"
"padding: 0px;\n"
"border-image: none;")
        self.essences_row2.setObjectName("essences_row2")
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout(self.essences_row2)
        self.horizontalLayout_11.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_11.setSpacing(0)
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.essence_insanity_btn = CustomCursorButton(self.essences_row2)
        self.essence_insanity_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_insanity_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon73 = QtGui.QIcon()
        icon73.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Insanity.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_insanity_btn.setIcon(icon73)
        self.essence_insanity_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_insanity_btn.setCheckable(True)
        self.essence_insanity_btn.setObjectName("essence_insanity_btn")
        self.essence_btns_group.addButton(self.essence_insanity_btn)
        self.horizontalLayout_11.addWidget(self.essence_insanity_btn)
        self.essence_loathing_btn = CustomCursorButton(self.essences_row2)
        self.essence_loathing_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_loathing_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon74 = QtGui.QIcon()
        icon74.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Loathing.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_loathing_btn.setIcon(icon74)
        self.essence_loathing_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_loathing_btn.setCheckable(True)
        self.essence_loathing_btn.setObjectName("essence_loathing_btn")
        self.essence_btns_group.addButton(self.essence_loathing_btn)
        self.horizontalLayout_11.addWidget(self.essence_loathing_btn)
        self.essence_misery_btn = CustomCursorButton(self.essences_row2)
        self.essence_misery_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_misery_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon75 = QtGui.QIcon()
        icon75.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Misery.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_misery_btn.setIcon(icon75)
        self.essence_misery_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_misery_btn.setCheckable(True)
        self.essence_misery_btn.setObjectName("essence_misery_btn")
        self.essence_btns_group.addButton(self.essence_misery_btn)
        self.horizontalLayout_11.addWidget(self.essence_misery_btn)
        self.essence_rage_btn = CustomCursorButton(self.essences_row2)
        self.essence_rage_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_rage_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon76 = QtGui.QIcon()
        icon76.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Rage.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_rage_btn.setIcon(icon76)
        self.essence_rage_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_rage_btn.setCheckable(True)
        self.essence_rage_btn.setObjectName("essence_rage_btn")
        self.essence_btns_group.addButton(self.essence_rage_btn)
        self.horizontalLayout_11.addWidget(self.essence_rage_btn)
        self.essence_scorn_btn = CustomCursorButton(self.essences_row2)
        self.essence_scorn_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_scorn_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon77 = QtGui.QIcon()
        icon77.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Scorn.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_scorn_btn.setIcon(icon77)
        self.essence_scorn_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_scorn_btn.setCheckable(True)
        self.essence_scorn_btn.setObjectName("essence_scorn_btn")
        self.essence_btns_group.addButton(self.essence_scorn_btn)
        self.horizontalLayout_11.addWidget(self.essence_scorn_btn)
        self.essence_sorrow_btn = CustomCursorButton(self.essences_row2)
        self.essence_sorrow_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_sorrow_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon78 = QtGui.QIcon()
        icon78.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Sorrow.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_sorrow_btn.setIcon(icon78)
        self.essence_sorrow_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_sorrow_btn.setCheckable(True)
        self.essence_sorrow_btn.setObjectName("essence_sorrow_btn")
        self.essence_btns_group.addButton(self.essence_sorrow_btn)
        self.horizontalLayout_11.addWidget(self.essence_sorrow_btn)
        self.essence_spite_btn = CustomCursorButton(self.essences_row2)
        self.essence_spite_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_spite_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon79 = QtGui.QIcon()
        icon79.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Spite.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_spite_btn.setIcon(icon79)
        self.essence_spite_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_spite_btn.setCheckable(True)
        self.essence_spite_btn.setObjectName("essence_spite_btn")
        self.essence_btns_group.addButton(self.essence_spite_btn)
        self.horizontalLayout_11.addWidget(self.essence_spite_btn)
        self.essence_suffering_btn = CustomCursorButton(self.essences_row2)
        self.essence_suffering_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_suffering_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon80 = QtGui.QIcon()
        icon80.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Suffering.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_suffering_btn.setIcon(icon80)
        self.essence_suffering_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_suffering_btn.setCheckable(True)
        self.essence_suffering_btn.setObjectName("essence_suffering_btn")
        self.essence_btns_group.addButton(self.essence_suffering_btn)
        self.horizontalLayout_11.addWidget(self.essence_suffering_btn)
        self.essence_torment_btn = CustomCursorButton(self.essences_row2)
        self.essence_torment_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_torment_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon81 = QtGui.QIcon()
        icon81.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Torment.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_torment_btn.setIcon(icon81)
        self.essence_torment_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_torment_btn.setCheckable(True)
        self.essence_torment_btn.setObjectName("essence_torment_btn")
        self.essence_btns_group.addButton(self.essence_torment_btn)
        self.horizontalLayout_11.addWidget(self.essence_torment_btn)
        self.essence_woe_btn = CustomCursorButton(self.essences_row2)
        self.essence_woe_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_woe_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon82 = QtGui.QIcon()
        icon82.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Woe.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_woe_btn.setIcon(icon82)
        self.essence_woe_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_woe_btn.setCheckable(True)
        self.essence_woe_btn.setObjectName("essence_woe_btn")
        self.essence_btns_group.addButton(self.essence_woe_btn)
        self.horizontalLayout_11.addWidget(self.essence_woe_btn)
        self.essence_wrath_btn = CustomCursorButton(self.essences_row2)
        self.essence_wrath_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_wrath_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon83 = QtGui.QIcon()
        icon83.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Wrath.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_wrath_btn.setIcon(icon83)
        self.essence_wrath_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_wrath_btn.setCheckable(True)
        self.essence_wrath_btn.setObjectName("essence_wrath_btn")
        self.essence_btns_group.addButton(self.essence_wrath_btn)
        self.horizontalLayout_11.addWidget(self.essence_wrath_btn)
        self.essence_zeal_btn = CustomCursorButton(self.essences_row2)
        self.essence_zeal_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.essence_zeal_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon84 = QtGui.QIcon()
        icon84.addPixmap(QtGui.QPixmap(":/essences/assets/images/essences/essence_Zeal.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.essence_zeal_btn.setIcon(icon84)
        self.essence_zeal_btn.setIconSize(QtCore.QSize(30, 30))
        self.essence_zeal_btn.setCheckable(True)
        self.essence_zeal_btn.setObjectName("essence_zeal_btn")
        self.essence_btns_group.addButton(self.essence_zeal_btn)
        self.horizontalLayout_11.addWidget(self.essence_zeal_btn)
        self.gridLayout.addWidget(self.essences_row2, 1, 3, 1, 1, QtCore.Qt.AlignTop)
        self.crafting_method_pages.addWidget(self.essence_crafts)
        self.catalysts = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.catalysts.sizePolicy().hasHeightForWidth())
        self.catalysts.setSizePolicy(sizePolicy)
        self.catalysts.setStyleSheet("\n"
"border-image: none;\n"
"padding: 0px;\n"
"margin: 0px;")
        self.catalysts.setObjectName("catalysts")
        self.verticalLayout_22 = QtWidgets.QVBoxLayout(self.catalysts)
        self.verticalLayout_22.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_22.setSpacing(0)
        self.verticalLayout_22.setObjectName("verticalLayout_22")
        self.catalyst_btn_row = QtWidgets.QWidget(self.catalysts)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.catalyst_btn_row.sizePolicy().hasHeightForWidth())
        self.catalyst_btn_row.setSizePolicy(sizePolicy)
        self.catalyst_btn_row.setStyleSheet("margin: 0px;\n"
"padding: 0px;\n"
"border-image: none;")
        self.catalyst_btn_row.setObjectName("catalyst_btn_row")
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout(self.catalyst_btn_row)
        self.horizontalLayout_13.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_13.setSpacing(0)
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.catalysts_hide_btn = QtWidgets.QPushButton(self.catalyst_btn_row)
        self.catalysts_hide_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.catalysts_hide_btn.sizePolicy().hasHeightForWidth())
        self.catalysts_hide_btn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.catalysts_hide_btn.setFont(font)
        self.catalysts_hide_btn.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.catalysts_hide_btn.setStyleSheet("QPushButton {\n"
"border: 1px solid #90701b;\n"
"border-radius: 0px;\n"
"border-image: none;\n"
"box-shadow: inset 0 1px 1px #e6b15f,0 1px 2px rgba(0,0,0,0.61);\n"
"font-family: Open Sans;\n"
"font-size: 12px;\n"
"font-weight: bold;\n"
"color: #333;\n"
"text-shadow: 1px 1px #FFF;\n"
"line-height: 29px;\n"
"height: 29px;\n"
"margin: 0px;\n"
"padding: 0px 6px 0px 4px;\n"
"cursor: pointer;\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:1, stop:0 rgba(239, 232, 158, 255), stop:1 rgba(252, 199, 121, 255));\n"
"}\n"
"            QPushButton::hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:1, stop:0 rgba(237, 231, 182, 255), stop:1 rgba(249, 206, 144, 255));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"                border: 1px inset #FFF;\n"
"                box-shadow: none;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.catalysts_hide_btn.setObjectName("catalysts_hide_btn")
        self.horizontalLayout_13.addWidget(self.catalysts_hide_btn)
        self.catalyst_row_label = QtWidgets.QLabel(self.catalyst_btn_row)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.catalyst_row_label.sizePolicy().hasHeightForWidth())
        self.catalyst_row_label.setSizePolicy(sizePolicy)
        self.catalyst_row_label.setObjectName("catalyst_row_label")
        self.horizontalLayout_13.addWidget(self.catalyst_row_label)
        self.intrinsic_catalyst_btn = QtWidgets.QPushButton(self.catalyst_btn_row)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.intrinsic_catalyst_btn.sizePolicy().hasHeightForWidth())
        self.intrinsic_catalyst_btn.setSizePolicy(sizePolicy)
        self.intrinsic_catalyst_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.intrinsic_catalyst_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon85 = QtGui.QIcon()
        icon85.addPixmap(QtGui.QPixmap(":/catalysts/assets/images/catalysts/intrinsic_catalyst.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.intrinsic_catalyst_btn.setIcon(icon85)
        self.intrinsic_catalyst_btn.setIconSize(QtCore.QSize(30, 30))
        self.intrinsic_catalyst_btn.setCheckable(True)
        self.intrinsic_catalyst_btn.setChecked(True)
        self.intrinsic_catalyst_btn.setObjectName("intrinsic_catalyst_btn")
        self.catalysts_btns_group = QtWidgets.QButtonGroup(MainWindow)
        self.catalysts_btns_group.setObjectName("catalysts_btns_group")
        self.catalysts_btns_group.addButton(self.intrinsic_catalyst_btn)
        self.horizontalLayout_13.addWidget(self.intrinsic_catalyst_btn)
        self.abrasive_catalyst_btn = QtWidgets.QPushButton(self.catalyst_btn_row)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.abrasive_catalyst_btn.sizePolicy().hasHeightForWidth())
        self.abrasive_catalyst_btn.setSizePolicy(sizePolicy)
        self.abrasive_catalyst_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.abrasive_catalyst_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon86 = QtGui.QIcon()
        icon86.addPixmap(QtGui.QPixmap(":/catalysts/assets/images/catalysts/abrasive_catalyst.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.abrasive_catalyst_btn.setIcon(icon86)
        self.abrasive_catalyst_btn.setIconSize(QtCore.QSize(30, 30))
        self.abrasive_catalyst_btn.setCheckable(True)
        self.abrasive_catalyst_btn.setObjectName("abrasive_catalyst_btn")
        self.catalysts_btns_group.addButton(self.abrasive_catalyst_btn)
        self.horizontalLayout_13.addWidget(self.abrasive_catalyst_btn)
        self.prismatic_catalyst_btn = QtWidgets.QPushButton(self.catalyst_btn_row)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.prismatic_catalyst_btn.sizePolicy().hasHeightForWidth())
        self.prismatic_catalyst_btn.setSizePolicy(sizePolicy)
        self.prismatic_catalyst_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.prismatic_catalyst_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon87 = QtGui.QIcon()
        icon87.addPixmap(QtGui.QPixmap(":/catalysts/assets/images/catalysts/prismatic_catalyst.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.prismatic_catalyst_btn.setIcon(icon87)
        self.prismatic_catalyst_btn.setIconSize(QtCore.QSize(30, 30))
        self.prismatic_catalyst_btn.setCheckable(True)
        self.prismatic_catalyst_btn.setObjectName("prismatic_catalyst_btn")
        self.catalysts_btns_group.addButton(self.prismatic_catalyst_btn)
        self.horizontalLayout_13.addWidget(self.prismatic_catalyst_btn)
        self.fertile_catalyst_btn = QtWidgets.QPushButton(self.catalyst_btn_row)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fertile_catalyst_btn.sizePolicy().hasHeightForWidth())
        self.fertile_catalyst_btn.setSizePolicy(sizePolicy)
        self.fertile_catalyst_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.fertile_catalyst_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon88 = QtGui.QIcon()
        icon88.addPixmap(QtGui.QPixmap(":/catalysts/assets/images/catalysts/fertile_catalyst.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.fertile_catalyst_btn.setIcon(icon88)
        self.fertile_catalyst_btn.setIconSize(QtCore.QSize(30, 30))
        self.fertile_catalyst_btn.setCheckable(True)
        self.fertile_catalyst_btn.setObjectName("fertile_catalyst_btn")
        self.catalysts_btns_group.addButton(self.fertile_catalyst_btn)
        self.horizontalLayout_13.addWidget(self.fertile_catalyst_btn)
        self.imbued_catalyst_btn = QtWidgets.QPushButton(self.catalyst_btn_row)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.imbued_catalyst_btn.sizePolicy().hasHeightForWidth())
        self.imbued_catalyst_btn.setSizePolicy(sizePolicy)
        self.imbued_catalyst_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.imbued_catalyst_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon89 = QtGui.QIcon()
        icon89.addPixmap(QtGui.QPixmap(":/catalysts/assets/images/catalysts/imbued_catalyst.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.imbued_catalyst_btn.setIcon(icon89)
        self.imbued_catalyst_btn.setIconSize(QtCore.QSize(30, 30))
        self.imbued_catalyst_btn.setCheckable(True)
        self.imbued_catalyst_btn.setObjectName("imbued_catalyst_btn")
        self.catalysts_btns_group.addButton(self.imbued_catalyst_btn)
        self.horizontalLayout_13.addWidget(self.imbued_catalyst_btn)
        self.tempering_catalyst_btn = QtWidgets.QPushButton(self.catalyst_btn_row)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tempering_catalyst_btn.sizePolicy().hasHeightForWidth())
        self.tempering_catalyst_btn.setSizePolicy(sizePolicy)
        self.tempering_catalyst_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tempering_catalyst_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon90 = QtGui.QIcon()
        icon90.addPixmap(QtGui.QPixmap(":/catalysts/assets/images/catalysts/tempering_catalyst.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tempering_catalyst_btn.setIcon(icon90)
        self.tempering_catalyst_btn.setIconSize(QtCore.QSize(30, 30))
        self.tempering_catalyst_btn.setCheckable(True)
        self.tempering_catalyst_btn.setObjectName("tempering_catalyst_btn")
        self.catalysts_btns_group.addButton(self.tempering_catalyst_btn)
        self.horizontalLayout_13.addWidget(self.tempering_catalyst_btn)
        self.turbulent_catalyst_btn = QtWidgets.QPushButton(self.catalyst_btn_row)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.turbulent_catalyst_btn.sizePolicy().hasHeightForWidth())
        self.turbulent_catalyst_btn.setSizePolicy(sizePolicy)
        self.turbulent_catalyst_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.turbulent_catalyst_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon91 = QtGui.QIcon()
        icon91.addPixmap(QtGui.QPixmap(":/catalysts/assets/images/catalysts/turbulent_catalyst.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.turbulent_catalyst_btn.setIcon(icon91)
        self.turbulent_catalyst_btn.setIconSize(QtCore.QSize(30, 30))
        self.turbulent_catalyst_btn.setCheckable(True)
        self.turbulent_catalyst_btn.setObjectName("turbulent_catalyst_btn")
        self.catalysts_btns_group.addButton(self.turbulent_catalyst_btn)
        self.horizontalLayout_13.addWidget(self.turbulent_catalyst_btn)
        self.accelerating_catalyst_btn = QtWidgets.QPushButton(self.catalyst_btn_row)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.accelerating_catalyst_btn.sizePolicy().hasHeightForWidth())
        self.accelerating_catalyst_btn.setSizePolicy(sizePolicy)
        self.accelerating_catalyst_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.accelerating_catalyst_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon92 = QtGui.QIcon()
        icon92.addPixmap(QtGui.QPixmap(":/catalysts/assets/images/catalysts/accelerating_catalyst.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.accelerating_catalyst_btn.setIcon(icon92)
        self.accelerating_catalyst_btn.setIconSize(QtCore.QSize(30, 30))
        self.accelerating_catalyst_btn.setCheckable(True)
        self.accelerating_catalyst_btn.setObjectName("accelerating_catalyst_btn")
        self.catalysts_btns_group.addButton(self.accelerating_catalyst_btn)
        self.horizontalLayout_13.addWidget(self.accelerating_catalyst_btn)
        self.unstable_catalyst_btn = QtWidgets.QPushButton(self.catalyst_btn_row)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.unstable_catalyst_btn.sizePolicy().hasHeightForWidth())
        self.unstable_catalyst_btn.setSizePolicy(sizePolicy)
        self.unstable_catalyst_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.unstable_catalyst_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon93 = QtGui.QIcon()
        icon93.addPixmap(QtGui.QPixmap(":/catalysts/assets/images/catalysts/unstable_catalyst.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.unstable_catalyst_btn.setIcon(icon93)
        self.unstable_catalyst_btn.setIconSize(QtCore.QSize(30, 30))
        self.unstable_catalyst_btn.setCheckable(True)
        self.unstable_catalyst_btn.setObjectName("unstable_catalyst_btn")
        self.catalysts_btns_group.addButton(self.unstable_catalyst_btn)
        self.horizontalLayout_13.addWidget(self.unstable_catalyst_btn)
        self.noxious_catalyst_btn = QtWidgets.QPushButton(self.catalyst_btn_row)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.noxious_catalyst_btn.sizePolicy().hasHeightForWidth())
        self.noxious_catalyst_btn.setSizePolicy(sizePolicy)
        self.noxious_catalyst_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.noxious_catalyst_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon94 = QtGui.QIcon()
        icon94.addPixmap(QtGui.QPixmap(":/catalysts/assets/images/catalysts/noxious_catalyst.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.noxious_catalyst_btn.setIcon(icon94)
        self.noxious_catalyst_btn.setIconSize(QtCore.QSize(30, 30))
        self.noxious_catalyst_btn.setCheckable(True)
        self.noxious_catalyst_btn.setObjectName("noxious_catalyst_btn")
        self.catalysts_btns_group.addButton(self.noxious_catalyst_btn)
        self.horizontalLayout_13.addWidget(self.noxious_catalyst_btn)
        self.verticalLayout_22.addWidget(self.catalyst_btn_row)
        self.catalyst_mode_row = QtWidgets.QWidget(self.catalysts)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.catalyst_mode_row.sizePolicy().hasHeightForWidth())
        self.catalyst_mode_row.setSizePolicy(sizePolicy)
        self.catalyst_mode_row.setObjectName("catalyst_mode_row")
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout(self.catalyst_mode_row)
        self.horizontalLayout_14.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_14.setSpacing(0)
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.catalyst_mode_label = QtWidgets.QLabel(self.catalyst_mode_row)
        self.catalyst_mode_label.setObjectName("catalyst_mode_label")
        self.horizontalLayout_14.addWidget(self.catalyst_mode_label)
        self.max_catalyst_btn = QtWidgets.QPushButton(self.catalyst_mode_row)
        self.max_catalyst_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.max_catalyst_btn.setCheckable(True)
        self.max_catalyst_btn.setObjectName("max_catalyst_btn")
        self.catalysts_mode_btns_group = QtWidgets.QButtonGroup(MainWindow)
        self.catalysts_mode_btns_group.setObjectName("catalysts_mode_btns_group")
        self.catalysts_mode_btns_group.addButton(self.max_catalyst_btn)
        self.horizontalLayout_14.addWidget(self.max_catalyst_btn)
        self.single_catalys_btn = QtWidgets.QPushButton(self.catalyst_mode_row)
        self.single_catalys_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.single_catalys_btn.setCheckable(True)
        self.single_catalys_btn.setObjectName("single_catalys_btn")
        self.catalysts_mode_btns_group.addButton(self.single_catalys_btn)
        self.horizontalLayout_14.addWidget(self.single_catalys_btn)
        self.verticalLayout_22.addWidget(self.catalyst_mode_row, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.crafting_method_pages.addWidget(self.catalysts)
        self.beast_crafts = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.beast_crafts.sizePolicy().hasHeightForWidth())
        self.beast_crafts.setSizePolicy(sizePolicy)
        self.beast_crafts.setStyleSheet("margin: 0px;\n"
"padding: 0px;\n"
"border-image: none;\n"
"")
        self.beast_crafts.setObjectName("beast_crafts")
        self.verticalLayout_29 = QtWidgets.QVBoxLayout(self.beast_crafts)
        self.verticalLayout_29.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_29.setSpacing(0)
        self.verticalLayout_29.setObjectName("verticalLayout_29")
        self.beast_crafting_methods_btns = QtWidgets.QWidget(self.beast_crafts)
        self.beast_crafting_methods_btns.setStyleSheet("margin: 0px;\n"
"padding: 0px;\n"
"border-image: none;\n"
"")
        self.beast_crafting_methods_btns.setObjectName("beast_crafting_methods_btns")
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout(self.beast_crafting_methods_btns)
        self.horizontalLayout_15.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_15.setSpacing(0)
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.beast_crafting_hide_btn = QtWidgets.QPushButton(self.beast_crafting_methods_btns)
        self.beast_crafting_hide_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.beast_crafting_hide_btn.sizePolicy().hasHeightForWidth())
        self.beast_crafting_hide_btn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.beast_crafting_hide_btn.setFont(font)
        self.beast_crafting_hide_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.beast_crafting_hide_btn.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.beast_crafting_hide_btn.setStyleSheet("QPushButton {\n"
"border: 1px solid #90701b;\n"
"border-radius: 0px;\n"
"border-image: none;\n"
"box-shadow: inset 0 1px 1px #e6b15f,0 1px 2px rgba(0,0,0,0.61);\n"
"font-family: Open Sans;\n"
"font-size: 12px;\n"
"font-weight: bold;\n"
"color: #333;\n"
"text-shadow: 1px 1px #FFF;\n"
"line-height: 29px;\n"
"height: 29px;\n"
"margin: 0px;\n"
"padding: 0px 6px 0px 4px;\n"
"cursor: pointer;\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:1, stop:0 rgba(239, 232, 158, 255), stop:1 rgba(252, 199, 121, 255));\n"
"}\n"
"            QPushButton::hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:1, stop:0 rgba(237, 231, 182, 255), stop:1 rgba(249, 206, 144, 255));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"                border: 1px inset #FFF;\n"
"                box-shadow: none;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.beast_crafting_hide_btn.setObjectName("beast_crafting_hide_btn")
        self.horizontalLayout_15.addWidget(self.beast_crafting_hide_btn)
        self.beast_crafting_methods_label = QtWidgets.QLabel(self.beast_crafting_methods_btns)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.beast_crafting_methods_label.sizePolicy().hasHeightForWidth())
        self.beast_crafting_methods_label.setSizePolicy(sizePolicy)
        self.beast_crafting_methods_label.setObjectName("beast_crafting_methods_label")
        self.horizontalLayout_15.addWidget(self.beast_crafting_methods_label)
        self.bprefix__to_suffix_btn = CustomCursorButton(self.beast_crafting_methods_btns)
        self.bprefix__to_suffix_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.bprefix__to_suffix_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon95 = QtGui.QIcon()
        icon95.addPixmap(QtGui.QPixmap(":/beasts/assets/images/beasts/bpretsuf.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bprefix__to_suffix_btn.setIcon(icon95)
        self.bprefix__to_suffix_btn.setIconSize(QtCore.QSize(30, 30))
        self.bprefix__to_suffix_btn.setCheckable(True)
        self.bprefix__to_suffix_btn.setObjectName("bprefix__to_suffix_btn")
        self.beast_crafting_btns_group = QtWidgets.QButtonGroup(MainWindow)
        self.beast_crafting_btns_group.setObjectName("beast_crafting_btns_group")
        self.beast_crafting_btns_group.addButton(self.bprefix__to_suffix_btn)
        self.horizontalLayout_15.addWidget(self.bprefix__to_suffix_btn)
        self.bsuffix_to_prefix_btn = CustomCursorButton(self.beast_crafting_methods_btns)
        self.bsuffix_to_prefix_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.bsuffix_to_prefix_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon96 = QtGui.QIcon()
        icon96.addPixmap(QtGui.QPixmap(":/beasts/assets/images/beasts/bsuftpre.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bsuffix_to_prefix_btn.setIcon(icon96)
        self.bsuffix_to_prefix_btn.setIconSize(QtCore.QSize(30, 30))
        self.bsuffix_to_prefix_btn.setCheckable(True)
        self.bsuffix_to_prefix_btn.setObjectName("bsuffix_to_prefix_btn")
        self.beast_crafting_btns_group.addButton(self.bsuffix_to_prefix_btn)
        self.horizontalLayout_15.addWidget(self.bsuffix_to_prefix_btn)
        self.bimprint_btn = CustomCursorButton(self.beast_crafting_methods_btns)
        self.bimprint_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.bimprint_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon97 = QtGui.QIcon()
        icon97.addPixmap(QtGui.QPixmap(":/beasts/assets/images/beasts/bimprint.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bimprint_btn.setIcon(icon97)
        self.bimprint_btn.setIconSize(QtCore.QSize(30, 30))
        self.bimprint_btn.setCheckable(True)
        self.bimprint_btn.setObjectName("bimprint_btn")
        self.beast_crafting_btns_group.addButton(self.bimprint_btn)
        self.horizontalLayout_15.addWidget(self.bimprint_btn)
        self.breroll_values_btn = CustomCursorButton(self.beast_crafting_methods_btns)
        self.breroll_values_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.breroll_values_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon98 = QtGui.QIcon()
        icon98.addPixmap(QtGui.QPixmap(":/beasts/assets/images/beasts/breroll.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.breroll_values_btn.setIcon(icon98)
        self.breroll_values_btn.setIconSize(QtCore.QSize(30, 30))
        self.breroll_values_btn.setCheckable(True)
        self.breroll_values_btn.setObjectName("breroll_values_btn")
        self.beast_crafting_btns_group.addButton(self.breroll_values_btn)
        self.horizontalLayout_15.addWidget(self.breroll_values_btn)
        self.bcat_btn = CustomCursorButton(self.beast_crafting_methods_btns)
        self.bcat_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.bcat_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon99 = QtGui.QIcon()
        icon99.addPixmap(QtGui.QPixmap(":/beasts/assets/images/beasts/bcat.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bcat_btn.setIcon(icon99)
        self.bcat_btn.setIconSize(QtCore.QSize(30, 30))
        self.bcat_btn.setCheckable(True)
        self.bcat_btn.setObjectName("bcat_btn")
        self.beast_crafting_btns_group.addButton(self.bcat_btn)
        self.horizontalLayout_15.addWidget(self.bcat_btn)
        self.bavian_btn = CustomCursorButton(self.beast_crafting_methods_btns)
        self.bavian_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.bavian_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon100 = QtGui.QIcon()
        icon100.addPixmap(QtGui.QPixmap(":/beasts/assets/images/beasts/bavian.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bavian_btn.setIcon(icon100)
        self.bavian_btn.setIconSize(QtCore.QSize(30, 30))
        self.bavian_btn.setCheckable(True)
        self.bavian_btn.setObjectName("bavian_btn")
        self.beast_crafting_btns_group.addButton(self.bavian_btn)
        self.horizontalLayout_15.addWidget(self.bavian_btn)
        self.bspider_btn = CustomCursorButton(self.beast_crafting_methods_btns)
        self.bspider_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.bspider_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon101 = QtGui.QIcon()
        icon101.addPixmap(QtGui.QPixmap(":/beasts/assets/images/beasts/bspider.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bspider_btn.setIcon(icon101)
        self.bspider_btn.setIconSize(QtCore.QSize(30, 30))
        self.bspider_btn.setCheckable(True)
        self.bspider_btn.setObjectName("bspider_btn")
        self.beast_crafting_btns_group.addButton(self.bspider_btn)
        self.horizontalLayout_15.addWidget(self.bspider_btn)
        self.bcrab_btn = CustomCursorButton(self.beast_crafting_methods_btns)
        self.bcrab_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.bcrab_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon102 = QtGui.QIcon()
        icon102.addPixmap(QtGui.QPixmap(":/beasts/assets/images/beasts/bcrab.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bcrab_btn.setIcon(icon102)
        self.bcrab_btn.setIconSize(QtCore.QSize(30, 30))
        self.bcrab_btn.setCheckable(True)
        self.bcrab_btn.setObjectName("bcrab_btn")
        self.beast_crafting_btns_group.addButton(self.bcrab_btn)
        self.horizontalLayout_15.addWidget(self.bcrab_btn)
        self.verticalLayout_29.addWidget(self.beast_crafting_methods_btns)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_29.addItem(spacerItem)
        self.crafting_method_pages.addWidget(self.beast_crafts)
        self.eldritch_crafts = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.eldritch_crafts.sizePolicy().hasHeightForWidth())
        self.eldritch_crafts.setSizePolicy(sizePolicy)
        self.eldritch_crafts.setObjectName("eldritch_crafts")
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout(self.eldritch_crafts)
        self.horizontalLayout_18.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_18.setSpacing(0)
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        self.eldritch_btns_container = QtWidgets.QWidget(self.eldritch_crafts)
        self.eldritch_btns_container.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.eldritch_btns_container.sizePolicy().hasHeightForWidth())
        self.eldritch_btns_container.setSizePolicy(sizePolicy)
        self.eldritch_btns_container.setObjectName("eldritch_btns_container")
        self.verticalLayout_36 = QtWidgets.QVBoxLayout(self.eldritch_btns_container)
        self.verticalLayout_36.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_36.setSpacing(0)
        self.verticalLayout_36.setObjectName("verticalLayout_36")
        self.eldritch_btn_row1 = QtWidgets.QWidget(self.eldritch_btns_container)
        self.eldritch_btn_row1.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.eldritch_btn_row1.sizePolicy().hasHeightForWidth())
        self.eldritch_btn_row1.setSizePolicy(sizePolicy)
        self.eldritch_btn_row1.setObjectName("eldritch_btn_row1")
        self.fossil_row1_3 = QtWidgets.QHBoxLayout(self.eldritch_btn_row1)
        self.fossil_row1_3.setContentsMargins(0, 0, 0, 0)
        self.fossil_row1_3.setSpacing(0)
        self.fossil_row1_3.setObjectName("fossil_row1_3")
        self.eldritch_hide_btn = QtWidgets.QPushButton(self.eldritch_btn_row1)
        self.eldritch_hide_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.eldritch_hide_btn.sizePolicy().hasHeightForWidth())
        self.eldritch_hide_btn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.eldritch_hide_btn.setFont(font)
        self.eldritch_hide_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.eldritch_hide_btn.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.eldritch_hide_btn.setStyleSheet("QPushButton {\n"
"border: 1px solid #90701b;\n"
"border-radius: 0px;\n"
"border-image: none;\n"
"box-shadow: inset 0 1px 1px #e6b15f,0 1px 2px rgba(0,0,0,0.61);\n"
"font-family: Open Sans;\n"
"font-size: 12px;\n"
"font-weight: bold;\n"
"color: #333;\n"
"text-shadow: 1px 1px #FFF;\n"
"line-height: 29px;\n"
"height: 29px;\n"
"margin: 0px;\n"
"padding: 0px 6px 0px 4px;\n"
"cursor: pointer;\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:1, stop:0 rgba(239, 232, 158, 255), stop:1 rgba(252, 199, 121, 255));\n"
"}\n"
"            QPushButton::hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:1, stop:0 rgba(237, 231, 182, 255), stop:1 rgba(249, 206, 144, 255));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"                border: 1px inset #FFF;\n"
"                box-shadow: none;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.eldritch_hide_btn.setCheckable(True)
        self.eldritch_hide_btn.setObjectName("eldritch_hide_btn")
        self.fossil_row1_3.addWidget(self.eldritch_hide_btn)
        self.eldritch_method_label = QtWidgets.QLabel(self.eldritch_btn_row1)
        self.eldritch_method_label.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.eldritch_method_label.sizePolicy().hasHeightForWidth())
        self.eldritch_method_label.setSizePolicy(sizePolicy)
        self.eldritch_method_label.setObjectName("eldritch_method_label")
        self.fossil_row1_3.addWidget(self.eldritch_method_label)
        self.eldritch_chaos_btn = CustomCursorButton(self.eldritch_btn_row1)
        self.eldritch_chaos_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.eldritch_chaos_btn.sizePolicy().hasHeightForWidth())
        self.eldritch_chaos_btn.setSizePolicy(sizePolicy)
        self.eldritch_chaos_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.eldritch_chaos_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon103 = QtGui.QIcon()
        icon103.addPixmap(QtGui.QPixmap(":/eldritch/assets/images/eldritch/eldritch_chaos.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.eldritch_chaos_btn.setIcon(icon103)
        self.eldritch_chaos_btn.setIconSize(QtCore.QSize(30, 30))
        self.eldritch_chaos_btn.setCheckable(True)
        self.eldritch_chaos_btn.setObjectName("eldritch_chaos_btn")
        self.eldritch_crafting_btns_group = QtWidgets.QButtonGroup(MainWindow)
        self.eldritch_crafting_btns_group.setObjectName("eldritch_crafting_btns_group")
        self.eldritch_crafting_btns_group.addButton(self.eldritch_chaos_btn)
        self.fossil_row1_3.addWidget(self.eldritch_chaos_btn)
        self.eldritch_exalted_btn = CustomCursorButton(self.eldritch_btn_row1)
        self.eldritch_exalted_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.eldritch_exalted_btn.sizePolicy().hasHeightForWidth())
        self.eldritch_exalted_btn.setSizePolicy(sizePolicy)
        self.eldritch_exalted_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.eldritch_exalted_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon104 = QtGui.QIcon()
        icon104.addPixmap(QtGui.QPixmap(":/eldritch/assets/images/eldritch/eldritch_exalted.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.eldritch_exalted_btn.setIcon(icon104)
        self.eldritch_exalted_btn.setIconSize(QtCore.QSize(30, 30))
        self.eldritch_exalted_btn.setCheckable(True)
        self.eldritch_exalted_btn.setObjectName("eldritch_exalted_btn")
        self.eldritch_crafting_btns_group.addButton(self.eldritch_exalted_btn)
        self.fossil_row1_3.addWidget(self.eldritch_exalted_btn)
        self.eldritch_annul_btn = CustomCursorButton(self.eldritch_btn_row1)
        self.eldritch_annul_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.eldritch_annul_btn.sizePolicy().hasHeightForWidth())
        self.eldritch_annul_btn.setSizePolicy(sizePolicy)
        self.eldritch_annul_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.eldritch_annul_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon105 = QtGui.QIcon()
        icon105.addPixmap(QtGui.QPixmap(":/eldritch/assets/images/eldritch/eldritch_annul.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.eldritch_annul_btn.setIcon(icon105)
        self.eldritch_annul_btn.setIconSize(QtCore.QSize(30, 30))
        self.eldritch_annul_btn.setCheckable(True)
        self.eldritch_annul_btn.setObjectName("eldritch_annul_btn")
        self.eldritch_crafting_btns_group.addButton(self.eldritch_annul_btn)
        self.fossil_row1_3.addWidget(self.eldritch_annul_btn)
        self.orb_of_conflict_btn = CustomCursorButton(self.eldritch_btn_row1)
        self.orb_of_conflict_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.orb_of_conflict_btn.sizePolicy().hasHeightForWidth())
        self.orb_of_conflict_btn.setSizePolicy(sizePolicy)
        self.orb_of_conflict_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.orb_of_conflict_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon106 = QtGui.QIcon()
        icon106.addPixmap(QtGui.QPixmap(":/eldritch/assets/images/eldritch/orb_of_conflict.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.orb_of_conflict_btn.setIcon(icon106)
        self.orb_of_conflict_btn.setIconSize(QtCore.QSize(30, 30))
        self.orb_of_conflict_btn.setCheckable(True)
        self.orb_of_conflict_btn.setObjectName("orb_of_conflict_btn")
        self.eldritch_crafting_btns_group.addButton(self.orb_of_conflict_btn)
        self.fossil_row1_3.addWidget(self.orb_of_conflict_btn)
        self.verticalLayout_36.addWidget(self.eldritch_btn_row1)
        self.eldritch_btn_row2 = QtWidgets.QWidget(self.eldritch_btns_container)
        self.eldritch_btn_row2.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.eldritch_btn_row2.sizePolicy().hasHeightForWidth())
        self.eldritch_btn_row2.setSizePolicy(sizePolicy)
        self.eldritch_btn_row2.setObjectName("eldritch_btn_row2")
        self.horizontalLayout_17 = QtWidgets.QHBoxLayout(self.eldritch_btn_row2)
        self.horizontalLayout_17.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_17.setSpacing(0)
        self.horizontalLayout_17.setObjectName("horizontalLayout_17")
        self.lesser_ember_btn = CustomCursorButton(self.eldritch_btn_row2)
        self.lesser_ember_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lesser_ember_btn.sizePolicy().hasHeightForWidth())
        self.lesser_ember_btn.setSizePolicy(sizePolicy)
        self.lesser_ember_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.lesser_ember_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon107 = QtGui.QIcon()
        icon107.addPixmap(QtGui.QPixmap(":/eldritch/assets/images/eldritch/lesser_eldritch_ember.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.lesser_ember_btn.setIcon(icon107)
        self.lesser_ember_btn.setIconSize(QtCore.QSize(30, 30))
        self.lesser_ember_btn.setObjectName("lesser_ember_btn")
        self.eldritch_crafting_btns_group.addButton(self.lesser_ember_btn)
        self.horizontalLayout_17.addWidget(self.lesser_ember_btn, 0, QtCore.Qt.AlignHCenter)
        self.greater_ember_btn = CustomCursorButton(self.eldritch_btn_row2)
        self.greater_ember_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.greater_ember_btn.sizePolicy().hasHeightForWidth())
        self.greater_ember_btn.setSizePolicy(sizePolicy)
        self.greater_ember_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.greater_ember_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon108 = QtGui.QIcon()
        icon108.addPixmap(QtGui.QPixmap(":/eldritch/assets/images/eldritch/greater_eldritch_ember.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.greater_ember_btn.setIcon(icon108)
        self.greater_ember_btn.setIconSize(QtCore.QSize(30, 30))
        self.greater_ember_btn.setCheckable(True)
        self.greater_ember_btn.setObjectName("greater_ember_btn")
        self.eldritch_crafting_btns_group.addButton(self.greater_ember_btn)
        self.horizontalLayout_17.addWidget(self.greater_ember_btn)
        self.grand_ember_btn = CustomCursorButton(self.eldritch_btn_row2)
        self.grand_ember_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.grand_ember_btn.sizePolicy().hasHeightForWidth())
        self.grand_ember_btn.setSizePolicy(sizePolicy)
        self.grand_ember_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.grand_ember_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon109 = QtGui.QIcon()
        icon109.addPixmap(QtGui.QPixmap(":/eldritch/assets/images/eldritch/grand_eldritch_ember.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.grand_ember_btn.setIcon(icon109)
        self.grand_ember_btn.setIconSize(QtCore.QSize(30, 30))
        self.grand_ember_btn.setCheckable(True)
        self.grand_ember_btn.setObjectName("grand_ember_btn")
        self.eldritch_crafting_btns_group.addButton(self.grand_ember_btn)
        self.horizontalLayout_17.addWidget(self.grand_ember_btn)
        self.exceptional_ember_btn = CustomCursorButton(self.eldritch_btn_row2)
        self.exceptional_ember_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.exceptional_ember_btn.sizePolicy().hasHeightForWidth())
        self.exceptional_ember_btn.setSizePolicy(sizePolicy)
        self.exceptional_ember_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.exceptional_ember_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon110 = QtGui.QIcon()
        icon110.addPixmap(QtGui.QPixmap(":/eldritch/assets/images/eldritch/exceptional_eldritch_ember.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.exceptional_ember_btn.setIcon(icon110)
        self.exceptional_ember_btn.setIconSize(QtCore.QSize(30, 30))
        self.exceptional_ember_btn.setCheckable(True)
        self.exceptional_ember_btn.setObjectName("exceptional_ember_btn")
        self.eldritch_crafting_btns_group.addButton(self.exceptional_ember_btn)
        self.horizontalLayout_17.addWidget(self.exceptional_ember_btn)
        self.verticalLayout_36.addWidget(self.eldritch_btn_row2, 0, QtCore.Qt.AlignHCenter)
        self.eldritch_btn_row3 = QtWidgets.QWidget(self.eldritch_btns_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.eldritch_btn_row3.sizePolicy().hasHeightForWidth())
        self.eldritch_btn_row3.setSizePolicy(sizePolicy)
        self.eldritch_btn_row3.setObjectName("eldritch_btn_row3")
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout(self.eldritch_btn_row3)
        self.horizontalLayout_16.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_16.setSpacing(0)
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.lesser_ichor_btn = CustomCursorButton(self.eldritch_btn_row3)
        self.lesser_ichor_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lesser_ichor_btn.sizePolicy().hasHeightForWidth())
        self.lesser_ichor_btn.setSizePolicy(sizePolicy)
        self.lesser_ichor_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.lesser_ichor_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon111 = QtGui.QIcon()
        icon111.addPixmap(QtGui.QPixmap(":/eldritch/assets/images/eldritch/lesser_eldritch_ichor.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.lesser_ichor_btn.setIcon(icon111)
        self.lesser_ichor_btn.setIconSize(QtCore.QSize(30, 30))
        self.lesser_ichor_btn.setCheckable(True)
        self.lesser_ichor_btn.setObjectName("lesser_ichor_btn")
        self.eldritch_crafting_btns_group.addButton(self.lesser_ichor_btn)
        self.horizontalLayout_16.addWidget(self.lesser_ichor_btn)
        self.greater_icho_btn = CustomCursorButton(self.eldritch_btn_row3)
        self.greater_icho_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.greater_icho_btn.sizePolicy().hasHeightForWidth())
        self.greater_icho_btn.setSizePolicy(sizePolicy)
        self.greater_icho_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.greater_icho_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon112 = QtGui.QIcon()
        icon112.addPixmap(QtGui.QPixmap(":/eldritch/assets/images/eldritch/greater_eldritch_ichor.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.greater_icho_btn.setIcon(icon112)
        self.greater_icho_btn.setIconSize(QtCore.QSize(30, 30))
        self.greater_icho_btn.setCheckable(True)
        self.greater_icho_btn.setObjectName("greater_icho_btn")
        self.eldritch_crafting_btns_group.addButton(self.greater_icho_btn)
        self.horizontalLayout_16.addWidget(self.greater_icho_btn)
        self.grand_ichor_btn = CustomCursorButton(self.eldritch_btn_row3)
        self.grand_ichor_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.grand_ichor_btn.sizePolicy().hasHeightForWidth())
        self.grand_ichor_btn.setSizePolicy(sizePolicy)
        self.grand_ichor_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.grand_ichor_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon113 = QtGui.QIcon()
        icon113.addPixmap(QtGui.QPixmap(":/eldritch/assets/images/eldritch/grand_eldritch_ichor.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.grand_ichor_btn.setIcon(icon113)
        self.grand_ichor_btn.setIconSize(QtCore.QSize(30, 30))
        self.grand_ichor_btn.setCheckable(True)
        self.grand_ichor_btn.setObjectName("grand_ichor_btn")
        self.eldritch_crafting_btns_group.addButton(self.grand_ichor_btn)
        self.horizontalLayout_16.addWidget(self.grand_ichor_btn)
        self.exceptional_ichor_btn = CustomCursorButton(self.eldritch_btn_row3)
        self.exceptional_ichor_btn.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.exceptional_ichor_btn.sizePolicy().hasHeightForWidth())
        self.exceptional_ichor_btn.setSizePolicy(sizePolicy)
        self.exceptional_ichor_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.exceptional_ichor_btn.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"                padding: 5px 10px;\n"
"                cursor: pointer;\n"
"                text-shadow: 1px 1px #000;\n"
"                vertical-align: top;\n"
"           }\n"
"            QPushButton::hover {         \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(30, 30, 30, 1), stop:1 rgba(75, 75, 75, 1));\n"
"           }\n"
"            QPushButton::pressed {\n"
"                \n"
"    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(221, 204, 153, 1), stop:1 rgba(255, 238, 187, 255));\n"
"                color: #332211;\n"
"text-shadow: 1px 1px #FFF;\n"
"box-shadow: inset 0 1px 1px #BBB, 0 1px 2px rgba(0,0,0,0.31);\n"
"font-weight: bold;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        icon114 = QtGui.QIcon()
        icon114.addPixmap(QtGui.QPixmap(":/eldritch/assets/images/eldritch/exceptional_eldritch_ichor.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.exceptional_ichor_btn.setIcon(icon114)
        self.exceptional_ichor_btn.setIconSize(QtCore.QSize(30, 30))
        self.exceptional_ichor_btn.setCheckable(True)
        self.exceptional_ichor_btn.setObjectName("exceptional_ichor_btn")
        self.eldritch_crafting_btns_group.addButton(self.exceptional_ichor_btn)
        self.horizontalLayout_16.addWidget(self.exceptional_ichor_btn)
        self.verticalLayout_36.addWidget(self.eldritch_btn_row3, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.horizontalLayout_18.addWidget(self.eldritch_btns_container)
        self.crafting_method_pages.addWidget(self.eldritch_crafts)
        self.syndicate_crafts = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.syndicate_crafts.sizePolicy().hasHeightForWidth())
        self.syndicate_crafts.setSizePolicy(sizePolicy)
        self.syndicate_crafts.setObjectName("syndicate_crafts")
        self.crafting_method_pages.addWidget(self.syndicate_crafts)
        self.verticalLayout_7.addWidget(self.crafting_method_pages, 0, QtCore.Qt.AlignTop)
        self.verticalLayout_17.addWidget(self.crafting_methods, 0, QtCore.Qt.AlignTop)
        self.item_info_container = QtWidgets.QWidget(self.crafting_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_info_container.sizePolicy().hasHeightForWidth())
        self.item_info_container.setSizePolicy(sizePolicy)
        self.item_info_container.setStyleSheet("QWidget {\n"
"border-image: none;\n"
"}")
        self.item_info_container.setObjectName("item_info_container")
        self.verticalLayout_27 = QtWidgets.QVBoxLayout(self.item_info_container)
        self.verticalLayout_27.setContentsMargins(20, 0, 20, 20)
        self.verticalLayout_27.setSpacing(0)
        self.verticalLayout_27.setObjectName("verticalLayout_27")
        self.item_info_display = QtWidgets.QWidget(self.item_info_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_info_display.sizePolicy().hasHeightForWidth())
        self.item_info_display.setSizePolicy(sizePolicy)
        self.item_info_display.setAutoFillBackground(False)
        self.item_info_display.setStyleSheet("QFrame {\n"
"border-image: none;\n"
"}\n"
"QWidget {\n"
"border-image: none;\n"
"}")
        self.item_info_display.setObjectName("item_info_display")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.item_info_display)
        self.horizontalLayout_4.setContentsMargins(0, 20, 0, 0)
        self.horizontalLayout_4.setSpacing(60)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.available_mods_container = QtWidgets.QWidget(self.item_info_display)
        self.available_mods_container.setMaximumSize(QtCore.QSize(500, 400))
        self.available_mods_container.setObjectName("available_mods_container")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.available_mods_container)
        self.verticalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_8.setSpacing(0)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.search_bar_container = QtWidgets.QFrame(self.available_mods_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.search_bar_container.sizePolicy().hasHeightForWidth())
        self.search_bar_container.setSizePolicy(sizePolicy)
        self.search_bar_container.setObjectName("search_bar_container")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.search_bar_container)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setSpacing(0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.affix_search_bar = QtWidgets.QLineEdit(self.search_bar_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.affix_search_bar.sizePolicy().hasHeightForWidth())
        self.affix_search_bar.setSizePolicy(sizePolicy)
        self.affix_search_bar.setMinimumSize(QtCore.QSize(130, 30))
        self.affix_search_bar.setMaximumSize(QtCore.QSize(1675555, 30))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(False)
        font.setItalic(False)
        self.affix_search_bar.setFont(font)
        self.affix_search_bar.setFrame(True)
        self.affix_search_bar.setClearButtonEnabled(True)
        self.affix_search_bar.setObjectName("affix_search_bar")
        self.horizontalLayout_3.addWidget(self.affix_search_bar)
        self.verticalLayout_8.addWidget(self.search_bar_container)
        self.modpool_history_widget = QtWidgets.QWidget(self.available_mods_container)
        self.modpool_history_widget.setStyleSheet("")
        self.modpool_history_widget.setObjectName("modpool_history_widget")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.modpool_history_widget)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setSpacing(0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.crafting_toolbox = QtWidgets.QWidget(self.modpool_history_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.crafting_toolbox.sizePolicy().hasHeightForWidth())
        self.crafting_toolbox.setSizePolicy(sizePolicy)
        self.crafting_toolbox.setMinimumSize(QtCore.QSize(120, 0))
        self.crafting_toolbox.setMaximumSize(QtCore.QSize(200, 360))
        self.crafting_toolbox.setStyleSheet("")
        self.crafting_toolbox.setObjectName("crafting_toolbox")
        self.verticalLayout_37 = QtWidgets.QVBoxLayout(self.crafting_toolbox)
        self.verticalLayout_37.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_37.setSpacing(0)
        self.verticalLayout_37.setObjectName("verticalLayout_37")
        self.crafting_history_container = QtWidgets.QWidget(self.crafting_toolbox)
        self.crafting_history_container.setStyleSheet("")
        self.crafting_history_container.setObjectName("crafting_history_container")
        self.verticalLayout_20 = QtWidgets.QVBoxLayout(self.crafting_history_container)
        self.verticalLayout_20.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_20.setSpacing(0)
        self.verticalLayout_20.setObjectName("verticalLayout_20")
        self.crafting_history = QtWidgets.QToolBox(self.crafting_history_container)
        self.crafting_history.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.crafting_history.sizePolicy().hasHeightForWidth())
        self.crafting_history.setSizePolicy(sizePolicy)
        self.crafting_history.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        font.setItalic(False)
        self.crafting_history.setFont(font)
        self.crafting_history.setStyleSheet("QWidget {\n"
"    vertical-align: top;\n"
"    padding: 5px 10px;\n"
"    text-shadow: 1px 1px #000;\n"
"    \n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(30, 30, 30, 255), stop:1 rgba(75, 75, 75, 255));\n"
"\n"
"    border: 0px solid #000;\n"
"    box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0,.31);\n"
"    box-sizing: border-box;\n"
"    text-transform: uppercase;\n"
"    font-weight: bold;\n"
"    color: #f6e5b2;\n"
"    font-family: Open Sans;\n"
"    font-size: 14px;\n"
"    margin: 0px;\n"
"}")
        self.crafting_history.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.crafting_history.setFrameShadow(QtWidgets.QFrame.Plain)
        self.crafting_history.setObjectName("crafting_history")
        self.history_tab = QtWidgets.QWidget()
        self.history_tab.setGeometry(QtCore.QRect(0, 0, 124, 168))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.history_tab.setFont(font)
        self.history_tab.setAutoFillBackground(False)
        self.history_tab.setStyleSheet("")
        self.history_tab.setObjectName("history_tab")
        self.verticalLayout_21 = QtWidgets.QVBoxLayout(self.history_tab)
        self.verticalLayout_21.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_21.setSpacing(0)
        self.verticalLayout_21.setObjectName("verticalLayout_21")
        self.crafting_history.addItem(self.history_tab, "")
        self.spending_tab = QtWidgets.QWidget()
        self.spending_tab.setGeometry(QtCore.QRect(0, 0, 124, 168))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(True)
        self.spending_tab.setFont(font)
        self.spending_tab.setStyleSheet("")
        self.spending_tab.setObjectName("spending_tab")
        self.verticalLayout_25 = QtWidgets.QVBoxLayout(self.spending_tab)
        self.verticalLayout_25.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_25.setSpacing(0)
        self.verticalLayout_25.setObjectName("verticalLayout_25")
        self.crafting_history.addItem(self.spending_tab, "")
        self.export_tab = QtWidgets.QWidget()
        self.export_tab.setGeometry(QtCore.QRect(0, 0, 124, 168))
        self.export_tab.setStyleSheet("")
        self.export_tab.setObjectName("export_tab")
        self.verticalLayout_30 = QtWidgets.QVBoxLayout(self.export_tab)
        self.verticalLayout_30.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_30.setSpacing(0)
        self.verticalLayout_30.setObjectName("verticalLayout_30")
        self.crafting_history.addItem(self.export_tab, "")
        self.verticalLayout_20.addWidget(self.crafting_history)
        self.status_buttons = QtWidgets.QWidget(self.crafting_history_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.status_buttons.sizePolicy().hasHeightForWidth())
        self.status_buttons.setSizePolicy(sizePolicy)
        self.status_buttons.setMinimumSize(QtCore.QSize(120, 90))
        self.status_buttons.setMaximumSize(QtCore.QSize(400, 90))
        self.status_buttons.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.status_buttons.setStyleSheet("QPushButton {\n"
"                border: 1px solid #000;\n"
"                  border-top-width: 1px;\n"
"                   border-right-width: 1px;\n"
"                   border-bottom-width: 1px;\n"
"                   border-left-width: 1px;\n"
"                   border-top-style: solid;\n"
"                 border-right-style: solid;\n"
"                  border-bottom-style: solid;\n"
"                   border-left-style: solid;\n"
"                   border-top-color: rgb(0, 0, 0);\n"
"                  border-right-color: rgb(0, 0, 0);\n"
"                   border-bottom-color: rgb(0, 0, 0);\n"
"                   border-left-color: rgb(0, 0, 0);\n"
"                  border-image-source: initial;\n"
"                  border-image-slice: initial;\n"
"                  border-image-width: initial;\n"
"                  border-image-outset: initial;\n"
"                border-image-repeat: initial;\n"
"                border-radius: 4px;\n"
"                background-color: qlineargradient(x1: 0, y1: 1, x2: 0, y2: 0, stop: 0 #1e1e1e, stop: 1 #3c3c3c);\n"
"                border-image: none;\n"
"              color: #FFF;\n"
"               text-shadow: 1px 1px #000;\n"
"               box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0.31);\n"
"                font-family: Open Sans;\n"
"                font-size: 12px;\n"
"               font-weight: bold;\n"
"               height: 36px;\n"
"                line-height: 36px;\n"
"                text-align: center;\n"
"                margin: 0px;\n"
"           }\n"
"            QPushButton::hover {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"           }\n"
"            QPushButton::pressed {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                                  stop: 0 #4b4b4b, stop: 1 #2d2d2d);\n"
"            }\n"
"            QPushButton::checked {\n"
"                background-color: qlineargradient(x1: 0, y1: 0, x2: 0 y2: 1,\n"
"                                                 stop: 0 #2d2d2d, stop: 1 #4b4b4b);\n"
"                border: 5px inset #FFF;\n"
"                box-shadow: none;\n"
"            }\n"
"            QPushButton::flat {\n"
"                border: none;\n"
"}")
        self.status_buttons.setObjectName("status_buttons")
        self.verticalLayout_31 = QtWidgets.QVBoxLayout(self.status_buttons)
        self.verticalLayout_31.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_31.setSpacing(0)
        self.verticalLayout_31.setObjectName("verticalLayout_31")
        self.clear_item_options = QtWidgets.QPushButton(self.status_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.clear_item_options.sizePolicy().hasHeightForWidth())
        self.clear_item_options.setSizePolicy(sizePolicy)
        self.clear_item_options.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.clear_item_options.setCheckable(False)
        self.clear_item_options.setAutoDefault(False)
        self.clear_item_options.setDefault(False)
        self.clear_item_options.setFlat(False)
        self.clear_item_options.setObjectName("clear_item_options")
        self.verticalLayout_31.addWidget(self.clear_item_options)
        self.import_custom_item = QtWidgets.QPushButton(self.status_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.import_custom_item.sizePolicy().hasHeightForWidth())
        self.import_custom_item.setSizePolicy(sizePolicy)
        self.import_custom_item.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.import_custom_item.setCheckable(False)
        self.import_custom_item.setDefault(False)
        self.import_custom_item.setFlat(False)
        self.import_custom_item.setObjectName("import_custom_item")
        self.verticalLayout_31.addWidget(self.import_custom_item)
        self.simulate_crafting = QtWidgets.QPushButton(self.status_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.simulate_crafting.sizePolicy().hasHeightForWidth())
        self.simulate_crafting.setSizePolicy(sizePolicy)
        self.simulate_crafting.setMinimumSize(QtCore.QSize(0, 0))
        self.simulate_crafting.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.simulate_crafting.setToolTip("")
        self.simulate_crafting.setCheckable(False)
        self.simulate_crafting.setChecked(False)
        self.simulate_crafting.setFlat(False)
        self.simulate_crafting.setObjectName("simulate_crafting")
        self.verticalLayout_31.addWidget(self.simulate_crafting)
        self.verticalLayout_20.addWidget(self.status_buttons)
        self.verticalLayout_37.addWidget(self.crafting_history_container)
        self.horizontalLayout_5.addWidget(self.crafting_toolbox)
        self.mods_container = QtWidgets.QWidget(self.modpool_history_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mods_container.sizePolicy().hasHeightForWidth())
        self.mods_container.setSizePolicy(sizePolicy)
        self.mods_container.setObjectName("mods_container")
        self.verticalLayout_39 = QtWidgets.QVBoxLayout(self.mods_container)
        self.verticalLayout_39.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_39.setSpacing(0)
        self.verticalLayout_39.setObjectName("verticalLayout_39")
        self.modpool_tabs = QtWidgets.QWidget(self.mods_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.modpool_tabs.sizePolicy().hasHeightForWidth())
        self.modpool_tabs.setSizePolicy(sizePolicy)
        self.modpool_tabs.setMinimumSize(QtCore.QSize(0, 0))
        self.modpool_tabs.setMaximumSize(QtCore.QSize(500, 500))
        self.modpool_tabs.setObjectName("modpool_tabs")
        self.verticalLayout_32 = QtWidgets.QVBoxLayout(self.modpool_tabs)
        self.verticalLayout_32.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_32.setSpacing(0)
        self.verticalLayout_32.setObjectName("verticalLayout_32")
        self.modpool_btns_layout = QtWidgets.QFrame(self.modpool_tabs)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.modpool_btns_layout.sizePolicy().hasHeightForWidth())
        self.modpool_btns_layout.setSizePolicy(sizePolicy)
        self.modpool_btns_layout.setStyleSheet("QFrame {\n"
"padding: 0px;\n"
"margin: 0px;\n"
"}\n"
"QWidget {\n"
"margin: 0px;\n"
"}\n"
"\n"
"QPushButton {\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgba(109, 60, 60, 1), stop:1 rgba(136, 75, 75, 255));\n"
"margin: 0px;\n"
"font-family: Open Sans;\n"
"font-size: 14px;\n"
"font-weight: bold;\n"
"text-transform: uppercase;\n"
"box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba (0, 0, 0, 0.31);\n"
"border: 1px solid #000;\n"
"color: #FFF;\n"
"text-shadow: 1px 1px #000;\n"
"}")
        self.modpool_btns_layout.setObjectName("modpool_btns_layout")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.modpool_btns_layout)
        self.horizontalLayout_2.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.prefix_btn = QtWidgets.QPushButton(self.modpool_btns_layout)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.prefix_btn.sizePolicy().hasHeightForWidth())
        self.prefix_btn.setSizePolicy(sizePolicy)
        self.prefix_btn.setStyleSheet("QPushButton::flat {\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgba(109, 60, 60, 1), stop:1 rgba(136, 75, 75, 255));\n"
"margin: 0px;\n"
"font-family: Open Sans;\n"
"font-size: 14px;\n"
"font-weight: bold;\n"
"text-transform: uppercase;\n"
"box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba (0, 0, 0, 0.31);\n"
"border: 1px solid #000;\n"
"color: #FFF;\n"
"text-shadow: 1px 1px #000;\n"
"}")
        self.prefix_btn.setCheckable(True)
        self.prefix_btn.setFlat(True)
        self.prefix_btn.setObjectName("prefix_btn")
        self.modpool_btns_group = QtWidgets.QButtonGroup(MainWindow)
        self.modpool_btns_group.setObjectName("modpool_btns_group")
        self.modpool_btns_group.addButton(self.prefix_btn)
        self.horizontalLayout_2.addWidget(self.prefix_btn)
        self.suffix_btn = QtWidgets.QPushButton(self.modpool_btns_layout)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.suffix_btn.sizePolicy().hasHeightForWidth())
        self.suffix_btn.setSizePolicy(sizePolicy)
        self.suffix_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.suffix_btn.setMaximumSize(QtCore.QSize(16777215, 1677215))
        self.suffix_btn.setStyleSheet("QPushButton::flat {\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgba(109, 60, 60, 1), stop:1 rgba(136, 75, 75, 255));\n"
"margin: 0px;\n"
"font-family: Open Sans;\n"
"font-size: 14px;\n"
"font-weight: bold;\n"
"text-transform: uppercase;\n"
"box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba (0, 0, 0, 0.31);\n"
"border: 1px solid #000;\n"
"color: #FFF;\n"
"text-shadow: 1px 1px #000;\n"
"}")
        self.suffix_btn.setCheckable(True)
        self.suffix_btn.setFlat(True)
        self.suffix_btn.setObjectName("suffix_btn")
        self.modpool_btns_group.addButton(self.suffix_btn)
        self.horizontalLayout_2.addWidget(self.suffix_btn)
        self.implicit_btn = QtWidgets.QPushButton(self.modpool_btns_layout)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.implicit_btn.sizePolicy().hasHeightForWidth())
        self.implicit_btn.setSizePolicy(sizePolicy)
        self.implicit_btn.setStyleSheet("QPushButton::flat {\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgba(109, 60, 60, 1), stop:1 rgba(136, 75, 75, 255));\n"
"margin: 0px;\n"
"font-family: Open Sans;\n"
"font-size: 14px;\n"
"font-weight: bold;\n"
"text-transform: uppercase;\n"
"box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba (0, 0, 0, 0.31);\n"
"border: 1px solid #000;\n"
"color: #FFF;\n"
"text-shadow: 1px 1px #000;\n"
"}")
        self.implicit_btn.setCheckable(True)
        self.implicit_btn.setDefault(False)
        self.implicit_btn.setFlat(True)
        self.implicit_btn.setObjectName("implicit_btn")
        self.modpool_btns_group.addButton(self.implicit_btn)
        self.horizontalLayout_2.addWidget(self.implicit_btn)
        self.verticalLayout_32.addWidget(self.modpool_btns_layout)
        self.modpool_container = QtWidgets.QStackedWidget(self.modpool_tabs)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.modpool_container.sizePolicy().hasHeightForWidth())
        self.modpool_container.setSizePolicy(sizePolicy)
        self.modpool_container.setAutoFillBackground(False)
        self.modpool_container.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.modpool_container.setFrameShadow(QtWidgets.QFrame.Plain)
        self.modpool_container.setObjectName("modpool_container")
        self.prefixes = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.prefixes.sizePolicy().hasHeightForWidth())
        self.prefixes.setSizePolicy(sizePolicy)
        self.prefixes.setStyleSheet("QWidget {\n"
"    vertical-align: top;\n"
"    padding: 5px 10px;\n"
"    text-shadow: 1px 1px #000;\n"
"    \n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(30, 30, 30, 255), stop:1 rgba(75, 75, 75, 255));\n"
"\n"
"    border: 0px solid #000;\n"
"    box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0,.31);\n"
"    box-sizing: border-box;\n"
"    text-transform: uppercase;\n"
"    font-weight: bold;\n"
"    color: #f6e5b2;\n"
"    font-family: Open Sans;\n"
"    font-size: 14px;\n"
"    margin: 0px;\n"
"}")
        self.prefixes.setObjectName("prefixes")
        self.verticalLayout_33 = QtWidgets.QVBoxLayout(self.prefixes)
        self.verticalLayout_33.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_33.setSpacing(0)
        self.verticalLayout_33.setObjectName("verticalLayout_33")
        self.prefix_tree_view = CustomTreeView(self.prefixes)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.prefix_tree_view.sizePolicy().hasHeightForWidth())
        self.prefix_tree_view.setSizePolicy(sizePolicy)
        self.prefix_tree_view.setFocusPolicy(QtCore.Qt.TabFocus)
        self.prefix_tree_view.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.prefix_tree_view.setFrameShadow(QtWidgets.QFrame.Plain)
        self.prefix_tree_view.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.prefix_tree_view.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.prefix_tree_view.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContentsOnFirstShow)
        self.prefix_tree_view.setAlternatingRowColors(False)
        self.prefix_tree_view.setTextElideMode(QtCore.Qt.ElideRight)
        self.prefix_tree_view.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerItem)
        self.prefix_tree_view.setIndentation(10)
        self.prefix_tree_view.setUniformRowHeights(True)
        self.prefix_tree_view.setObjectName("prefix_tree_view")
        self.prefix_tree_view.header().setCascadingSectionResizes(False)
        self.prefix_tree_view.header().setMinimumSectionSize(80)
        self.prefix_tree_view.header().setStretchLastSection(False)
        self.verticalLayout_33.addWidget(self.prefix_tree_view)
        self.modpool_container.addWidget(self.prefixes)
        self.suffixes = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.suffixes.sizePolicy().hasHeightForWidth())
        self.suffixes.setSizePolicy(sizePolicy)
        self.suffixes.setStyleSheet("QWidget {\n"
"    vertical-align: top;\n"
"    padding: 5px 10px;\n"
"    text-shadow: 1px 1px #000;\n"
"    \n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(30, 30, 30, 255), stop:1 rgba(75, 75, 75, 255));\n"
"\n"
"    border: 0px solid #000;\n"
"    box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0,.31);\n"
"    box-sizing: border-box;\n"
"    text-transform: uppercase;\n"
"    font-weight: bold;\n"
"    color: #f6e5b2;\n"
"    font-family: Open Sans;\n"
"    font-size: 14px;\n"
"    margin: 0px;\n"
"}")
        self.suffixes.setObjectName("suffixes")
        self.verticalLayout_34 = QtWidgets.QVBoxLayout(self.suffixes)
        self.verticalLayout_34.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_34.setSpacing(0)
        self.verticalLayout_34.setObjectName("verticalLayout_34")
        self.suffix_tree_view = CustomTreeView(self.suffixes)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.suffix_tree_view.sizePolicy().hasHeightForWidth())
        self.suffix_tree_view.setSizePolicy(sizePolicy)
        self.suffix_tree_view.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.suffix_tree_view.setFrameShadow(QtWidgets.QFrame.Plain)
        self.suffix_tree_view.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.suffix_tree_view.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.suffix_tree_view.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContentsOnFirstShow)
        self.suffix_tree_view.setAlternatingRowColors(False)
        self.suffix_tree_view.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerItem)
        self.suffix_tree_view.setIndentation(10)
        self.suffix_tree_view.setUniformRowHeights(True)
        self.suffix_tree_view.setObjectName("suffix_tree_view")
        self.suffix_tree_view.header().setCascadingSectionResizes(False)
        self.suffix_tree_view.header().setMinimumSectionSize(80)
        self.suffix_tree_view.header().setStretchLastSection(False)
        self.verticalLayout_34.addWidget(self.suffix_tree_view)
        self.modpool_container.addWidget(self.suffixes)
        self.implicits = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.implicits.sizePolicy().hasHeightForWidth())
        self.implicits.setSizePolicy(sizePolicy)
        self.implicits.setStyleSheet("QWidget {\n"
"    vertical-align: top;\n"
"    padding: 5px 10px;\n"
"    text-shadow: 1px 1px #000;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(30, 30, 30, 255), stop:1 rgba(75, 75, 75, 255));\n"
"    border: 0px solid #000;\n"
"    box-shadow: inset 0 1px 1px #666, 0 1px 2px rgba(0,0,0,0,.31);\n"
"    box-sizing: border-box;\n"
"    text-transform: uppercase;\n"
"    font-weight: bold;\n"
"    color: #f6e5b2;\n"
"    font-family: Open Sans;\n"
"    font-size: 14px;\n"
"    margin: 0px;\n"
"}")
        self.implicits.setObjectName("implicits")
        self.verticalLayout_35 = QtWidgets.QVBoxLayout(self.implicits)
        self.verticalLayout_35.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_35.setSpacing(0)
        self.verticalLayout_35.setObjectName("verticalLayout_35")
        self.implicit_tree_view = CustomTreeView(self.implicits)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.implicit_tree_view.sizePolicy().hasHeightForWidth())
        self.implicit_tree_view.setSizePolicy(sizePolicy)
        self.implicit_tree_view.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.implicit_tree_view.setFrameShadow(QtWidgets.QFrame.Plain)
        self.implicit_tree_view.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.implicit_tree_view.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.implicit_tree_view.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContentsOnFirstShow)
        self.implicit_tree_view.setAlternatingRowColors(False)
        self.implicit_tree_view.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerItem)
        self.implicit_tree_view.setIndentation(10)
        self.implicit_tree_view.setUniformRowHeights(True)
        self.implicit_tree_view.setObjectName("implicit_tree_view")
        self.implicit_tree_view.header().setCascadingSectionResizes(False)
        self.implicit_tree_view.header().setMinimumSectionSize(80)
        self.implicit_tree_view.header().setStretchLastSection(False)
        self.verticalLayout_35.addWidget(self.implicit_tree_view)
        self.modpool_container.addWidget(self.implicits)
        self.verticalLayout_32.addWidget(self.modpool_container)
        self.verticalLayout_39.addWidget(self.modpool_tabs)
        self.horizontalLayout_5.addWidget(self.mods_container)
        self.verticalLayout_8.addWidget(self.modpool_history_widget)
        self.horizontalLayout_4.addWidget(self.available_mods_container)
        self.item_view = QtWidgets.QFrame(self.item_info_display)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_view.sizePolicy().hasHeightForWidth())
        self.item_view.setSizePolicy(sizePolicy)
        self.item_view.setMinimumSize(QtCore.QSize(128, 298))
        self.item_view.setMaximumSize(QtCore.QSize(145, 418))
        self.item_view.setStyleSheet("QWidget{\n"
"border: 0px;\n"
"background-color: none;\n"
"}")
        self.item_view.setObjectName("item_view")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.item_view)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.item_img_box = QtWidgets.QLabel(self.item_view)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_img_box.sizePolicy().hasHeightForWidth())
        self.item_img_box.setSizePolicy(sizePolicy)
        self.item_img_box.setMinimumSize(QtCore.QSize(128, 228))
        self.item_img_box.setMaximumSize(QtCore.QSize(128, 228))
        self.item_img_box.setStyleSheet("QLabel{\n"
"    background-image: url(:/images/assets/images/item_box.png);\n"
"opacity: 0.8;\n"
"}\n"
"QLabel::hover{\n"
"background-color:#ffffff;\n"
"opacity: 1;\n"
"}")
        self.item_img_box.setText("")
        self.item_img_box.setScaledContents(True)
        self.item_img_box.setAlignment(QtCore.Qt.AlignCenter)
        self.item_img_box.setObjectName("item_img_box")
        self.verticalLayout_2.addWidget(self.item_img_box, 0, QtCore.Qt.AlignVCenter)
        self.crafting_button = QtWidgets.QLabel(self.item_view)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.crafting_button.sizePolicy().hasHeightForWidth())
        self.crafting_button.setSizePolicy(sizePolicy)
        self.crafting_button.setMinimumSize(QtCore.QSize(0, 39))
        self.crafting_button.setMaximumSize(QtCore.QSize(128, 39))
        self.crafting_button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.crafting_button.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.crafting_button.setStyleSheet("QLabel{\n"
"    background-image: url(:/images/assets/images/craftbtn.png);\n"
"}\n"
"QLabel::hover{\n"
"    background-image: url(:/images/assets/images/craftbtnov.png);\n"
"}")
        self.crafting_button.setText("")
        self.crafting_button.setScaledContents(True)
        self.crafting_button.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.crafting_button.setObjectName("crafting_button")
        self.verticalLayout_2.addWidget(self.crafting_button)
        self.item_dps_container = QtWidgets.QWidget(self.item_view)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_dps_container.sizePolicy().hasHeightForWidth())
        self.item_dps_container.setSizePolicy(sizePolicy)
        self.item_dps_container.setObjectName("item_dps_container")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.item_dps_container)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.item_dps_box = QtWidgets.QLabel(self.item_dps_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_dps_box.sizePolicy().hasHeightForWidth())
        self.item_dps_box.setSizePolicy(sizePolicy)
        self.item_dps_box.setStyleSheet("QLabel {\n"
"    border: 2px solid #8f8f91;\n"
"    border-radius: 6px;\n"
"    background-color: hsla(100, 100%, 100%, 0.1);\n"
"}")
        self.item_dps_box.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.item_dps_box.setFrameShadow(QtWidgets.QFrame.Plain)
        self.item_dps_box.setText("")
        self.item_dps_box.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.item_dps_box.setObjectName("item_dps_box")
        self.verticalLayout.addWidget(self.item_dps_box)
        self.verticalLayout_2.addWidget(self.item_dps_container)
        self.horizontalLayout_4.addWidget(self.item_view, 0, QtCore.Qt.AlignHCenter)
        self.item_description = QtWidgets.QWidget(self.item_info_display)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_description.sizePolicy().hasHeightForWidth())
        self.item_description.setSizePolicy(sizePolicy)
        self.item_description.setMinimumSize(QtCore.QSize(400, 400))
        self.item_description.setMaximumSize(QtCore.QSize(400, 500))
        self.item_description.setBaseSize(QtCore.QSize(400, 319))
        self.item_description.setTabletTracking(False)
        self.item_description.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.item_description.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.item_description.setStyleSheet("QWidget {\n"
"border: 0px;\n"
"border-radius: 0px;\n"
"font: fontin;\n"
"background-color: black;\n"
"background-color: hsla(0, 0%, 0%, .8);\n"
"border-image: none;\n"
"background-image: none;\n"
"}\n"
"\n"
"QLabel {\n"
"background-color: black;\n"
"background-color: hsla(0, 0%, 0%, .8);\n"
"\n"
"}")
        self.item_description.setObjectName("item_description")
        self.verticalLayout_28 = QtWidgets.QVBoxLayout(self.item_description)
        self.verticalLayout_28.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_28.setSpacing(0)
        self.verticalLayout_28.setObjectName("verticalLayout_28")
        self.item_description_layout = QtWidgets.QFrame(self.item_description)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_description_layout.sizePolicy().hasHeightForWidth())
        self.item_description_layout.setSizePolicy(sizePolicy)
        self.item_description_layout.setMinimumSize(QtCore.QSize(400, 318))
        self.item_description_layout.setMaximumSize(QtCore.QSize(400, 800))
        self.item_description_layout.setMouseTracking(False)
        self.item_description_layout.setStyleSheet("")
        self.item_description_layout.setObjectName("item_description_layout")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.item_description_layout)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.item_header = QtWidgets.QWidget(self.item_description_layout)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_header.sizePolicy().hasHeightForWidth())
        self.item_header.setSizePolicy(sizePolicy)
        self.item_header.setMinimumSize(QtCore.QSize(400, 54))
        self.item_header.setMaximumSize(QtCore.QSize(400, 54))
        self.item_header.setBaseSize(QtCore.QSize(400, 44))
        self.item_header.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.item_header.setObjectName("item_header")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.item_header)
        self.verticalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_10.setSpacing(0)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.item_header_text_label = QtWidgets.QLabel(self.item_header)
        self.item_header_text_label.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_header_text_label.sizePolicy().hasHeightForWidth())
        self.item_header_text_label.setSizePolicy(sizePolicy)
        self.item_header_text_label.setMinimumSize(QtCore.QSize(400, 54))
        self.item_header_text_label.setMaximumSize(QtCore.QSize(400, 54))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(False)
        font.setItalic(False)
        font.setKerning(True)
        self.item_header_text_label.setFont(font)
        self.item_header_text_label.setStyleSheet("background-image: url(:/images/assets/images/item-header-normal.png);")
        self.item_header_text_label.setText("")
        self.item_header_text_label.setTextFormat(QtCore.Qt.RichText)
        self.item_header_text_label.setScaledContents(True)
        self.item_header_text_label.setAlignment(QtCore.Qt.AlignCenter)
        self.item_header_text_label.setWordWrap(True)
        self.item_header_text_label.setObjectName("item_header_text_label")
        self.verticalLayout_10.addWidget(self.item_header_text_label)
        self.verticalLayout_4.addWidget(self.item_header)
        self.item_info_box = QtWidgets.QWidget(self.item_description_layout)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_info_box.sizePolicy().hasHeightForWidth())
        self.item_info_box.setSizePolicy(sizePolicy)
        self.item_info_box.setMinimumSize(QtCore.QSize(400, 0))
        self.item_info_box.setMaximumSize(QtCore.QSize(400, 500))
        self.item_info_box.setObjectName("item_info_box")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.item_info_box)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setSpacing(0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.affixes = QtWidgets.QWidget(self.item_info_box)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.affixes.sizePolicy().hasHeightForWidth())
        self.affixes.setSizePolicy(sizePolicy)
        self.affixes.setMinimumSize(QtCore.QSize(400, 0))
        self.affixes.setMaximumSize(QtCore.QSize(400, 150))
        self.affixes.setStyleSheet("color: #827a6c;\n"
"padding: 2px 10px;\n"
"    font-size: 14px;\n"
"    font-style: fontin;\n"
"    line-height: 14px;\n"
"    font-align: center;")
        self.affixes.setObjectName("affixes")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.affixes)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.item_properties = QtWidgets.QLabel(self.affixes)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_properties.sizePolicy().hasHeightForWidth())
        self.item_properties.setSizePolicy(sizePolicy)
        self.item_properties.setMinimumSize(QtCore.QSize(0, 0))
        self.item_properties.setMaximumSize(QtCore.QSize(16777215, 100))
        self.item_properties.setStyleSheet("QLabel{\n"
"color: #827a6c;\n"
"padding: 2px 10px;\n"
"font-size: 14px;\n"
"line-height: 14px;\n"
"text-align: center;\n"
"margin: 0;\n"
"}")
        self.item_properties.setText("")
        self.item_properties.setTextFormat(QtCore.Qt.RichText)
        self.item_properties.setAlignment(QtCore.Qt.AlignCenter)
        self.item_properties.setObjectName("item_properties")
        self.verticalLayout_3.addWidget(self.item_properties)
        self.item_spacer_1 = QtWidgets.QLabel(self.affixes)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_spacer_1.sizePolicy().hasHeightForWidth())
        self.item_spacer_1.setSizePolicy(sizePolicy)
        self.item_spacer_1.setMaximumSize(QtCore.QSize(400, 2))
        self.item_spacer_1.setBaseSize(QtCore.QSize(0, 0))
        self.item_spacer_1.setText("")
        self.item_spacer_1.setTextFormat(QtCore.Qt.RichText)
        self.item_spacer_1.setPixmap(QtGui.QPixmap("C:/Users/spark/source/repos/ExileCraft/ExileCraft/assets/images/item-sep.png"))
        self.item_spacer_1.setScaledContents(False)
        self.item_spacer_1.setAlignment(QtCore.Qt.AlignCenter)
        self.item_spacer_1.setObjectName("item_spacer_1")
        self.verticalLayout_3.addWidget(self.item_spacer_1)
        self.item_requirements = QtWidgets.QLabel(self.affixes)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_requirements.sizePolicy().hasHeightForWidth())
        self.item_requirements.setSizePolicy(sizePolicy)
        self.item_requirements.setMaximumSize(QtCore.QSize(16777215, 100))
        self.item_requirements.setStyleSheet("QLabel{\n"
"color: #827a6c;\n"
"padding: 2px 10px;\n"
"font-size: 14px;\n"
"line-height: 14px;\n"
"text-align: center;\n"
"margin: 0;\n"
"}")
        self.item_requirements.setTextFormat(QtCore.Qt.RichText)
        self.item_requirements.setAlignment(QtCore.Qt.AlignCenter)
        self.item_requirements.setObjectName("item_requirements")
        self.verticalLayout_3.addWidget(self.item_requirements)
        self.item_spacer_2 = QtWidgets.QLabel(self.affixes)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_spacer_2.sizePolicy().hasHeightForWidth())
        self.item_spacer_2.setSizePolicy(sizePolicy)
        self.item_spacer_2.setMaximumSize(QtCore.QSize(400, 2))
        self.item_spacer_2.setBaseSize(QtCore.QSize(0, 0))
        self.item_spacer_2.setText("")
        self.item_spacer_2.setTextFormat(QtCore.Qt.RichText)
        self.item_spacer_2.setPixmap(QtGui.QPixmap("C:/Users/spark/source/repos/ExileCraft/ExileCraft/assets/images/item-sep.png"))
        self.item_spacer_2.setScaledContents(False)
        self.item_spacer_2.setAlignment(QtCore.Qt.AlignCenter)
        self.item_spacer_2.setObjectName("item_spacer_2")
        self.verticalLayout_3.addWidget(self.item_spacer_2)
        self.item_implicits = QtWidgets.QLabel(self.affixes)
        self.item_implicits.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_implicits.sizePolicy().hasHeightForWidth())
        self.item_implicits.setSizePolicy(sizePolicy)
        self.item_implicits.setMaximumSize(QtCore.QSize(16777215, 100))
        self.item_implicits.setStyleSheet("QLabel{\n"
"color: #8787fe;\n"
"padding: 2px 10px;\n"
"font-size: 14px;\n"
"line-height: 14px;\n"
"text-align: center;\n"
"margin: 0;\n"
"}")
        self.item_implicits.setText("")
        self.item_implicits.setTextFormat(QtCore.Qt.RichText)
        self.item_implicits.setAlignment(QtCore.Qt.AlignCenter)
        self.item_implicits.setWordWrap(True)
        self.item_implicits.setObjectName("item_implicits")
        self.verticalLayout_3.addWidget(self.item_implicits)
        self.item_spacer_3 = QtWidgets.QLabel(self.affixes)
        self.item_spacer_3.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_spacer_3.sizePolicy().hasHeightForWidth())
        self.item_spacer_3.setSizePolicy(sizePolicy)
        self.item_spacer_3.setMaximumSize(QtCore.QSize(400, 2))
        self.item_spacer_3.setBaseSize(QtCore.QSize(0, 0))
        self.item_spacer_3.setText("")
        self.item_spacer_3.setTextFormat(QtCore.Qt.RichText)
        self.item_spacer_3.setPixmap(QtGui.QPixmap("C:/Users/spark/source/repos/ExileCraft/ExileCraft/assets/images/item-sep.png"))
        self.item_spacer_3.setScaledContents(False)
        self.item_spacer_3.setAlignment(QtCore.Qt.AlignCenter)
        self.item_spacer_3.setObjectName("item_spacer_3")
        self.verticalLayout_3.addWidget(self.item_spacer_3)
        self.verticalLayout_5.addWidget(self.affixes)
        self.modifiers = QtWidgets.QWidget(self.item_info_box)
        self.modifiers.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.modifiers.sizePolicy().hasHeightForWidth())
        self.modifiers.setSizePolicy(sizePolicy)
        self.modifiers.setMinimumSize(QtCore.QSize(400, 0))
        self.modifiers.setMaximumSize(QtCore.QSize(400, 16777215))
        self.modifiers.setStyleSheet("")
        self.modifiers.setObjectName("modifiers")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.modifiers)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setSpacing(0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.prefix_info_1 = QtWidgets.QLabel(self.modifiers)
        self.prefix_info_1.setEnabled(False)
        self.prefix_info_1.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(False)
        font.setItalic(False)
        self.prefix_info_1.setFont(font)
        self.prefix_info_1.setStyleSheet("QLabel {\n"
"color: #7f7f7f;\n"
"text-transform: none;\n"
"font-size: 12px;\n"
"padding-bottom: 0px;\n"
"padding-top: 2px;\n"
"padding-right: 10px;\n"
"padding-left: 10px;\n"
"line-height: 14px;\n"
"text-align: center;\n"
"margin: 0px;\n"
"}")
        self.prefix_info_1.setTextFormat(QtCore.Qt.RichText)
        self.prefix_info_1.setAlignment(QtCore.Qt.AlignCenter)
        self.prefix_info_1.setObjectName("prefix_info_1")
        self.verticalLayout_6.addWidget(self.prefix_info_1, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.prefix_1 = QtWidgets.QLabel(self.modifiers)
        self.prefix_1.setEnabled(False)
        self.prefix_1.setMinimumSize(QtCore.QSize(0, 0))
        self.prefix_1.setStyleSheet("QLabel {\n"
"color: #8787fe;\n"
"font-size: 14px;\n"
"padding-bottom: 2px;\n"
"padding-top: 2px;\n"
"padding-right: 10px;\n"
"padding-left: 10px;\n"
"line-height: 14px;\n"
"text-align: center;\n"
"margin: 0px;\n"
"}")
        self.prefix_1.setTextFormat(QtCore.Qt.RichText)
        self.prefix_1.setAlignment(QtCore.Qt.AlignCenter)
        self.prefix_1.setObjectName("prefix_1")
        self.verticalLayout_6.addWidget(self.prefix_1, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.prefix_info_2 = QtWidgets.QLabel(self.modifiers)
        self.prefix_info_2.setEnabled(False)
        self.prefix_info_2.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(False)
        font.setItalic(False)
        self.prefix_info_2.setFont(font)
        self.prefix_info_2.setStyleSheet("QLabel {\n"
"color: #7f7f7f;\n"
"text-transform: none;\n"
"font-size: 12px;\n"
"padding-bottom: 0px;\n"
"padding-top: 2px;\n"
"padding-right: 10px;\n"
"padding-left: 10px;\n"
"line-height: 14px;\n"
"text-align: center;\n"
"margin: 0px;\n"
"}")
        self.prefix_info_2.setTextFormat(QtCore.Qt.RichText)
        self.prefix_info_2.setAlignment(QtCore.Qt.AlignCenter)
        self.prefix_info_2.setObjectName("prefix_info_2")
        self.verticalLayout_6.addWidget(self.prefix_info_2, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.prefix_2 = QtWidgets.QLabel(self.modifiers)
        self.prefix_2.setEnabled(False)
        self.prefix_2.setMinimumSize(QtCore.QSize(0, 0))
        self.prefix_2.setStyleSheet("QLabel {\n"
"color: #8787fe;\n"
"font-size: 14px;\n"
"padding-bottom: 2px;\n"
"padding-top: 2px;\n"
"padding-right: 10px;\n"
"padding-left: 10px;\n"
"line-height: 14px;\n"
"text-align: center;\n"
"margin: 0px;\n"
"}")
        self.prefix_2.setTextFormat(QtCore.Qt.RichText)
        self.prefix_2.setAlignment(QtCore.Qt.AlignCenter)
        self.prefix_2.setObjectName("prefix_2")
        self.verticalLayout_6.addWidget(self.prefix_2, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.prefix_info_3 = QtWidgets.QLabel(self.modifiers)
        self.prefix_info_3.setEnabled(False)
        self.prefix_info_3.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(False)
        font.setItalic(False)
        self.prefix_info_3.setFont(font)
        self.prefix_info_3.setStyleSheet("QLabel {\n"
"color: #7f7f7f;\n"
"text-transform: none;\n"
"font-size: 12px;\n"
"padding-bottom: 0px;\n"
"padding-top: 2px;\n"
"padding-right: 10px;\n"
"padding-left: 10px;\n"
"line-height: 14px;\n"
"text-align: center;\n"
"margin: 0px;\n"
"}")
        self.prefix_info_3.setTextFormat(QtCore.Qt.RichText)
        self.prefix_info_3.setAlignment(QtCore.Qt.AlignCenter)
        self.prefix_info_3.setObjectName("prefix_info_3")
        self.verticalLayout_6.addWidget(self.prefix_info_3, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.prefix_3 = QtWidgets.QLabel(self.modifiers)
        self.prefix_3.setEnabled(False)
        self.prefix_3.setMinimumSize(QtCore.QSize(0, 0))
        self.prefix_3.setStyleSheet("QLabel {\n"
"color: #8787fe;\n"
"font-size: 14px;\n"
"padding-bottom: 2px;\n"
"padding-top: 2px;\n"
"padding-right: 10px;\n"
"padding-left: 10px;\n"
"line-height: 14px;\n"
"text-align: center;\n"
"margin: 0px;\n"
"}")
        self.prefix_3.setTextFormat(QtCore.Qt.RichText)
        self.prefix_3.setAlignment(QtCore.Qt.AlignCenter)
        self.prefix_3.setObjectName("prefix_3")
        self.verticalLayout_6.addWidget(self.prefix_3, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.suffix_info_1 = QtWidgets.QLabel(self.modifiers)
        self.suffix_info_1.setEnabled(False)
        self.suffix_info_1.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(False)
        font.setItalic(False)
        self.suffix_info_1.setFont(font)
        self.suffix_info_1.setStyleSheet("QLabel {\n"
"color: #7f7f7f;\n"
"text-transform: none;\n"
"font-size: 12px;\n"
"padding-bottom: 0px;\n"
"padding-top: 2px;\n"
"padding-right: 10px;\n"
"padding-left: 10px;\n"
"line-height: 14px;\n"
"text-align: center;\n"
"margin: 0px;\n"
"}")
        self.suffix_info_1.setTextFormat(QtCore.Qt.RichText)
        self.suffix_info_1.setAlignment(QtCore.Qt.AlignCenter)
        self.suffix_info_1.setObjectName("suffix_info_1")
        self.verticalLayout_6.addWidget(self.suffix_info_1)
        self.suffix_1 = QtWidgets.QLabel(self.modifiers)
        self.suffix_1.setEnabled(False)
        self.suffix_1.setMinimumSize(QtCore.QSize(0, 0))
        self.suffix_1.setStyleSheet("QLabel {\n"
"color: #8787fe;\n"
"font-size: 14px;\n"
"padding-bottom: 2px;\n"
"padding-top: 2px;\n"
"padding-right: 10px;\n"
"padding-left: 10px;\n"
"line-height: 14px;\n"
"text-align: center;\n"
"margin: 0px;\n"
"}")
        self.suffix_1.setTextFormat(QtCore.Qt.RichText)
        self.suffix_1.setAlignment(QtCore.Qt.AlignCenter)
        self.suffix_1.setObjectName("suffix_1")
        self.verticalLayout_6.addWidget(self.suffix_1, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.suffix_info_2 = QtWidgets.QLabel(self.modifiers)
        self.suffix_info_2.setEnabled(False)
        self.suffix_info_2.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(False)
        font.setItalic(False)
        self.suffix_info_2.setFont(font)
        self.suffix_info_2.setStyleSheet("QLabel {\n"
"color: #7f7f7f;\n"
"text-transform: none;\n"
"font-size: 12px;\n"
"padding-bottom: 0px;\n"
"padding-top: 2px;\n"
"padding-right: 10px;\n"
"padding-left: 10px;\n"
"line-height: 14px;\n"
"text-align: center;\n"
"margin: 0px;\n"
"}")
        self.suffix_info_2.setTextFormat(QtCore.Qt.RichText)
        self.suffix_info_2.setAlignment(QtCore.Qt.AlignCenter)
        self.suffix_info_2.setObjectName("suffix_info_2")
        self.verticalLayout_6.addWidget(self.suffix_info_2)
        self.suffix_2 = QtWidgets.QLabel(self.modifiers)
        self.suffix_2.setEnabled(False)
        self.suffix_2.setMinimumSize(QtCore.QSize(0, 0))
        self.suffix_2.setStyleSheet("QLabel {\n"
"color: #8787fe;\n"
"font-size: 14px;\n"
"padding-bottom: 2px;\n"
"padding-top: 2px;\n"
"padding-right: 10px;\n"
"padding-left: 10px;\n"
"line-height: 14px;\n"
"text-align: center;\n"
"margin: 0px;\n"
"}")
        self.suffix_2.setTextFormat(QtCore.Qt.RichText)
        self.suffix_2.setAlignment(QtCore.Qt.AlignCenter)
        self.suffix_2.setObjectName("suffix_2")
        self.verticalLayout_6.addWidget(self.suffix_2, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.suffix_info_3 = QtWidgets.QLabel(self.modifiers)
        self.suffix_info_3.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.suffix_info_3.sizePolicy().hasHeightForWidth())
        self.suffix_info_3.setSizePolicy(sizePolicy)
        self.suffix_info_3.setMinimumSize(QtCore.QSize(0, 0))
        self.suffix_info_3.setMaximumSize(QtCore.QSize(16777215, 16))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(-1)
        font.setBold(False)
        font.setItalic(False)
        self.suffix_info_3.setFont(font)
        self.suffix_info_3.setStyleSheet("QLabel {\n"
"color: #7f7f7f;\n"
"text-transform: none;\n"
"font-size: 12px;\n"
"padding-bottom: 0px;\n"
"padding-top: 2px;\n"
"padding-right: 10px;\n"
"padding-left: 10px;\n"
"line-height: 14px;\n"
"text-align: center;\n"
"margin: 0px;\n"
"}")
        self.suffix_info_3.setLineWidth(1)
        self.suffix_info_3.setTextFormat(QtCore.Qt.RichText)
        self.suffix_info_3.setAlignment(QtCore.Qt.AlignCenter)
        self.suffix_info_3.setObjectName("suffix_info_3")
        self.verticalLayout_6.addWidget(self.suffix_info_3)
        self.suffix_3 = QtWidgets.QLabel(self.modifiers)
        self.suffix_3.setEnabled(False)
        self.suffix_3.setMinimumSize(QtCore.QSize(0, 0))
        self.suffix_3.setStyleSheet("QLabel {\n"
"color: #8787fe;\n"
"font-size: 14px;\n"
"padding-bottom: 2px;\n"
"padding-top: 2px;\n"
"padding-right: 10px;\n"
"padding-left: 10px;\n"
"line-height: 14px;\n"
"text-align: center;\n"
"margin: 0px;\n"
"}")
        self.suffix_3.setTextFormat(QtCore.Qt.RichText)
        self.suffix_3.setAlignment(QtCore.Qt.AlignCenter)
        self.suffix_3.setObjectName("suffix_3")
        self.verticalLayout_6.addWidget(self.suffix_3, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.verticalLayout_5.addWidget(self.modifiers, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.verticalLayout_4.addWidget(self.item_info_box)
        self.verticalLayout_28.addWidget(self.item_description_layout)
        self.horizontalLayout_4.addWidget(self.item_description)
        self.verticalLayout_27.addWidget(self.item_info_display)
        self.verticalLayout_17.addWidget(self.item_info_container)
        self.crafting_simulator.addWidget(self.crafting_page)
        self.gridLayout_2.addWidget(self.crafting_simulator, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.crafting_simulator_container)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 1239, 26))
        self.menuBar.setStyleSheet("")
        self.menuBar.setObjectName("menuBar")
        self.menuCrafting = QtWidgets.QMenu(self.menuBar)
        self.menuCrafting.setObjectName("menuCrafting")
        self.menuTrade_Info = QtWidgets.QMenu(self.menuBar)
        self.menuTrade_Info.setObjectName("menuTrade_Info")
        self.menuSettings = QtWidgets.QMenu(self.menuBar)
        self.menuSettings.setObjectName("menuSettings")
        MainWindow.setMenuBar(self.menuBar)
        self.actionStartOver = QtWidgets.QAction(MainWindow)
        self.actionStartOver.setObjectName("actionStartOver")
        self.actionPOEDB_TW = QtWidgets.QAction(MainWindow)
        self.actionPOEDB_TW.setObjectName("actionPOEDB_TW")
        self.actionPrice_Checker = QtWidgets.QAction(MainWindow)
        self.actionPrice_Checker.setObjectName("actionPrice_Checker")
        self.actionPOE_NINJA = QtWidgets.QAction(MainWindow)
        self.actionPOE_NINJA.setObjectName("actionPOE_NINJA")
        self.actionPATHOFEXILE_COM_TRADE = QtWidgets.QAction(MainWindow)
        self.actionPATHOFEXILE_COM_TRADE.setObjectName("actionPATHOFEXILE_COM_TRADE")
        self.actionUI = QtWidgets.QAction(MainWindow)
        self.actionUI.setObjectName("actionUI")
        self.actionTrade = QtWidgets.QAction(MainWindow)
        self.actionTrade.setObjectName("actionTrade")
        self.actionCrafting = QtWidgets.QAction(MainWindow)
        self.actionCrafting.setObjectName("actionCrafting")
        self.actionCrafting_Tutorials = QtWidgets.QAction(MainWindow)
        self.actionCrafting_Tutorials.setObjectName("actionCrafting_Tutorials")
        self.action = QtWidgets.QAction(MainWindow)
        icon115 = QtGui.QIcon()
        icon115.addPixmap(QtGui.QPixmap("assets/images/pencil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action.setIcon(icon115)
        self.action.setObjectName("action")
        self.menuCrafting.addAction(self.actionStartOver)
        self.menuCrafting.addSeparator()
        self.menuCrafting.addAction(self.actionCrafting_Tutorials)
        self.menuCrafting.addSeparator()
        self.menuCrafting.addAction(self.actionPOEDB_TW)
        self.menuTrade_Info.addAction(self.actionPrice_Checker)
        self.menuTrade_Info.addSeparator()
        self.menuTrade_Info.addAction(self.actionPOE_NINJA)
        self.menuTrade_Info.addSeparator()
        self.menuTrade_Info.addAction(self.actionPATHOFEXILE_COM_TRADE)
        self.menuSettings.addAction(self.actionUI)
        self.menuSettings.addSeparator()
        self.menuSettings.addAction(self.actionTrade)
        self.menuSettings.addSeparator()
        self.menuSettings.addAction(self.actionCrafting)
        self.menuBar.addAction(self.menuCrafting.menuAction())
        self.menuBar.addAction(self.menuTrade_Info.menuAction())
        self.menuBar.addAction(self.menuSettings.menuAction())

        self.retranslateUi(MainWindow)
        self.crafting_simulator.setCurrentIndex(0)
        self.crafting_method_pages.setCurrentIndex(0)
        self.harvest_method_stack.setCurrentIndex(1)
        self.crafting_history.setCurrentIndex(2)
        self.crafting_history.layout().setSpacing(0)
        self.modpool_container.setCurrentIndex(0)
        self.startCraftingProject.clicked.connect(MainWindow.changePage) # type: ignore
        self.actionStartOver.triggered.connect(MainWindow.resetOptions) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "ExileCraft"))
        self.label.setText(_translate("MainWindow", "Welcome To ExileCraft"))
        self.startCraftingProject.setText(_translate("MainWindow", "Start Crafting Project"))
        self.loadSavedProject.setText(_translate("MainWindow", "Load Saved Project"))
        self.importItemFromPOE.setText(_translate("MainWindow", "Import Item Info From Path Of Exile"))
        self.base_group_label.setText(_translate("MainWindow", "Choose a Base Group"))
        self.one_handed_weapons_btn.setText(_translate("MainWindow", "One Handed Weapons"))
        self.body_armours_btn.setText(_translate("MainWindow", "Body Armours"))
        self.two_handed_weapons_btn.setText(_translate("MainWindow", "Two Handed Weapons"))
        self.gloves_btn.setText(_translate("MainWindow", "Gloves"))
        self.offhands_btn.setText(_translate("MainWindow", "Offhands"))
        self.boots_btn.setText(_translate("MainWindow", "Boots"))
        self.jewels_btn.setText(_translate("MainWindow", "Jewels"))
        self.cluster_jewels_btn.setText(_translate("MainWindow", "Cluster Jewels"))
        self.helmets_btn.setText(_translate("MainWindow", "Helmets"))
        self.jewellery_btn.setText(_translate("MainWindow", "Jewellery"))
        self.flasks_btn.setText(_translate("MainWindow", "Flasks"))
        self.item_options_label_2.setText(_translate("MainWindow", "Choose Options"))
        self.influence_header_label.setText(_translate("MainWindow", "Choose zero to two influence(s)"))
        self.crusader_btn.setText(_translate("MainWindow", "Crusader"))
        self.elder_btn.setText(_translate("MainWindow", "Elder"))
        self.hunter_btn.setText(_translate("MainWindow", "Hunter"))
        self.redeemer_btn.setText(_translate("MainWindow", "Redeemer"))
        self.shaper_btn.setText(_translate("MainWindow", "Shaper"))
        self.warlord_btn.setText(_translate("MainWindow", "Warlord"))
        self.ilvl_header_label.setText(_translate("MainWindow", "Select Item Level"))
        self.ilvl_87.setText(_translate("MainWindow", "87"))
        self.ilvl_73.setText(_translate("MainWindow", "73"))
        self.ilvl_78.setText(_translate("MainWindow", "78"))
        self.ilvl_63.setText(_translate("MainWindow", "63"))
        self.ilvl_96.setText(_translate("MainWindow", "96"))
        self.ilvl_71.setText(_translate("MainWindow", "71"))
        self.ilvl_8.setText(_translate("MainWindow", "8"))
        self.ilvl_75.setText(_translate("MainWindow", "75"))
        self.ilvl_89.setText(_translate("MainWindow", "89"))
        self.ilvl_62.setText(_translate("MainWindow", "62"))
        self.ilvl_82.setText(_translate("MainWindow", "82"))
        self.ilvl_45.setText(_translate("MainWindow", "45"))
        self.ilvl_97.setText(_translate("MainWindow", "97"))
        self.ilvl_38.setText(_translate("MainWindow", "38"))
        self.ilvl_40.setText(_translate("MainWindow", "40"))
        self.ilvl_72.setText(_translate("MainWindow", "72"))
        self.ilvl_93.setText(_translate("MainWindow", "93"))
        self.ilvl_43.setText(_translate("MainWindow", "43"))
        self.ilvl_28.setText(_translate("MainWindow", "28"))
        self.ilvl_64.setText(_translate("MainWindow", "64"))
        self.ilvl_66.setText(_translate("MainWindow", "66"))
        self.ilvl_79.setText(_translate("MainWindow", "79"))
        self.ilvl_83.setText(_translate("MainWindow", "83"))
        self.ilvl_100.setText(_translate("MainWindow", "100"))
        self.ilvl_13.setText(_translate("MainWindow", "13"))
        self.ilvl_23.setText(_translate("MainWindow", "23"))
        self.ilvl_98.setText(_translate("MainWindow", "98"))
        self.ilvl_52.setText(_translate("MainWindow", "52"))
        self.ilvl_3.setText(_translate("MainWindow", "3"))
        self.ilvl_90.setText(_translate("MainWindow", "90"))
        self.ilvl_51.setText(_translate("MainWindow", "51"))
        self.ilvl_74.setText(_translate("MainWindow", "74"))
        self.ilvl_16.setText(_translate("MainWindow", "16"))
        self.ilvl_57.setText(_translate("MainWindow", "57"))
        self.ilvl_86.setText(_translate("MainWindow", "86"))
        self.ilvl_77.setText(_translate("MainWindow", "77"))
        self.ilvl_1.setText(_translate("MainWindow", "1"))
        self.ilvl_20.setText(_translate("MainWindow", "20"))
        self.ilvl_44.setText(_translate("MainWindow", "44"))
        self.ilvl_5.setText(_translate("MainWindow", "5"))
        self.ilvl_17.setText(_translate("MainWindow", "17"))
        self.ilvl_91.setText(_translate("MainWindow", "91"))
        self.ilvl_81.setText(_translate("MainWindow", "81"))
        self.ilvl_58.setText(_translate("MainWindow", "58"))
        self.ilvl_80.setText(_translate("MainWindow", "80"))
        self.ilvl_60.setText(_translate("MainWindow", "60"))
        self.ilvl_69.setText(_translate("MainWindow", "69"))
        self.ilvl_42.setText(_translate("MainWindow", "42"))
        self.ilvl_12.setText(_translate("MainWindow", "12"))
        self.ilvl_50.setText(_translate("MainWindow", "50"))
        self.ilvl_54.setText(_translate("MainWindow", "54"))
        self.ilvl_6.setText(_translate("MainWindow", "6"))
        self.ilvl_10.setText(_translate("MainWindow", "10"))
        self.ilvl_18.setText(_translate("MainWindow", "18"))
        self.ilvl_36.setText(_translate("MainWindow", "36"))
        self.ilvl_39.setText(_translate("MainWindow", "39"))
        self.ilvl_61.setText(_translate("MainWindow", "61"))
        self.ilvl_59.setText(_translate("MainWindow", "59"))
        self.ilvl_2.setText(_translate("MainWindow", "2"))
        self.ilvl_34.setText(_translate("MainWindow", "34"))
        self.ilvl_26.setText(_translate("MainWindow", "26"))
        self.ilvl_67.setText(_translate("MainWindow", "67"))
        self.ilvl_15.setText(_translate("MainWindow", "15"))
        self.ilvl_9.setText(_translate("MainWindow", "9"))
        self.ilvl_99.setText(_translate("MainWindow", "99"))
        self.ilvl_65.setText(_translate("MainWindow", "65"))
        self.ilvl_49.setText(_translate("MainWindow", "49"))
        self.ilvl_7.setText(_translate("MainWindow", "7"))
        self.ilvl_94.setText(_translate("MainWindow", "94"))
        self.ilvl_31.setText(_translate("MainWindow", "31"))
        self.ilvl_29.setText(_translate("MainWindow", "29"))
        self.ilvl_95.setText(_translate("MainWindow", "95"))
        self.ilvl_19.setText(_translate("MainWindow", "19"))
        self.ilvl_32.setText(_translate("MainWindow", "32"))
        self.ilvl_30.setText(_translate("MainWindow", "30"))
        self.ilvl_47.setText(_translate("MainWindow", "47"))
        self.ilvl_84.setText(_translate("MainWindow", "84"))
        self.ilvl_76.setText(_translate("MainWindow", "76"))
        self.ilvl_56.setText(_translate("MainWindow", "56"))
        self.ilvl_33.setText(_translate("MainWindow", "33"))
        self.ilvl_35.setText(_translate("MainWindow", "35"))
        self.ilvl_37.setText(_translate("MainWindow", "37"))
        self.ilvl_92.setText(_translate("MainWindow", "92"))
        self.ilvl_25.setText(_translate("MainWindow", "25"))
        self.ilvl_27.setText(_translate("MainWindow", "27"))
        self.ilvl_22.setText(_translate("MainWindow", "22"))
        self.ilvl_4.setText(_translate("MainWindow", "4"))
        self.ilvl_48.setText(_translate("MainWindow", "48"))
        self.ilvl_46.setText(_translate("MainWindow", "46"))
        self.ilvl_85.setText(_translate("MainWindow", "85"))
        self.ilvl_88.setText(_translate("MainWindow", "88"))
        self.ilvl_41.setText(_translate("MainWindow", "41"))
        self.ilvl_24.setText(_translate("MainWindow", "24"))
        self.ilvl_55.setText(_translate("MainWindow", "55"))
        self.ilvl_11.setText(_translate("MainWindow", "11"))
        self.ilvl_14.setText(_translate("MainWindow", "14"))
        self.ilvl_53.setText(_translate("MainWindow", "53"))
        self.ilvl_68.setText(_translate("MainWindow", "68"))
        self.ilvl_70.setText(_translate("MainWindow", "70"))
        self.ilvl_21.setText(_translate("MainWindow", "21"))
        self.quality_header_label.setText(_translate("MainWindow", "Set Item Quality"))
        self.quality_28.setText(_translate("MainWindow", "28"))
        self.quality_5.setText(_translate("MainWindow", "5"))
        self.quality_13.setText(_translate("MainWindow", "13"))
        self.quality_20.setText(_translate("MainWindow", "20"))
        self.quality_27.setText(_translate("MainWindow", "27"))
        self.quality_3.setText(_translate("MainWindow", "3"))
        self.quality_30.setText(_translate("MainWindow", "30"))
        self.quality_26.setText(_translate("MainWindow", "26"))
        self.quality_22.setText(_translate("MainWindow", "22"))
        self.quality_25.setText(_translate("MainWindow", "25"))
        self.quality_9.setText(_translate("MainWindow", "9"))
        self.quality_4.setText(_translate("MainWindow", "4"))
        self.quality_16.setText(_translate("MainWindow", "16"))
        self.quality_24.setText(_translate("MainWindow", "24"))
        self.quality_6.setText(_translate("MainWindow", "6"))
        self.quality_21.setText(_translate("MainWindow", "21"))
        self.quality_11.setText(_translate("MainWindow", "11"))
        self.quality_12.setText(_translate("MainWindow", "12"))
        self.quality_29.setText(_translate("MainWindow", "29"))
        self.quality_15.setText(_translate("MainWindow", "15"))
        self.quality_19.setText(_translate("MainWindow", "19"))
        self.quality_14.setText(_translate("MainWindow", "14"))
        self.quality_2.setText(_translate("MainWindow", "2"))
        self.quality_7.setText(_translate("MainWindow", "7"))
        self.quality_1.setText(_translate("MainWindow", "1"))
        self.quality_18.setText(_translate("MainWindow", "18"))
        self.quality_23.setText(_translate("MainWindow", "23"))
        self.quality_10.setText(_translate("MainWindow", "10"))
        self.quality_17.setText(_translate("MainWindow", "17"))
        self.quality_8.setText(_translate("MainWindow", "8"))
        self.proceed_btn.setText(_translate("MainWindow", "Proceed"))
        self.method_transmute_btn.setToolTip(_translate("MainWindow", "Upgrades a Normal Item to a Magic Item"))
        self.method_alteration_btn.setToolTip(_translate("MainWindow", "Reforges a Magic Item with new random properties"))
        self.method_augmentation_btn.setToolTip(_translate("MainWindow", "Enchants a Magic Item with a new random property"))
        self.method_regal_btn.setToolTip(_translate("MainWindow", "Upgrades a Magic Item to a Rare Item"))
        self.method_alchemy_btn.setToolTip(_translate("MainWindow", "Upgrades a Normal Item to a Rare Item"))
        self.method_chaos_btn.setToolTip(_translate("MainWindow", "Reforges a Rare Item with new random modifiers"))
        self.method_exalted_btn.setToolTip(_translate("MainWindow", "Enchants a Rare Item with a new random property"))
        self.method_scour_btn.setToolTip(_translate("MainWindow", "Removes all properties from an Item"))
        self.method_annul_btn.setToolTip(_translate("MainWindow", "Removes a random modifier from an Item"))
        self.method_crusader_btn.setToolTip(_translate("MainWindow", "Enchants a Rare Item with a new Crusader modifier"))
        self.method_hunter_btn.setToolTip(_translate("MainWindow", "Enchants a Rare Item with a new Hunter modifier"))
        self.method_redeemer_btn.setToolTip(_translate("MainWindow", "Enchants a Rare Item with a new Redeemer modifier"))
        self.method_warlord_btn.setToolTip(_translate("MainWindow", "Enchants a Rare Item with a new Warlord modifier"))
        self.method_blessed_btn.setToolTip(_translate("MainWindow", "Randomises the numeric values of the Implicit properties of an Item"))
        self.method_divine_btn.setToolTip(_translate("MainWindow", "Randomises the numeric values of the random properties on an Item"))
        self.method_veiled_btn.setToolTip(_translate("MainWindow", "Reforges a Rare Item with new random modifiers, including a Veiled modifier"))
        self.method_woke_btn.setToolTip(_translate("MainWindow", "Destroys an Item, applying its\' Influence to another of the same Item class. The second Item is reforged as a Rare Item with both Influence types and new modifiers"))
        self.method_maven_btn.setToolTip(_translate("MainWindow", "Removes one Influenced modifier from an Item with at least two Influenced modifiers and upgrades another Influenced modifier"))
        self.method_fracturing_btn.setToolTip(_translate("MainWindow", "Fractures a random modifier on a Rare Item with at least 4 modifiers, locking it in place."))
        self.locus_btn.setToolTip(_translate("MainWindow", "Potently corrupts an Item, modifying it drastically and unpredictably"))
        self.method_vaal_btn.setToolTip(_translate("MainWindow", "Corrupts an Item, modifying it unpredictably"))
        self.method_fossil_btn.setToolTip(_translate("MainWindow", "Fossil crafting"))
        self.method_harvest_btn.setToolTip(_translate("MainWindow", "Harvest crafting"))
        self.method_essence_btn.setToolTip(_translate("MainWindow", "Essences"))
        self.catalyst_method_btn.setToolTip(_translate("MainWindow", "Catalysts"))
        self.method_imprint_btn.setToolTip(_translate("MainWindow", "Beast crafting"))
        self.eldritch_method_btn.setToolTip(_translate("MainWindow", "Eldritch crafting"))
        self.method_syndicate_btn.setToolTip(_translate("MainWindow", "Syndicate"))
        self.method_crafting_bench_btn.setToolTip(_translate("MainWindow", "Vendor recipes"))
        self.fossil_hide_button.setText(_translate("MainWindow", "Close\n"
" ➥"))
        self.fossil_label.setText(_translate("MainWindow", "FOSSILS"))
        self.abberant_fossil.setText(_translate("MainWindow", "Aberrant"))
        self.aetheric_fossil.setText(_translate("MainWindow", "Aetheric"))
        self.bound_fossil.setText(_translate("MainWindow", "Bound"))
        self.corroded_fossil.setText(_translate("MainWindow", "Corroded"))
        self.dense_fossil.setText(_translate("MainWindow", "Dense"))
        self.faceted_fossil.setText(_translate("MainWindow", "Faceted"))
        self.frigid_fossil.setText(_translate("MainWindow", "Frigid"))
        self.jagged_fossil.setText(_translate("MainWindow", "Jagged"))
        self.lucent_fossil.setText(_translate("MainWindow", "Lucent"))
        self.metallic_fossil.setText(_translate("MainWindow", "Metallic"))
        self.prismatic_fossil.setText(_translate("MainWindow", "Prismatic"))
        self.pristine_fossil.setText(_translate("MainWindow", "Pristine"))
        self.scorched_fossil.setText(_translate("MainWindow", "Scorched"))
        self.serrated_fossil.setText(_translate("MainWindow", "Serrated"))
        self.shuddering_fossil.setText(_translate("MainWindow", "Shuddering"))
        self.hollow_fossil.setText(_translate("MainWindow", "Hollow"))
        self.sanctified_fossil.setText(_translate("MainWindow", "Sanctified"))
        self.glyphic_fossil.setText(_translate("MainWindow", "Glyphic"))
        self.fundamental_fossil.setText(_translate("MainWindow", "Fundamental"))
        self.deft_fossil.setText(_translate("MainWindow", "Deft"))
        self.gilded_fossil.setText(_translate("MainWindow", "Gilded"))
        self.perfect_fossil.setText(_translate("MainWindow", "Perfect"))
        self.tangled_fossil.setText(_translate("MainWindow", "Tangled"))
        self.harvest_hide_btn.setText(_translate("MainWindow", "Close\n"
" ➥"))
        self.harvest_method_label.setText(_translate("MainWindow", "METHOD"))
        self.harvest_add_remove_btn.setText(_translate("MainWindow", "Add/Remove"))
        self.harvest_reroll_btn.setText(_translate("MainWindow", "Reforge"))
        self.harvest_resists_btn.setText(_translate("MainWindow", "Resists"))
        self.harvest_high_tier_btn.setText(_translate("MainWindow", "High-Tier"))
        self.harvest_other_btn.setText(_translate("MainWindow", "Other"))
        self.harvest_type_label.setText(_translate("MainWindow", "TYPE"))
        self.attack_btn.setText(_translate("MainWindow", "Attack"))
        self.caster_btn.setText(_translate("MainWindow", "Caster"))
        self.chaos_btn.setText(_translate("MainWindow", "Chaos"))
        self.cold_btn.setText(_translate("MainWindow", "Cold"))
        self.critical_btn.setText(_translate("MainWindow", "Critical"))
        self.defences_btn.setText(_translate("MainWindow", "Defences"))
        self.fire_btn.setText(_translate("MainWindow", "Fire"))
        self.life_btn.setText(_translate("MainWindow", "Life"))
        self.lightning_btn.setText(_translate("MainWindow", "Lightning"))
        self.physical_btn.setText(_translate("MainWindow", "Physical"))
        self.speed_btn.setText(_translate("MainWindow", "Speed"))
        self.influence_btn.setText(_translate("MainWindow", "Influence"))
        self.harvest_resists_label.setText(_translate("MainWindow", "FROM>TO"))
        self.harvest_fire_to_cold_btn.setText(_translate("MainWindow", "Fire to Cold"))
        self.harvest_fire_to_lightning_btn.setText(_translate("MainWindow", "Fire to Lightning"))
        self.harvest_cold_to_fire_btn.setText(_translate("MainWindow", "Cold to Fire"))
        self.harvest_cold_to_lightning_btn.setText(_translate("MainWindow", "Cold to Lightning"))
        self.harvest_lightning_to_fire_btn.setText(_translate("MainWindow", "Lightning to Fire"))
        self.harvest_lightning_to_cold_btn.setText(_translate("MainWindow", "Lightning to Cold"))
        self.harvest_high_tier_label.setText(_translate("MainWindow", "OPTION"))
        self.harvest_normal_to_magic_one_btn.setText(_translate("MainWindow", "Normal to Magic > one mod"))
        self.harvest_normal_to_magic_two_btn.setText(_translate("MainWindow", "Normal to Magic > two mod"))
        self.harvest_magic_to_rare_two_btn.setText(_translate("MainWindow", "Magic to Rare > two mod"))
        self.harvest_magic_to_rare_three_btn.setText(_translate("MainWindow", "Magic to Rare > three mod"))
        self.harvest_magic_to_rare_four_btn.setText(_translate("MainWindow", "Magic to rare > four mod"))
        self.harvest_other_label.setText(_translate("MainWindow", "OPTION"))
        self.harvest_reforge_more_likely_btn.setText(_translate("MainWindow", "Reforge more likely"))
        self.harvest_reforge_less_likely_btn.setText(_translate("MainWindow", "Reforge less likely"))
        self.essence_tier_label.setText(_translate("MainWindow", "TIER"))
        self.t6_btn.setText(_translate("MainWindow", "T6"))
        self.t5_btn.setText(_translate("MainWindow", "T5"))
        self.t4_btn.setText(_translate("MainWindow", "T4"))
        self.t3_btn.setText(_translate("MainWindow", "T3"))
        self.t2_btn.setText(_translate("MainWindow", "T2"))
        self.t1_btn.setText(_translate("MainWindow", "T1"))
        self.essences_hide_btn.setText(_translate("MainWindow", "Close\n"
" ➥"))
        self.essences_label.setText(_translate("MainWindow", "ESSENCES"))
        self.essence_anger_btn.setText(_translate("MainWindow", "Anger"))
        self.essence_anguish_btn.setText(_translate("MainWindow", "Anguish"))
        self.essence_contempt_btn.setText(_translate("MainWindow", "Contempt"))
        self.essence_delirium_btn.setText(_translate("MainWindow", "Delirium"))
        self.essence_doubt_btn.setText(_translate("MainWindow", "Doubt"))
        self.essence_dread_btn.setText(_translate("MainWindow", "Dread"))
        self.essence_envy_btn.setText(_translate("MainWindow", "Envy"))
        self.essenc_fear_btn.setText(_translate("MainWindow", "Fear"))
        self.essence_greed.setText(_translate("MainWindow", "Greed"))
        self.essence_hatred.setText(_translate("MainWindow", "Hatred"))
        self.essence_horror_btn.setText(_translate("MainWindow", "Horror"))
        self.essence_hysteria_btn.setText(_translate("MainWindow", "Hysteria"))
        self.essence_insanity_btn.setText(_translate("MainWindow", "Insanity"))
        self.essence_loathing_btn.setText(_translate("MainWindow", "Loathing"))
        self.essence_misery_btn.setText(_translate("MainWindow", "Misery"))
        self.essence_rage_btn.setText(_translate("MainWindow", "Rage"))
        self.essence_scorn_btn.setText(_translate("MainWindow", "Scorn"))
        self.essence_sorrow_btn.setText(_translate("MainWindow", "Sorrow"))
        self.essence_spite_btn.setText(_translate("MainWindow", "Spite"))
        self.essence_suffering_btn.setText(_translate("MainWindow", "Suffering"))
        self.essence_torment_btn.setText(_translate("MainWindow", "Torment"))
        self.essence_woe_btn.setText(_translate("MainWindow", "Woe"))
        self.essence_wrath_btn.setText(_translate("MainWindow", "Wrath"))
        self.essence_zeal_btn.setText(_translate("MainWindow", "Zeal"))
        self.catalysts_hide_btn.setText(_translate("MainWindow", "Close\n"
" ➥"))
        self.catalyst_row_label.setText(_translate("MainWindow", "CATALYSTS"))
        self.intrinsic_catalyst_btn.setText(_translate("MainWindow", "Intrinsic"))
        self.abrasive_catalyst_btn.setText(_translate("MainWindow", "Abrasive"))
        self.prismatic_catalyst_btn.setText(_translate("MainWindow", "Prismatic"))
        self.fertile_catalyst_btn.setText(_translate("MainWindow", "Fertile"))
        self.imbued_catalyst_btn.setText(_translate("MainWindow", "Imbued"))
        self.tempering_catalyst_btn.setText(_translate("MainWindow", "Tempering"))
        self.turbulent_catalyst_btn.setText(_translate("MainWindow", "Turbulent"))
        self.accelerating_catalyst_btn.setText(_translate("MainWindow", "Accelerating"))
        self.unstable_catalyst_btn.setText(_translate("MainWindow", "Unstable"))
        self.noxious_catalyst_btn.setText(_translate("MainWindow", "Noxious"))
        self.catalyst_mode_label.setText(_translate("MainWindow", "MODE"))
        self.max_catalyst_btn.setText(_translate("MainWindow", "Maximum"))
        self.single_catalys_btn.setText(_translate("MainWindow", "Single"))
        self.beast_crafting_hide_btn.setText(_translate("MainWindow", "Close\n"
" ➥"))
        self.beast_crafting_methods_label.setText(_translate("MainWindow", "METHOD"))
        self.bprefix__to_suffix_btn.setText(_translate("MainWindow", "Prefix > Suffix"))
        self.bsuffix_to_prefix_btn.setText(_translate("MainWindow", "Suffix>Prefix"))
        self.bimprint_btn.setText(_translate("MainWindow", "Imprint"))
        self.breroll_values_btn.setText(_translate("MainWindow", "Reroll Values"))
        self.bcat_btn.setText(_translate("MainWindow", "Cat"))
        self.bavian_btn.setText(_translate("MainWindow", "Avian"))
        self.bspider_btn.setText(_translate("MainWindow", "Spider"))
        self.bcrab_btn.setText(_translate("MainWindow", "Crab"))
        self.eldritch_hide_btn.setText(_translate("MainWindow", "Close\n"
" ➥"))
        self.eldritch_method_label.setText(_translate("MainWindow", "METHOD"))
        self.eldritch_chaos_btn.setText(_translate("MainWindow", "Chaos"))
        self.eldritch_exalted_btn.setText(_translate("MainWindow", "Exalted"))
        self.eldritch_annul_btn.setText(_translate("MainWindow", "Annul"))
        self.orb_of_conflict_btn.setText(_translate("MainWindow", "Orb of Conflict"))
        self.lesser_ember_btn.setText(_translate("MainWindow", "Lesser Ember"))
        self.greater_ember_btn.setText(_translate("MainWindow", "Greater Ember"))
        self.grand_ember_btn.setText(_translate("MainWindow", "Grand Ember"))
        self.exceptional_ember_btn.setText(_translate("MainWindow", "Exceptional Ember"))
        self.lesser_ichor_btn.setText(_translate("MainWindow", "Lesser Ichor"))
        self.greater_icho_btn.setText(_translate("MainWindow", "Greater Ichor"))
        self.grand_ichor_btn.setText(_translate("MainWindow", "Grand Ichor"))
        self.exceptional_ichor_btn.setText(_translate("MainWindow", "Exceptional Ichor"))
        self.affix_search_bar.setPlaceholderText(_translate("MainWindow", "Search for an affix"))
        self.crafting_history.setItemText(self.crafting_history.indexOf(self.history_tab), _translate("MainWindow", "History"))
        self.crafting_history.setItemText(self.crafting_history.indexOf(self.spending_tab), _translate("MainWindow", "Spending"))
        self.crafting_history.setItemText(self.crafting_history.indexOf(self.export_tab), _translate("MainWindow", "Export"))
        self.clear_item_options.setToolTip(_translate("MainWindow", "Clear the selected item and reset the interface"))
        self.clear_item_options.setText(_translate("MainWindow", "Clear Item Options"))
        self.import_custom_item.setText(_translate("MainWindow", "Import Custom Item"))
        self.simulate_crafting.setText(_translate("MainWindow", "Simulate Crafting"))
        self.prefix_btn.setText(_translate("MainWindow", "PushButton"))
        self.suffix_btn.setText(_translate("MainWindow", "PushButton"))
        self.implicit_btn.setText(_translate("MainWindow", "PushButton"))
        self.prefix_info_1.setText(_translate("MainWindow", "PrefixInfo1"))
        self.prefix_1.setText(_translate("MainWindow", "Prefix1"))
        self.prefix_info_2.setText(_translate("MainWindow", "PrefixInfo2"))
        self.prefix_2.setText(_translate("MainWindow", "Prefix2"))
        self.prefix_info_3.setText(_translate("MainWindow", "PrefixInfo3"))
        self.prefix_3.setText(_translate("MainWindow", "Prefix3"))
        self.suffix_info_1.setText(_translate("MainWindow", "SuffixInfo1"))
        self.suffix_1.setText(_translate("MainWindow", "Suffix1"))
        self.suffix_info_2.setText(_translate("MainWindow", "SuffixInfo2"))
        self.suffix_2.setText(_translate("MainWindow", "Suffix2"))
        self.suffix_info_3.setText(_translate("MainWindow", "SuffixInfo3"))
        self.suffix_3.setText(_translate("MainWindow", "Suffix3"))
        self.menuCrafting.setTitle(_translate("MainWindow", "Crafting"))
        self.menuTrade_Info.setTitle(_translate("MainWindow", "Trade Info"))
        self.menuSettings.setTitle(_translate("MainWindow", "Settings"))
        self.actionStartOver.setText(_translate("MainWindow", "Start Over"))
        self.actionPOEDB_TW.setText(_translate("MainWindow", "POEDB.TW"))
        self.actionPrice_Checker.setText(_translate("MainWindow", "Price Checker"))
        self.actionPOE_NINJA.setText(_translate("MainWindow", "POE.NINJA"))
        self.actionPATHOFEXILE_COM_TRADE.setText(_translate("MainWindow", "PATHOFEXILE.COM/TRADE"))
        self.actionUI.setText(_translate("MainWindow", "UI"))
        self.actionTrade.setText(_translate("MainWindow", "Trade"))
        self.actionCrafting.setText(_translate("MainWindow", "Crafting"))
        self.actionCrafting_Tutorials.setText(_translate("MainWindow", "Crafting Tutorials"))
        self.action.setText(_translate("MainWindow", "Search for an affix"))
from .pages.base_selection import BaseSelection
from .customcursorbutton import CustomCursorButton
from .customtreeview import CustomTreeView
from .pages.item_selection import ItemSelection
from . import assets_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
